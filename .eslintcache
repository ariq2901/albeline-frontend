[{"A:\\Tugas Akhir\\marketplacef\\src\\index.js":"1","A:\\Tugas Akhir\\marketplacef\\src\\App.js":"2","A:\\Tugas Akhir\\marketplacef\\src\\reportWebVitals.js":"3","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Navbar.jsx":"4","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\index.jsx":"5","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Header.jsx":"6","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Banner.jsx":"7","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Product.jsx":"8","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Card.jsx":"9","A:\\Tugas Akhir\\marketplacef\\src\\config.js":"10","A:\\Tugas Akhir\\marketplacef\\src\\utils\\index.js":"11","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\SliderCustomized.jsx":"12","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\FeaturedProduct.jsx":"13","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Quickview.jsx":"14","A:\\Tugas Akhir\\marketplacef\\src\\redux\\index.js":"15","A:\\Tugas Akhir\\marketplacef\\src\\redux\\store.js":"16","A:\\Tugas Akhir\\marketplacef\\src\\redux\\reducer.js":"17","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Detail\\index.jsx":"18","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\ProductHome.jsx":"19","A:\\Tugas Akhir\\marketplacef\\src\\config\\firebase\\index.js":"20","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\index.jsx":"21","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Login\\index.jsx":"22","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\index.js":"23","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Signup\\index.jsx":"24","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\pushnotification\\index.jsx":"25","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\ListProduct\\index.jsx":"26","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Register\\index.jsx":"27","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\index.jsx":"28","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Dashboard\\index.jsx":"29","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Menu\\index.jsx":"30","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Products\\index.jsx":"31","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\add.jsx":"32","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\upload.jsx":"33","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\Dropzone.jsx":"34","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\Dropzone.jsx":"35","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\ImageLoad.jsx":"36","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Guarder\\AuthGuarder.jsx":"37","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Notfound.jsx":"38","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\GettingStarted.jsx":"39","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Cart\\index.jsx":"40","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Checkout\\index.jsx":"41","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Settings\\index.jsx":"42","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\index.jsx":"43","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Menu\\index.jsx":"44","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\ratingpicker\\index.jsx":"45","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\edit.jsx":"46","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Tracking\\index.jsx":"47","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Orders\\index.jsx":"48","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\ForgotPassword\\index.jsx":"49","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\CallbackResetPassword\\index.jsx":"50","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Settings\\index.jsx":"51","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Wishlist\\index.jsx":"52","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Footer.jsx":"53"},{"size":603,"mtime":1611553093035,"results":"54","hashOfConfig":"55"},{"size":2528,"mtime":1614744971121,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"55"},{"size":13995,"mtime":1614780526947,"results":"58","hashOfConfig":"55"},{"size":321,"mtime":1612401353344,"results":"59","hashOfConfig":"55"},{"size":5151,"mtime":1614742136023,"results":"60","hashOfConfig":"55"},{"size":779,"mtime":1614736015129,"results":"61","hashOfConfig":"55"},{"size":1967,"mtime":1614744753993,"results":"62","hashOfConfig":"55"},{"size":10677,"mtime":1614765249444,"results":"63","hashOfConfig":"55"},{"size":283,"mtime":1614832175889,"results":"64","hashOfConfig":"55"},{"size":5924,"mtime":1614584107001,"results":"65","hashOfConfig":"55"},{"size":280,"mtime":1608730507114,"results":"66","hashOfConfig":"55"},{"size":2770,"mtime":1614744520292,"results":"67","hashOfConfig":"55"},{"size":7604,"mtime":1614742761205,"results":"68","hashOfConfig":"55"},{"size":49,"mtime":1608893704687,"results":"69","hashOfConfig":"55"},{"size":212,"mtime":1608893696625,"results":"70","hashOfConfig":"55"},{"size":2432,"mtime":1613888558679,"results":"71","hashOfConfig":"55"},{"size":20470,"mtime":1614740414352,"results":"72","hashOfConfig":"55"},{"size":5731,"mtime":1614765260599,"results":"73","hashOfConfig":"55"},{"size":530,"mtime":1611589861701,"results":"74","hashOfConfig":"55"},{"size":6935,"mtime":1613614373390,"results":"75","hashOfConfig":"55"},{"size":5755,"mtime":1614739583750,"results":"76","hashOfConfig":"55"},{"size":2501,"mtime":1614442255684,"results":"77","hashOfConfig":"55"},{"size":9636,"mtime":1614755168262,"results":"78","hashOfConfig":"55"},{"size":758,"mtime":1611589878052,"results":"79","hashOfConfig":"55"},{"size":6860,"mtime":1614831368070,"results":"80","hashOfConfig":"55"},{"size":5613,"mtime":1614832358724,"results":"81","hashOfConfig":"55"},{"size":1922,"mtime":1614650812334,"results":"82","hashOfConfig":"55"},{"size":3158,"mtime":1614748061568,"results":"83","hashOfConfig":"55"},{"size":1101,"mtime":1614237265239,"results":"84","hashOfConfig":"55"},{"size":3748,"mtime":1614106648058,"results":"85","hashOfConfig":"55"},{"size":10762,"mtime":1613017378259,"results":"86","hashOfConfig":"55"},{"size":8991,"mtime":1614649375176,"results":"87","hashOfConfig":"55"},{"size":864,"mtime":1613062506288,"results":"88","hashOfConfig":"55"},{"size":907,"mtime":1613097149354,"results":"89","hashOfConfig":"55"},{"size":764,"mtime":1614651963132,"results":"90","hashOfConfig":"55"},{"size":478,"mtime":1613267562715,"results":"91","hashOfConfig":"55"},{"size":1278,"mtime":1613470486158,"results":"92","hashOfConfig":"55"},{"size":2500,"mtime":1614751947644,"results":"93","hashOfConfig":"55"},{"size":8494,"mtime":1614158412725,"results":"94","hashOfConfig":"55"},{"size":17025,"mtime":1614832708430,"results":"95","hashOfConfig":"55"},{"size":13209,"mtime":1614832352347,"results":"96","hashOfConfig":"55"},{"size":1224,"mtime":1614747437847,"results":"97","hashOfConfig":"55"},{"size":1076,"mtime":1614743134110,"results":"98","hashOfConfig":"55"},{"size":396,"mtime":1614424596876,"results":"99","hashOfConfig":"55"},{"size":11849,"mtime":1614104603767,"results":"100","hashOfConfig":"55"},{"size":8899,"mtime":1614424609675,"results":"101","hashOfConfig":"55"},{"size":6041,"mtime":1614423265137,"results":"102","hashOfConfig":"55"},{"size":3511,"mtime":1614447427752,"results":"103","hashOfConfig":"55"},{"size":2039,"mtime":1614750347623,"results":"104","hashOfConfig":"55"},{"size":8318,"mtime":1614832465663,"results":"105","hashOfConfig":"55"},{"size":1835,"mtime":1614743918704,"results":"106","hashOfConfig":"55"},{"size":3534,"mtime":1614747265175,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1wqobg6",{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"110"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"A:\\Tugas Akhir\\marketplacef\\src\\index.js",[],["242","243"],"A:\\Tugas Akhir\\marketplacef\\src\\App.js",["244","245"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Navbar from \"./Pages/Navbar\";\nimport Home from \"./Pages/Home\";\nimport Detail from \"./Pages/Detail\";\nimport Quickview from \"./Pages/Components/Quickview\";\nimport { OfflineAlert } from \"./utils\";\nimport { store } from \"./redux\";\nimport { Provider } from \"react-redux\";\nimport Cart from \"./Pages/Buyer/Cart\";\nimport UploadImage from \"./experiment/uploadImage\";\nimport RatingPicker from \"./experiment/ratingpicker\";\nimport Credential from \"./Pages/Credentials\";\nimport { PushNotification } from \"./experiment/pushnotification\";\nimport ListProduct from \"./Pages/ListProduct\";\nimport Register from \"./Pages/Store/Register\";\nimport Seller from \"./Pages/Store\";\nimport AuthGuarder from \"./Pages/Guarder/AuthGuarder\";\nimport NotFound from \"./Pages/Components/Notfound\";\nimport Checkout from \"./Pages/Buyer/Checkout\";\nimport User from \"./Pages/User\";\nimport ResetPassword from \"./Pages/Credentials/CallbackResetPassword\";\nimport Footer from \"./Pages/Components/Footer\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/products\">\n            <ListProduct />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <Detail />\n          </Route>\n          <AuthGuarder path=\"/user\">\n            <User />\n          </AuthGuarder>\n          <AuthGuarder path=\"/cart\" exact>\n            <Cart />\n          </AuthGuarder>\n          <AuthGuarder path=\"/order-checkout\" exact>\n            <Checkout />\n          </AuthGuarder>\n          <AuthGuarder path=\"/open-shop\">\n            <Register />\n          </AuthGuarder>\n          <AuthGuarder path=\"/seller\">\n            <Seller />\n          </AuthGuarder>\n          <Route path=\"/experiment-rating-picker\">\n            <RatingPicker/>\n          </Route>\n          <AuthGuarder path=\"/cart/checkout\">\n            <Checkout />\n          </AuthGuarder>\n          <Route path=\"/password/reset/:token/:email\" exact>\n            <ResetPassword />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n      {/* <PushNotification /> */}\n      <Credential />\n      <Quickview />\n      <OfflineAlert />\n    </Provider>\n  );\n}\n\nexport default App;\n","A:\\Tugas Akhir\\marketplacef\\src\\reportWebVitals.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Navbar.jsx",["246","247","248","249","250","251","252","253","254"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { Link, NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport Loader from 'react-spinners/BeatLoader';\r\nimport Logo from \"../assets/images/Logo.png\";\r\nimport SignoutIco from \"../assets/images/icons/signout.jpg\";\r\nimport SearchIco from \"../assets/images/icons/search-ico.webp\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { config } from \"../config\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nconst cookies = new Cookies();\r\n\r\nconst Navbar = () => {\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const RegisterShop = useSelector(state => state.RegisterShop);\r\n  const RenderReducer = useSelector(state => state.RenderReducer);\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [render, setRender] = useState(0);\r\n  const [clicked, setClicked] = useState(false);\r\n  const [search, setSearch] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [display, setDisplay] = useState(false);\r\n  const [menu, setMenu] = useState(false);\r\n  const [megamenu, setMegamenu] = useState(false);\r\n  const [store, setStore] = useState();\r\n  const [options, setOptions] = useState([]);\r\n  const login = cookies.get(\"login\");\r\n  const searchRef = useRef(null);\r\n  let node = useRef();\r\n  let nodeMegamenu = useRef();\r\n  let history = useHistory();\r\n  \r\n  const getCategories = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/category`;\r\n    \r\n    try {\r\n      const response = await Axios.get(url);\r\n      if (!unmounted) {\r\n        setCategories(response.data.categories);\r\n      }\r\n    } catch (error) {\r\n      if (!unmounted) {\r\n        console.error(error.message);\r\n        if(Axios.isCancel(error)) {\r\n          console.log(`request cancelled: ${error.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + error.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const loginPopup = (truep) => {\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: truep });\r\n  };\r\n\r\n  const checkUserStore = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/check-store`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    \r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setStore(response.data.message);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleCart = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const auth = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    console.log('masuk sini');\r\n    try {\r\n      const response = await Axios.get(url, {headers: auth, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotal(response.data.data.products.length);\r\n        console.log('response cart navbar', response);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if (Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const logout = async () => {\r\n    const url = `${config.api_host}/api/logout`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    try {\r\n      const response = await Axios.get(url, {headers: header});\r\n      console.log('response logout', response)\r\n      cookies.remove('user', {path: '/'});\r\n      cookies.remove('user_token', {path: '/'});\r\n      cookies.remove('login', {path: '/'});\r\n      Swal.fire({icon: 'success', title: 'Success Logout!', text: 'Don\\'t forget to come again next time!', allowOutsideClick: false}).then(() => {window.location.replace(\"http://localhost:3000/\")});\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      Swal.fire({icon: 'error', title: 'Oops...', text: e.message});\r\n    }\r\n  }\r\n\r\n  const keyDown = e => {\r\n    e.preventDefault();\r\n    const url = `${config.api_host}/api/search/products`;\r\n    let name = document.getElementById('search-product').value;\r\n    let payload = {name};\r\n\r\n    console.log('payload', payload);\r\n    Axios.post(url, payload)\r\n    .then(response => {\r\n      setOptions(response.data.products);\r\n    }).catch(e => {\r\n      console.error('Failure: ', e);\r\n    })\r\n  }\r\n\r\n  const handleMenu = event => {\r\n    if (cookies.get('login') === true) {\r\n      if (node.current.contains(event.target)) {\r\n        return;\r\n      } \r\n      setMenu(false);\r\n    }\r\n    return;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    const {current: wrap} = searchRef;\r\n\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  }\r\n\r\n  const setProduct = product => {\r\n    setSearch(product);\r\n    history.push({\r\n      pathname: `/detail/${product}`,\r\n    })\r\n    setDisplay(false);\r\n  }\r\n\r\n  const handleDisplay = () => {\r\n    let name = document.getElementById('search-product').value;\r\n    if (name.length > 0) {\r\n      setDisplay(true);\r\n      return;\r\n    }\r\n    setDisplay(false);\r\n  }\r\n\r\n  const handleMegamenu = event => {\r\n    if (nodeMegamenu.current.contains(event.target)) {\r\n      return;\r\n    } \r\n    setMegamenu(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    if (cookies.get('user_token') !== null) {\r\n      checkUserStore(source.token, unmounted);\r\n    }\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [RegisterShop.registered, RenderReducer.render]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    handleCart(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [CartReducer.render]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    document.addEventListener('mousedown', handleMegamenu);\r\n    if (login) {\r\n      document.addEventListener('mousedown', handleMenu);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n      document.removeEventListener('mousedown', handleMenu);\r\n      document.removeEventListener('mousedown', handleMegamenu);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav>\r\n        <div className=\"container\">\r\n          <div className=\"nav-wrapper\">\r\n            <ul className=\"logo-wrapper\">\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }} className=\"logo\">\r\n                <img src={Logo} alt=\"logo\" />\r\n              </Link>\r\n              <li><Link to=\"/products\" className=\"products-nav\">Products</Link></li>\r\n              <li className=\"dropdown\">\r\n                <label htmlFor=\"megamenu-check\" className=\"megamenu-check-label\">\r\n                  Category\r\n                </label>\r\n                <div className=\"menu\">\r\n                  <input type=\"checkbox\" id=\"megamenu-check\" onChange={(e) => {setMegamenu(!megamenu);}}/>\r\n                  <i className={megamenu ? \"fas fa-chevron-down arrow-bawah rotate\" : \"fas fa-chevron-down arrow-bawah\"}></i>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className={login === undefined ? \"guest-wrapper\" : \"addon-wrapper\"}>\r\n              <div className={input ? \"search-input-wrapper active\" : \"search-input-wrapper\"}>\r\n                <div className=\"search-input\">\r\n                  <form onSubmit={search} className={input ? \"active\" : \"\"}>\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={e => {keyDown(e);handleDisplay();}} className={input ? \"active\" : \"\"} id=\"search-product\" />\r\n                  </form>\r\n                  <button className=\"search-btn\" onClick={(e) => setInput(!input)}>\r\n                    {input ? <i class=\"bi bi-x s-logo\"></i> : <div className=\"s-logo-wrapper\"><img src={SearchIco} /></div>} {/*<i className=\"bi bi-search s-logo\"></i> <i class=\"fas fa-search s-logo\"></i>*/}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {login === undefined ? (\r\n                <button className=\"nav-login-btn\" onClick={() => {setClicked(true);loginPopup(true);}} > Login </button>\r\n              ) : (\r\n                <Fragment>\r\n                  <NavLink className=\"cart\" to=\"/cart\">\r\n                    {total > 0 ? (\r\n                      <div className=\"badge-cart\"><span>{total}</span></div>\r\n                    ) : null}\r\n                    <i className=\"bi bi-cart2\"></i>\r\n                  </NavLink>\r\n                  <NavLink to=\"/user/wishlist\" className=\"wishlist\">\r\n                    <i class=\"bi bi-heart\"></i>\r\n                  </NavLink>\r\n                  <button className=\"account\">\r\n                    <div ref={node} className={menu ? \"menu\" : \"menu hide\"}>\r\n                      <div className=\"user-banner\">\r\n                        <div className=\"user-img-round\"><img src={`${config.api_host}/api/image/${cookies.get('user').image.id}`} alt=\"user\"/></div>\r\n                        <div className=\"user-greeting\">\r\n                          <span className=\"greeting\">{cookies.get('user').username}</span>\r\n                          <span className=\"email-user\">{cookies.get('user').email}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"menu-action\">\r\n                        <div className=\"user-store\">\r\n                          {store ? <button><Link to=\"/seller/dashboard\">Seller Dashboard</Link></button> : <button><Link to=\"/open-shop\">Open Shop</Link></button>}\r\n                        </div>\r\n                        <div className=\"more\">\r\n                          <Link to=\"/user/track\">Track Your Order</Link>\r\n                          <Link to=\"/user/wishlist\">Wishlist</Link>\r\n                          <Link to=\"/user/settings\">Settings</Link>\r\n                          <div className=\"signout\" onClick={logout}>Sign out <img src={SignoutIco} alt=\"ico\"/></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"account-img\" onClick={() => setMenu(!menu)} >\r\n                      <img src={`${config.api_host}/api/image/${cookies.get('user').image.id}`} alt=\"profile\" />\r\n                    </div>\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display && (\r\n          <div ref={searchRef} className=\"auto-container\">\r\n            {options.slice(0, 5).map((v, i) =>{\r\n              return (\r\n                <div onClick={() => setProduct(v.id)} className=\"auto-option\" key={i} tabIndex=\"0\">\r\n                  <div className=\"icon-option\">\r\n                    <img src={`${config.api_host}/api/image/${v.images[0].id}`} alt=\"img-ico\"/>\r\n                  </div>\r\n                  <div className=\"name-option\">\r\n                    <span>{v.name}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n        <div ref={nodeMegamenu} className={megamenu ? \"megamenu\" : \"megamenu-hidden\"}>\r\n          <div className=\"container pt-4\">\r\n            <div className=\"megamenu-title\">\r\n              <div className=\"p-categories\">\r\n                <p className=\"popular-title\">popular categories</p>\r\n              </div>\r\n              <div className=\"p-searches\">\r\n                <p className=\"popular-searches\">popular searches</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"megamenu-main\">\r\n              {loading ? (\r\n                <div className=\"loader-category\">\r\n                  <Loader type=\"ThreeDots\" color=\"#439CEF\" height=\"80\" width=\"80\" />\r\n                </div>\r\n              ) : (\r\n              <div className=\"category-list\">\r\n              {categories.map((category, i) => \r\n                <div className=\"category-wrapper\" key={i} onClick={() => history.push(`/products?category=${category.id}`)}>\r\n                  <img src={`${config.api_host}/api/image/${category.image.id}`} alt=\"icon\" />\r\n                  <p>{category.name}</p>\r\n                </div>\r\n              )}\r\n              </div>\r\n              )}\r\n              <div className=\"search-list\">\r\n                <Link className=\"search-wrapper\" to=\"/detail/3\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                  <p>Playstation 4</p>\r\n                </Link>\r\n                <Link className=\"search-wrapper\" to=\"/detail/5\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                  <p>Apple Iphone 12</p>\r\n                </Link>\r\n                <Link className=\"search-wrapper\" to=\"/detail/4\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                  <p>Adidas Alphabounce</p>\r\n                </Link>\r\n                <Link className=\"search-wrapper\" to=\"/detail/8\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                  <p>Oven Konka</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\index.jsx",["255","256"],"import React, { Fragment } from 'react';\r\nimport Header from './Header';\r\nimport ProductHome from './ProductHome';\r\nimport Quickview from '../Components/Quickview';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"overlay-popup\">\r\n      <Header />\r\n      <ProductHome />\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Header.jsx",["257"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport { config } from '../../config';\r\nimport Axios from 'axios';\r\nimport ImageLoad from '../Components/ImageLoad';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport Placeholder from '../../assets/images/placeholder.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const [bigBanner, setBigBanner] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loop, setLoop] = useState([1,2,3,4,5]);\r\n  let history = useHistory()\r\n\r\n  const getCategories = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/category`;\r\n\r\n    try {\r\n      const response = await Axios.get(url);\r\n      if (!unmounted) {\r\n        setCategories(response.data.categories);\r\n      }\r\n    } catch (error) {\r\n      if (!unmounted) {\r\n        console.error(error.message);\r\n        if (Axios.isCancel(error)) {\r\n          console.log(`request cancelled: ${error.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + error.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getBigBanner(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('cleaning up request');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  async function getBigBanner(unmounted, token) {\r\n    const url = `${config.api_host}/api/banners/big`;\r\n    setLoading(true)\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setBigBanner(response.data.banners);\r\n      }\r\n      setLoading(false)\r\n    } catch (error) {\r\n      if (Axios.isCancel(error)) {\r\n        console.error('request cancelled', error);\r\n      } else {\r\n        console.error('another error happened', error);\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const settings = {\r\n    className: \"center\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    centerPadding: \"220px\",\r\n    slidesToShow: 1,\r\n    speed: 800,\r\n    autoplay: true,\r\n    autoplaySpeed: 4000,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    responsive: [{\r\n      breakpoint: 700,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        initialSlide: 1,\r\n        centerPadding: \"0px\",\r\n      }\r\n    }]\r\n  };\r\n\r\n  var settings2 = {\r\n    dots: false,\r\n    slidesToShow: 11,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    initialSlide: 0,\r\n    responsive: [{\r\n      breakpoint: 700,\r\n      settings: {\r\n        slidesToShow: 5,\r\n        slidesToScroll: 1,\r\n        initialSlide: 5\r\n      }\r\n    }]\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n      {console.log(\"CATEGORIES\", categories)}\r\n      <section className=\"home-header\">\r\n        <div className=\"container\">\r\n          <div className=\"content-header\">\r\n            <Slider {...settings} className=\"content3-item\">\r\n              {\r\n                loading ?\r\n                loop.map((l,i) => \r\n                <div className=\"big-banner-wrapper\" key={i}>\r\n                  <div className=\"big-banner h-100 d-flex justify-content-center align-items-center\" style={{ background: \"linear-gradient(to right, #ddd, #eee)\" }}>\r\n                    <PulseLoader color=\"#ff581a\" size=\"12\" />\r\n                  </div>\r\n                </div>\r\n                )\r\n                :\r\n                bigBanner.map((image, i) =>\r\n                <div key={i} className=\"big-banner-wrapper\">\r\n                  <div className=\"big-banner\">\r\n                    <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${image.image.id}`} alt=\"banner\"/>\r\n                  </div>\r\n                </div>\r\n                )\r\n              }\r\n            </Slider>\r\n          </div>\r\n          <div className=\"category-grid-ico\">\r\n\r\n            <Slider {...settings2} className=\"categories-slider\">\r\n\r\n              {\r\n                categories.map((category, i) =>\r\n                  <div className=\"cat-ico-wrapper\" key={i} onClick={() => history.push(`/products?category=${category.id}`)}>\r\n                    <div className=\"cat-ico\">\r\n                      <img src={`${config.api_host}/api/image/${category.image.id}`} alt=\"ico\"/>\r\n                    </div>\r\n                    <span style={{ color: '#8296ab' }}>{category.name}</span>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            </Slider>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Header;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Banner.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Product.jsx",["258","259","260"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Card, SkeletonCard } from '../Components/Card';\r\nimport Axios from 'axios';\r\nimport { config } from '../../config';\r\n\r\nconst Product = () => {\r\n\r\n  const [product, setProduct] = useState([]);\r\n  //eslint-disable-next-line\r\n  const [loading, setLoading] = useState(false);\r\n  const [rekomendasi, setRekomendasi] = useState(true);\r\n  const [gratisongkir, setGratisongkir] = useState(false);\r\n  const [id, setId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getData(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('cleaning up request');\r\n    }\r\n  }, []);\r\n\r\n  function getData(unmounted, token) {\r\n    const url = `${config.api_host}/api/products`;\r\n\r\n    setLoading(true)\r\n    Axios.get(url, {cancelToken: token})\r\n    .then(res => {\r\n      if (!unmounted) {\r\n        setProduct(res.data.products);\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container spacing-section\">\r\n        <div className=\"product-wrapper\">\r\n          <div className=\"tab-bar\">\r\n            <ul>\r\n              <li onClick={e => {setRekomendasi(true); setGratisongkir(false);}} className={rekomendasi ? \"active-bar\" : \"\"}>{rekomendasi ? <div className=\"line-bar\"></div> : null}Rekomendasi</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"card-wrapper\">\r\n            {\r\n              loading ? SkeletonCard(10) :\r\n              \r\n              product.map((product, i) => \r\n                <Card key={i} image={product.images[0].id} name={product.name} rating={product.rate} sold={product.sold} productId={product.id} price={product.price} />\r\n              )\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Product;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Card.jsx",["261","262","263","264","265","266","267","268"],"import React, { Fragment } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { config } from \"../../config\";\r\nimport { currencyFormatter, ratingFormatter, soldFormatter } from '../../utils';\r\nimport ImageLoad from './ImageLoad';\r\nimport Placeholder from '../../assets/images/clip-art/placeholder.png';\r\nimport { useState } from 'react';\r\nimport HashLoader from 'react-spinners/HashLoader';\r\nimport { useEffect } from 'react';\r\n//TODO Tambah Model Card\r\n\r\nexport const SkeletonCard = (total) => {\r\n  const skeleton = [];\r\n  for (let i = 0; i < total; i++) {\r\n    skeleton.push(\r\n      <div className=\"card-bp loading-wrapping\">\r\n        <div className=\"card-bp-img loading\">\r\n        </div>\r\n        <div className=\"info loadings\">\r\n          <div className=\"product-name-wrapper loading\">\r\n            <span className=\"product-bp-name\"></span>\r\n          </div>\r\n          <div className=\"line-two loading\"></div>\r\n          <div className=\"info-bp-product loading\">\r\n            <span className=\"product-bp-price\"></span>\r\n            <span className=\"product-bp-sold\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n\r\n  return skeleton;\r\n}\r\n\r\n\r\nexport const Card = ({ image, name, rating, productId, price, sold }) => {\r\n  return (\r\n    <Fragment>\r\n      <Link to={`/detail/${productId}`} className=\"card-p\">\r\n        <div className=\"card-img\">\r\n          <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${image}`} alt=\"overlay\"/>\r\n        </div>\r\n        <div className=\"card-info\">\r\n          <div className=\"product-name\">{name}</div>\r\n          <div className=\"product-scale\">\r\n            <div className=\"harga\">{currencyFormatter(price)}</div>\r\n            <div className=\"terjual\">{soldFormatter(sold)}</div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport const Card2 = ({image, name, productId, harga}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card-f\">\r\n        <div className=\"cardf-img\">\r\n          <ImageLoad placeholderSrc={Placeholder} src={`${config.api_host}/api/image/${image}`} alt=\"product\"/>\r\n        </div>\r\n        <div className=\"cardf-info\">\r\n          <div className=\"productf-name\">{name}</div>\r\n          <div className=\"productf-harga\">{currencyFormatter(harga)}</div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport const Card4 = ({image, name, productId, price, sold, wishlist, onQuickview, onWishlist, onCart, loading}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card-bp\">\r\n        <div className=\"overlay-card\">\r\n          <div onClick={onQuickview} className=\"quickview\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\r\n              <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\r\n            </svg>\r\n          </div>\r\n          <div className=\"action-ico\">\r\n            <button disabled={loading} onClick={onCart} className=\"checkout-btn\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" class=\"bi bi-bag-check\" viewBox=\"0 0 16 16\">\r\n                <path fillRule=\"evenodd\" d=\"M8 1a2.5 2.5 0 0 0-2.5 2.5V4h5v-.5A2.5 2.5 0 0 0 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V5H2z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M10.854 8.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n              </svg>\r\n              <span>Add To Cart</span>\r\n            </button>\r\n            <div onClick={onWishlist} className=\"wishlist-btn\">\r\n              {wishlist ? <i class=\"bi bi-heart-fill after\"></i> : <i class=\"bi bi-heart-fill before\"></i>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-bp-img\">\r\n          <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${image}`} alt=\"pimage\"/>\r\n        </div>\r\n        <NavLink to={`/detail/${productId}`} className=\"info\">\r\n          <div className=\"product-name-wrapper\">\r\n            <span className=\"product-bp-name\">{name}</span>\r\n          </div>\r\n          <div className=\"info-bp-product\">\r\n            <span className=\"product-bp-price\">{currencyFormatter(price)}</span>\r\n            <span className=\"product-bp-sold\">{soldFormatter(sold)}</span>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport const ReviewCard = ({ comment, rate, username, avatar, created_at }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"review-card\">\r\n        <div className=\"review-status\">\r\n          <div className=\"reviewer\">\r\n            <div className=\"reviewer-img\">\r\n              <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${avatar}`} alt=\"reviewer\"/>\r\n            </div>\r\n            <div className=\"reviewer-side\">\r\n              <span className=\"username\">{username}</span>\r\n              <span className=\"created\">{created_at}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"review-star\">\r\n            {ratingFormatter(rate)}\r\n          </div>\r\n        </div>\r\n        <div className=\"review-comment\">\r\n          <span>{comment}</span>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport const CardList = ({image, name, productId, price, sold, rate}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"product-card\">\r\n        <div className=\"product-card-image-wrapper\">\r\n          <div className=\"product-card-image\">\r\n            <ImageLoad src={`${config.api_host}/api/image/${image}`} placeholder={Placeholder} alt=\"img-card\"/>\r\n          </div>\r\n        </div>\r\n        <Link to={`/detail/${productId}`} className=\"product-card-info\">\r\n          <div className=\"product-card-name\">\r\n            <span>{name}</span>\r\n          </div>\r\n          <div className=\"product-card-below\">\r\n            <span>{currencyFormatter(price)}</span>\r\n            <div>{ratingFormatter(rate)}</div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport const OrderCard = ({ productId, name, image, price, orderAmount, totalProductPrice, weight, onClick, orderId, loading, currProductId, currOrderId, type, trackOpt, onPopup, onReview }) => {\r\n  const [btnContent, setBtnContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    switch (trackOpt) {\r\n      case 1:\r\n        switch (type) {\r\n          case \"seller\":\r\n            setBtnContent('Confirm Order');\r\n            break;\r\n            \r\n          default:\r\n            setBtnContent('Buy again')\r\n            break;\r\n        }\r\n        break;\r\n      case 2:\r\n        switch (type) {\r\n          case \"seller\":\r\n            setBtnContent('Ready To Go');\r\n            break;\r\n        \r\n          default:\r\n            setBtnContent('Buy again')\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        switch (type) {\r\n          case \"seller\":\r\n            setBtnContent('waiting for confirmation of received order');\r\n            break;\r\n        \r\n          default:\r\n            setBtnContent('confirm arrived order');\r\n            break;\r\n        }\r\n        break;\r\n      case 4:\r\n        switch (type) {\r\n          case \"seller\":\r\n            setBtnContent('order finish');\r\n            break;\r\n        \r\n          default:\r\n            setBtnContent('leave a review');\r\n            break;\r\n        }\r\n        break;\r\n      \r\n      default:\r\n        break;\r\n    }\r\n  }, [trackOpt])\r\n\r\n  const disabledBtn = {\r\n    width: '60%',\r\n    backgroundColor: '#e7e7e7',\r\n    color: '#8e8e8e',\r\n    cursor: 'not-allowed'\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"order-card\">\r\n        <div className=\"order-left\">\r\n          <div className=\"order-img-wrapper\">\r\n            <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${image}`} alt=\"product ico\" />\r\n          </div>\r\n          <div className=\"order-info\">\r\n            <p>{name}</p>\r\n            <div className=\"order-variant\">\r\n              <div className=\"product-price\" style={{ color: type===\"seller\" ? '#ef3700' : '' }}>{currencyFormatter(price)}</div>\r\n              <div className=\"product-weight\">{orderAmount} Product ({weight} gram)</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"order-right\">\r\n          <div className=\"total-price\">\r\n            <p>Total Product Price</p>\r\n            <div className=\"product-price\" style={{ color: type===\"seller\" ? '#ef3700' : '' }}>{currencyFormatter(totalProductPrice)}</div>\r\n          </div>\r\n          {\r\n            trackOpt===4 && type===\"seller\" ?\r\n            (\r\n              <span class=\"badge bg-success text-white d-flex align-items-center justify-content-center\" style={{ width: '20%', height: '20px' }}>order done</span>\r\n            ) : trackOpt===4 && type===\"buyer\" ? (\r\n              <Fragment>\r\n                <button className=\"status-action-btn\" disabled={loading} style={{ width: '50%' }} onClick={onReview}>{btnContent}</button>  \r\n              </Fragment>\r\n            ) : trackOpt===2 && type===\"seller\" ? (\r\n              <Fragment>\r\n                <div className=\"dest-status-actions\">\r\n                  <button className=\"status-action-btn\" disabled={loading} style={{ cursor: loading ? 'not-allowed' : 'pointer', backgroundColor: type===\"seller\" ? '#fe9800' : '' }} onClick={onClick}>{ loading && currOrderId === orderId ? <HashLoader size=\"18\" color=\"#fff\"/> : btnContent}</button>\r\n                  <button className=\"destination-info-btn\" onClick={onPopup}>Destination info</button>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <button className=\"status-action-btn\" disabled={loading || trackOpt===3 && type===\"seller\"} style={ trackOpt===3 && type===\"seller\" ? disabledBtn : { width: '50%', cursor: loading ? 'not-allowed' : 'pointer', backgroundColor: type===\"seller\" ? '#fe9800' : '' }} onClick={onClick}>{loading && currProductId === productId || loading && currOrderId === orderId ? <HashLoader size=\"18\" color=\"#fff\"/> : btnContent}</button>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","A:\\Tugas Akhir\\marketplacef\\src\\config.js",["269"],"A:\\Tugas Akhir\\marketplacef\\src\\utils\\index.js",["270","271","272"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport const currencyFormatter = (duit) => {\r\n  let int = parseInt(duit);\r\n  if(int !== undefined) {\r\n    return int.toLocaleString('id-ID', {\r\n      style: 'currency',\r\n      currency: 'IDR'\r\n    }).slice(0, -3);\r\n  } else {\r\n    console.error('Parameter duit gak ada valuenya. duit : ', int);\r\n  }\r\n}\r\n\r\nexport const soldFormatter = (terjual) => {\r\n  if(terjual !== undefined) {\r\n    if(terjual !== null) {\r\n      return `${terjual} Terjual`\r\n    } else {\r\n      return '';\r\n    }\r\n  } else {\r\n    console.error('Parameter Terjual gak ada valuenya. Terjual : ', terjual);\r\n  }\r\n}\r\n\r\nexport const inStockFormatter = (jumlah) => {\r\n  if( jumlah !== undefined ) {\r\n    if( jumlah !== 0 ) {\r\n      return (\r\n        <Fragment>\r\n          <span className=\"in-stock\"><i class=\"bi bi-check2-circle\"></i> <span>In stock</span></span>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <span className=\"out-of-stock\"><i class=\"bi bi-check2\"></i> <span>Out of stock</span></span>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const ratingTextFormatter = (rating) => {\r\n  if( rating !== undefined ) {\r\n    const rate = parseInt(rating);\r\n    if(rate % 1 === 0) {\r\n      console.log('rating', typeof rate);\r\n      return rate.toFixed(1);\r\n    } else {\r\n      return rating;\r\n    }\r\n  }\r\n}\r\n\r\nexport const ratingFormatter = (rating) => {\r\n  if(rating !== undefined ) {\r\n    if (rating === null) {\r\n      return (<span>Be the first to rate this product</span>);\r\n    } else {\r\n      const starsComponent = [];\r\n      const modulus = rating % 1;\r\n      const ratingCountFloored = Math.floor(rating);\r\n    \r\n      for(let i=0;i<ratingCountFloored;i++) {\r\n        starsComponent.push(\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" key={i} width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill yellow\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n          </svg>\r\n        );\r\n      }\r\n      if(modulus > 0.5) {\r\n        starsComponent.push(\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-half yellow\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M5.354 5.119L7.538.792A.516.516 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0 1 16 6.32a.55.55 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.519.519 0 0 1-.146.05c-.341.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.171-.403.59.59 0 0 1 .084-.302.513.513 0 0 1 .37-.245l4.898-.696zM8 12.027c.08 0 .16.018.232.056l3.686 1.894-.694-3.957a.564.564 0 0 1 .163-.505l2.906-2.77-4.052-.576a.525.525 0 0 1-.393-.288L8.002 2.223 8 2.226v9.8z\"/>\r\n          </svg>\r\n        );\r\n      }\r\n      if(starsComponent.length < 5) {\r\n        for(let a=starsComponent;starsComponent.length < 5;a++) {\r\n          starsComponent.push(\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star yellow\" key={a} viewBox=\"0 0 16 16\">\r\n              <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n            </svg>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        starsComponent\r\n      );\r\n    }\r\n  } else {\r\n    console.error(\"Parameter Terjual gak ada valuenya. Terjual : \", rating);\r\n  }\r\n}\r\n\r\nexport const OfflineAlert = () => {\r\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\r\n  const updateNetwork = () => {\r\n    setNetwork(window.navigator.onLine);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener(\"offline\", updateNetwork);\r\n    window.addEventListener(\"online\", updateNetwork);\r\n    return () => {\r\n        window.removeEventListener(\"offline\", updateNetwork);\r\n        window.removeEventListener(\"online\", updateNetwork);\r\n    };\r\n  });\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    const alert = document.getElementsByClassName(\"network-alert\")[0];\r\n    alert.classList.remove(\"show-alert\");\r\n    alert.classList.add(\"hide-alert\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={isOnline ? \"hide-alert network-alert\" : \"show-alert network-alert\"}>\r\n        <i className=\"bi bi-wifi-off wifi-mati\"></i>\r\n        <span>You are currently offline.</span>\r\n        <span onClick={handleRefresh} style={{color: \"rgb(65 142 235)\", cursor: \"pointer\"}}>Refresh</span>\r\n        <i onClick={hideAlert} className=\"bi bi-x cancel-offline\"></i>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const countTotal = (list, key, type = 'item', price_key = 'price', item_amount = 'amount') => {\r\n  var per_item = [];\r\n  let final;\r\n\r\n  list.map((item) => {\r\n    if (type === 'price') {\r\n      let count = (item[`${price_key}`] * item[`${item_amount}`]);\r\n      per_item = [...per_item, count];\r\n    } else {\r\n      per_item = [...per_item, item[`${key}`]];\r\n    }\r\n  })\r\n  \r\n  final = per_item.reduce((a, b) => a + b, 0);\r\n  return final;\r\n}","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\SliderCustomized.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\FeaturedProduct.jsx",["273"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { config } from '../../config';\r\nimport { Card2, SkeletonCard } from '../Components/Card';\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport TallBanner from '../../assets/images/tallBanner.jfif';\r\nimport TallBanner2 from '../../assets/images/tallBanner2.jfif';\r\nimport TallBanner3 from '../../assets/images/tallBanner3.jfif';\r\n\r\nfunction FeaturedProduct() {\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [ud, setUd] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    GetProducts(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling request in cleanup')\r\n    }\r\n  }, [ud]);\r\n  \r\n  const GetProducts = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/products`;\r\n    setLoading(true);\r\n    try {\r\n      const respons = await Axios.get(url, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setProducts(respons.data.products);\r\n      }\r\n    } catch(e) {\r\n      console.error('Fail ', e);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    rows: 2,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    initialSlide: 0,\r\n    responsive: [{\r\n      breakpoint: 700,\r\n      settings: {\r\n        rows: 1,\r\n        slidesToShow: 2,\r\n        initialSlide: 2\r\n      }\r\n    }]\r\n  };\r\n  \r\n  var settings2 = {\r\n    arrows: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('products featured', products)}\r\n      <div className=\"container spacing-section\">\r\n      {/* featured-wrapper */}\r\n        <div className=\"featured-wrapper\">\r\n          \r\n          <Slider {...settings2} className=\"tall-banner\">\r\n            <img src={TallBanner} alt=\"banner\"/>\r\n            <img src={TallBanner2} alt=\"banner\"/>\r\n            <img src={TallBanner3} alt=\"banner\"/>\r\n          </Slider>\r\n          <Slider {...settings} className=\"rows-slider\">\r\n              \r\n              {loading ? \r\n                SkeletonCard(8) : \r\n                products.map((product, i) => \r\n                  <Card2 key={i} name={product.name} image={product.images[0].id} harga={product.price} />\r\n                )\r\n              }\r\n\r\n            </Slider>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default FeaturedProduct;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Quickview.jsx",["274","275","276","277"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport { config } from '../../config';\r\nimport { currencyFormatter, ratingFormatter, soldFormatter } from '../../utils';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { CustomArrow } from './SliderCustomized';\r\nimport Cookie from 'universal-cookie';\r\nimport Swal from 'sweetalert2';\r\nvar cookies = new Cookie();\r\n\r\nconst Quickview = () => {\r\n  //^ Redux \r\n  const QReducer = useSelector(state => state.QReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  //^ Local State\r\n  const [product, setProduct] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loadingWishlist, setLoadingWishlist] = useState(false);\r\n\r\n  //^ Ref node\r\n  const node = useRef();\r\n\r\n  useEffect(() => {\r\n    const source = Axios.CancelToken.source();\r\n    getProduct(source.token);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    }\r\n  }, [QReducer.id]);\r\n\r\n  async function getProduct(source) {\r\n    if (QReducer.open) {\r\n      const url = `${config.api_host}/api/product/${QReducer.id}`;\r\n      try {\r\n      const response = await Axios.get(url, {cancelToken: source});\r\n      setProduct(response.data.product);\r\n      setImages(response.data.product.image);\r\n      const cat = response.data.product.categories.map(item => {\r\n        let container = [];\r\n        container = item.name;\r\n        return container;\r\n      })\r\n\r\n      setCategories(cat);\r\n      } catch(e) {\r\n        console.error(\"Failure \", e);\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  var settings = {\r\n    customPaging: function(i) {\r\n      if(i !== null) {\r\n        for(var a = -1; a < i; a++) {\r\n          var imageCount = images[0].id + a;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <a>\r\n          <img className=\"image-dots\" src={`${config.api_host}/api/image/${imageCount + 1}`}></img>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots quickview-dots slick-thumb\",\r\n    arrows: true,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    infinite: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    if(node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    \r\n    dispatch({type: 'SET_POPUP', open: false});\r\n  }\r\n\r\n  const addWishlist = async () => {\r\n    if (cookies.get('user_token')) {\r\n      const url = `${config.api_host}/api/add-wishlist/${product.id}`;\r\n      const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n      setLoadingWishlist(true)\r\n      try {\r\n        await Axios.get(url, {headers: header});\r\n        Swal.fire({icon: 'success', title: 'Success', text: 'Success adding to your wishlist'})\r\n      } catch (error) {\r\n        if (error.response.status === 422) {\r\n          Swal.fire({icon: 'warning', title: 'Added last time', text: 'You\\'ve been added this product to your wishlist last time'})\r\n        }\r\n        Swal.fire({icon: 'error', title: 'Oops...', text: 'An error occured. Try again later'})\r\n      }\r\n      setLoadingWishlist(false)\r\n    } else {\r\n      Swal.fire({icon: 'warning', title: 'Login first', text: 'You must be logged in to add your wishlist'})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if(QReducer.open === true) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        document.getElementsByClassName(\"overlay-popup\")[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if(overlay_popup.length && QReducer.open === false) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        document.getElementsByClassName(\"overlay-popup\")[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, [QReducer.open]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={node} className=\"quickview-node\">\r\n        {QReducer.open && (\r\n          <div className=\"quickview-modal\">\r\n            <div className=\"quickview-slider\">\r\n              <Slider {...settings}>\r\n\r\n                {images.map((image, i) =>\r\n                  <div key={i} className=\"quickview-image\">\r\n                    <div style={{backgroundImage: `url(${config.api_host}/api/image/${image.id})`, backgroundPosition: \"center\"}}></div>\r\n                  </div>\r\n                )}\r\n\r\n              </Slider>\r\n            </div>\r\n            <div className=\"quickview-inline\">\r\n              <div className=\"quickview-info\">\r\n                <div className=\"quickview-name\"><span>{product.name}</span></div>\r\n                <div className=\"quickview-scale\">\r\n                  <div className=\"quickview-rating\" style={ product.rate===null ? { width: '50%', display: 'flex', alignItems: 'center', fontFamily: \"Roboto-Regular\", fontSize: '13px', color: 'var(--secondary-color)' } : null}>{ratingFormatter(product.rate)}</div>\r\n                  <div className=\"quickview-sold\">{soldFormatter(product.sold)}</div>\r\n                </div>\r\n                <div className=\"quickview-price-title\">Our Price</div>\r\n                <div className=\"quickview-price\">{currencyFormatter(product.price)}</div>\r\n                <div className=\"quickview-description\"><p>{product.description}</p></div>\r\n\r\n                <div className=\"quickview-action\">\r\n                  <div className=\"q-action-title\">available :</div>\r\n                  <div className=\"q-action\">\r\n                    <input type=\"number\" name=\"quantity\" id=\"quantity\" disabled value={product.stock}/>\r\n                    <button className=\"q-cart\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bag-check\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M10.854 8.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n                        <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z\"/>\r\n                      </svg>\r\n                      Add To Cart\r\n                    </button>\r\n                    <button className=\"q-wishlist\" onClick={addWishlist}>\r\n                      {loadingWishlist ? <PulseLoader size=\"8px\" color=\"var(--primary-color)\" /> :\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\r\n                          <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n                        </svg>\r\n                      }\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"quickview-category\">\r\n                  <span className=\"quickview-category-title\">Categories: &nbsp;</span>\r\n                  {categories.join(', ')}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Quickview;","A:\\Tugas Akhir\\marketplacef\\src\\redux\\index.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\redux\\store.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\redux\\reducer.js",["278"],"import { combineReducers } from \"redux\";\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nconst initialQ = {\r\n  open: false,\r\n  id: 0,\r\n};\r\n\r\nconst QReducer = (state = initialQ, action) => {\r\n  switch (action.type) {\r\n    case \"SET_QUICKVIEW\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n        id: action.id,\r\n      };\r\n\r\n    case \"SET_POPUP\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialCredentialPopup = {\r\n  open: false,\r\n  popup: \"login\",\r\n};\r\n\r\nconst CredentialPopup = (state = initialCredentialPopup, action) => {\r\n  switch (action.type) {\r\n    case \"CREDENTIAL_POPUP\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      };\r\n    case \"POPUP_TYPE\":\r\n      return {\r\n        ...state,\r\n        popup: action.popup,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialRegisterShop = {\r\n  registered: false,\r\n};\r\n\r\nconst RegisterShop = (state = initialRegisterShop, action) => {\r\n  switch (action.type) {\r\n    case \"REGISTER_SHOP\":\r\n      return {\r\n        ...state,\r\n        registered: action.registered,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialCart = {\r\n  render: 0,\r\n  product_id: [],\r\n}\r\n\r\nconst CartReducer = (state = initialCart, action) => {\r\n  switch (action.type) {\r\n    case \"CART_COUNT\":\r\n      return {\r\n        ...state,\r\n        render: action.render,\r\n        product_id: [...state.product_id, action.product_id]\r\n      };\r\n    case \"CART_RENDER\":\r\n      return {\r\n        ...state,\r\n        render: state.render + 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialCheckout = {\r\n  products: []\r\n}\r\n\r\nconst CheckoutReducer = (state = initialCheckout, action) => {\r\n  switch (action.type) {\r\n    case \"CHECKOUT\":\r\n      return {\r\n        ...state,\r\n        products: action.products\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialRender = {\r\n  render: 0\r\n}\r\n\r\nconst RenderReducer = (state = initialRender, action) => {\r\n  switch (action.type) {\r\n    case \"SET_RENDER\":\r\n      return {\r\n        ...state,\r\n        render: state.render + 1\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  QReducer,\r\n  CredentialPopup,\r\n  RegisterShop,\r\n  CartReducer,\r\n  CheckoutReducer,\r\n  RenderReducer\r\n});\r\n\r\nexport default reducer;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Detail\\index.jsx",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import { currencyFormatter, inStockFormatter, ratingFormatter, ratingTextFormatter, soldFormatter, } from \"../../utils\";\r\nimport StarRound from \"../../assets/images/clip-art/star-round-icon.svg\";\r\nimport Placeholder from '../../assets/images/clip-art/placeholder.png';\r\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { CustomArrow } from \"../Components/SliderCustomized\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Truck from \"../../assets/images/icons/truck.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ReviewCard } from \"../Components/Card\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { config } from \"../../config\";\r\nimport Select from \"react-select\";\r\nimport Slider from \"react-slick\";\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport ImageLoad from \"../Components/ImageLoad\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst Detail = (props) => {\r\n  let { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const [product, setProduct] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [reveal, setReveal] = useState(false);\r\n  const [groupedOptions, setGroupedOptions] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [destination, setDestination] = useState({\r\n    value: \"152\",\r\n    label: \"Jakarta Pusat\",\r\n    province: \"DKI Jakarta\",\r\n  });\r\n  const [isDisplay, setIsDisplay] = useState(false);\r\n  const [berat, setBerat] = useState(1000);\r\n  const [origin, setOrigin] = useState(152);\r\n  const [courier, setCourier] = useState(\"jne\");\r\n  const [ongkir, setOngkir] = useState(0);\r\n  const [render, setRender] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingCost, setLoadingCost] = useState(false);\r\n  const [loadingWishlist, setLoadingWishlist] = useState(false);\r\n  const cart = cookies.get(\"cart\");\r\n  const arr = [product];\r\n\r\n  const prevDestination = usePrevious(destination);\r\n  const node = useRef();\r\n\r\n  const getProduct = async (token) => {\r\n    if (id !== 0) {\r\n      try {\r\n        const response = await Axios.get(\r\n          `${config.api_host}/api/product/${id}`,\r\n          { cancelToken: token }\r\n        );\r\n        console.log(\"response\", response);\r\n        setReviews(response.data.product.reviews);\r\n        setStore(response.data.product.store);\r\n        setOrigin(response.data.product.store.city_id);\r\n        setProduct(response.data.product);\r\n        setImages(response.data.product.image);\r\n      } catch (e) {\r\n        if (Axios.isCancel(e)) {\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCity = async (token) => {\r\n    // own Proxy Server\r\n    const proxUrl = `${config.api_host}/api/cities`;\r\n    // const url = 'https://cors-anywhere.herokuapp.com/https://api.rajaongkir.com/starter/city';\r\n    try {\r\n      let response = await Axios.get(proxUrl, {\r\n        // headers: { key: \"11fa41eaf62c64584a90b03a759c5296\" },\r\n        cancelToken: token,\r\n      });\r\n\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 3000));\r\n\r\n      var contain = response.data.cities.map((result) => ({\r\n        value: result.city_id,\r\n        label: result.city_name,\r\n        province: result.province,\r\n      }));\r\n\r\n      var provinsi = response.data.cities.map((result) => ({\r\n        label: result.province,\r\n      }));\r\n\r\n      removeDuplicate(provinsi, contain);\r\n    } catch (e) {\r\n      if (Axios.isCancel(e)) {\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    estOngkir();\r\n  }, [render]);\r\n\r\n  const estOngkir = async () => {\r\n    if (destination) {\r\n      const url = `${config.api_host}/api/cost`;\r\n      // const headers = {\r\n      //   key: \"11fa41eaf62c64584a90b03a759c5296\",\r\n      //   \"Content-Type\": \"application/json\",\r\n      // };\r\n      const body = {\r\n        origin: origin,\r\n        destination: destination.value,\r\n        weight: berat,\r\n        courier: courier,\r\n      };\r\n      console.log(\"body\", body);\r\n      setLoadingCost(true)\r\n      try {\r\n        let response = await Axios.post(url, body);\r\n        console.log(\"ONGKIR \", response);\r\n        setOngkir(response.data.result[0].costs[0].cost[0].value);\r\n      } catch (e) {\r\n        console.error(\"Failure: \" + e);\r\n      }\r\n      setLoadingCost(false)\r\n    }\r\n  };\r\n\r\n  function removeDuplicate(p, c) {\r\n    let uniqueProvince = Array.from(new Set(p.map((a) => a.label)));\r\n    var i = 0;\r\n    var groupedOptions = [];\r\n    for (i = 0; i < uniqueProvince.length; i++) {\r\n      const filteredCity = c.filter(\r\n        (city) => city.province == uniqueProvince[i]\r\n      );\r\n      groupedOptions[i] = {\r\n        label: uniqueProvince[i],\r\n        options: [...filteredCity, filteredCity],\r\n      };\r\n      groupedOptions[i][\"options\"].pop();\r\n    }\r\n    console.log(\"groupedOptions\", groupedOptions);\r\n    setGroupedOptions(groupedOptions);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const handleSelect = (destination) => {\r\n    setDestination(destination);\r\n    setRender(render => render + 1);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    setIsDisplay(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setIsDisplay(!isDisplay);\r\n  };\r\n\r\n  const handleCart = async (id) => {\r\n    if (cookies.get('user_token')) {\r\n\r\n      const url = `${config.api_host}/api/get-cart`;\r\n      const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n      setLoading(true);\r\n      try {\r\n        const response = await Axios.get(url, { headers: header });\r\n        var list_cart = response.data.data.products;\r\n      addToCart(id, list_cart);\r\n      } catch (error) {\r\n        if (error.response.status === 401) {\r\n          Swal.fire({icon: 'warning', title: 'Unauthorized', text: 'Please login first'});\r\n        }\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      Swal.fire({icon: 'warning', title: 'Login first', text: 'You must be logged in to add your cart'})\r\n    }\r\n  }\r\n\r\n  const addToCart = async (id, list) => {\r\n    let list_id = [];\r\n    list.map((product) => {\r\n      list_id.push(product.id)\r\n    });\r\n\r\n    let check_id = list_id.includes(id);\r\n    const url = `${config.api_host}/api/update-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    const body = { product_id: [id] }\r\n    console.log('check_id', check_id);\r\n    if (check_id) {\r\n      setLoading(false)\r\n      alert('You\\'ve added this product last time');\r\n      return false;\r\n    } else {\r\n      try {\r\n        const response_add = await Axios.post(url, body, { headers: header });\r\n        dispatch({type: 'CART_RENDER'})\r\n        console.log('response_add', response_add);\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const addWishlist = async () => {\r\n    if (cookies.get('user_token')) {\r\n      const url = `${config.api_host}/api/add-wishlist/${product.id}`;\r\n      const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n      setLoadingWishlist(true)\r\n      try {\r\n        await Axios.get(url, {headers: header});\r\n        Swal.fire({icon: 'success', title: 'Success', text: 'Success adding to your wishlist'})\r\n      } catch (error) {\r\n        if (error.response.status === 422) {\r\n          Swal.fire({icon: 'warning', title: 'Added last time', text: 'You\\'ve been added this product to your wishlist last time'})\r\n        }\r\n        Swal.fire({icon: 'error', title: 'Oops...', text: 'An error occured. Try again later'})\r\n      }\r\n      setLoadingWishlist(false)\r\n    } else {\r\n      Swal.fire({icon: 'warning', title: 'Login first', text: 'You must be logged in to add your wishlist'})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const source = Axios.CancelToken.source();\r\n    getProduct(source.token);\r\n    getCity(source.token);\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, []);\r\n\r\n  var settings = {\r\n    customPaging: function (i) {\r\n      if (i !== null) {\r\n        for (var a = -1; a < i; a++) {\r\n          var imageCount = images[0].id + a;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <a>\r\n          <img\r\n            className=\"image-dots\"\r\n            src={`${config.api_host}/api/image/${imageCount + 1}`}\r\n          ></img>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots quickview-dots slick-thumb\",\r\n    arrows: true,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true} />,\r\n    infinite: false,\r\n    speed: 500,\r\n    // autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  const groupBadgeStyles = {\r\n    backgroundColor: \"#EBECF0\",\r\n    borderRadius: \"2em\",\r\n    color: \"#172B4D\",\r\n    display: \"inline-block\",\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    lineHeight: \"1\",\r\n    minWidth: 1,\r\n    padding: \"0.16666666666667em 0.5em\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  const formatGroupLabel = (data) => (\r\n    <div style={groupStyles}>\r\n      <span>{data.label}</span>\r\n      <span style={groupBadgeStyles}>{data.options.length}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"overlay-popup\">\r\n        <section className=\"detail-sect\">\r\n          <div className=\"detail-cont\">\r\n            <div className=\"box\" style={{ height: \"505px\" }}>\r\n              <div className=\"detail-back\" onClick={handleBack}>\r\n                <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n              </div>\r\n              <div className=\"detail-slider\">\r\n                <Slider {...settings}>\r\n                  {images.map((image, i) => (\r\n                    <div className=\"detail-image\" key={i}>\r\n                      <div\r\n                        style={{\r\n                          backgroundImage: `url(${config.api_host}/api/image/${image.id})`,\r\n                          backgroundPosition: \"center\",\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  ))}\r\n                </Slider>\r\n              </div>\r\n              <div className=\"detail-inline\">\r\n                <div className=\"detail-info\">\r\n                  <span className=\"detail-name\">{product.name}</span>\r\n                  <div className=\"detail-status\">\r\n                    <div className=\"detail-rating\">\r\n                      {ratingTextFormatter(product.rating)}{\" \"}\r\n                      {ratingFormatter(product.rate)}\r\n                    </div>\r\n                    <div className=\"detail-sold\">\r\n                      {soldFormatter(product.sold)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-stock\">\r\n                    {inStockFormatter(product.jumlah)}\r\n                  </div>\r\n                  <div className=\"detail-description-wrapper\">\r\n                    <div\r\n                      className={\r\n                        reveal\r\n                          ? \"detail-description reveal\"\r\n                          : \"detail-description compact\"\r\n                      }\r\n                    >\r\n                      <p>{product.description}</p>\r\n                    </div>\r\n                    <button\r\n                      className=\"reveal-description-btn\"\r\n                      onClick={() => setReveal(!reveal)}\r\n                    >\r\n                      {reveal ? (\r\n                        <i className=\"fas fa-chevron-up\"></i>\r\n                      ) : (\r\n                          <i className=\"fas fa-chevron-down\"></i>\r\n                        )}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"detail-harga\">\r\n                    <span>{currencyFormatter(product.harga)}</span>\r\n                  </div>\r\n                  <div className=\"detail-action\">\r\n                    <button\r\n                      className=\"detail-addtocart ripple\"\r\n                      onClick={() => handleCart(product.id)}\r\n                      disabled={loading}\r\n                      style={{ cursor: loading ? 'not-allowed' : 'pointer' }}\r\n                    >\r\n                      {loading ?\r\n                        <PulseLoader size=\"8\" color=\"#fff\" /> :\r\n                        <Fragment>\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" fill=\"currentColor\" className=\"bi bi-cart3\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n                          </svg>\r\n                          <span>ADD TO CART</span>\r\n                        </Fragment>\r\n                      }\r\n                    </button>\r\n                    <button className=\"detail-wishlist\" onClick={addWishlist}>\r\n                      {loadingWishlist ? <PulseLoader size=\"8px\" color=\"var(--primary-color)\" /> : \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\"width=\"25\"height=\"25\"fill=\"currentColor\"className=\"bi bi-heart\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n                        </svg>\r\n                      }\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\" style={{ height: \"20vh\", marginTop: \"2vh\" }}>\r\n              <div className=\"inner-box\">\r\n                <div className=\"box-toko\">\r\n                  <div className=\"img-toko\">\r\n                    <ImageLoad\r\n                      src={`${config.api_host}/api/image/${store.image}`}\r\n                      placeholder={Placeholder}\r\n                      alt=\"toko\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"action-toko\">\r\n                    <div className=\"name-toko\">\r\n                      <span>{store.name}</span>\r\n                    </div>\r\n                    <div className=\"go-toko\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        class=\"bi bi-shop-window\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h12V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zm2 .5a.5.5 0 0 1 .5.5V13h8V9.5a.5.5 0 0 1 1 0V13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.5a.5.5 0 0 1 .5-.5z\" />\r\n                      </svg>\r\n                      <span>Kunjungi Toko</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"box-pengiriman\">\r\n                  <div className=\"from-location\">\r\n                    <div className=\"from-title\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        class=\"bi bi-geo-alt-fill\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\" />\r\n                      </svg>\r\n                      <span>Barang dikirim dari</span>\r\n                    </div>\r\n                    <div className=\"from-point\">\r\n                      <b>{store.city_name}</b>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"to-location\">\r\n                    <div className=\"to-title\">\r\n                      <img src={Truck} alt=\"ico\" />\r\n                      <span>Ongkir mulai dari</span>\r\n                    </div>\r\n                    <div className=\"to-point\">\r\n                      <p onClick={handleOpen}>\r\n                        {loadingCost ? <PulseLoader size=\"8\" color=\"var(--primary-color)\" /> : <b>{currencyFormatter(ongkir)}</b>} ke{\" \"}\r\n                        <b>{destination.label}</b>{\" \"}\r\n                        <i\r\n                          className=\"fas fa-chevron-down\"\r\n                          style={{\r\n                            transformOrigin: \"60% 40%\",\r\n                            transform: isDisplay ? \"rotate(180deg)\" : \"\",\r\n                            transition: \"all 0.3s ease\",\r\n                          }}\r\n                        ></i>\r\n                      </p>\r\n                      <div ref={node} className=\"destination-popup\">\r\n                        {isDisplay ? (\r\n                          <Select\r\n                            options={groupedOptions}\r\n                            formatGroupLabel={formatGroupLabel}\r\n                            value={destination}\r\n                            onChange={handleSelect}\r\n                            autoFocus={true}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\" style={{ marginTop: '2vh', padding: '20px' }}>\r\n              <div className=\"reviews-title\"><span>Reviews and rating</span></div>\r\n              <div className=\"reviews-stats\">\r\n                <div className=\"reviews-area\">\r\n                  {reviews.map((review) =>\r\n                    <ReviewCard comment={review.comment} rate={review.rate} username={review.user.name} avatar={review.user.image} created_at={review.created_at} />\r\n                  )}\r\n                </div>\r\n                <div className=\"overall-rating\">\r\n                  <span className=\"overall-rating-title\"><div className=\"star-round\"><img src={StarRound} alt=\"star-ico\" /></div> Overall Rating</span>\r\n                  <div className=\"inner-overall-rating\">\r\n                    <div className=\"overall-rating-text\">\r\n                      <span className=\"product-rating-text\">{ratingTextFormatter(product.rate)}</span>\r\n                      <span className=\"slash-rating\">/</span>\r\n                      <span className=\"full-rating\">5</span>\r\n                    </div>\r\n                    <div className=\"overall-star\">{ratingFormatter(product.rate)}</div>\r\n                    <div className=\"total-reviews\">{reviews.length} reviews</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default withRouter(Detail);\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\ProductHome.jsx",["294","295","296","297","298","299","300","301"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Banner from './Banner';\r\nimport Product from './Product';\r\nimport Axios from 'axios';\r\nimport { config } from '../../config';\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport { currencyFormatter, soldFormatter } from '../../utils';\r\nimport FeaturedProduct from './FeaturedProduct';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card4, SkeletonCard } from '../Components/Card';\r\nimport Swal from 'sweetalert2';\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nconst ProductHome = () => {\r\n  const dispatch = useDispatch();\r\n  const [wishlist, setWishlist] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [id, setId] = useState(0);\r\n  const [clicked, setClicked] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [productId, setPorductId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getData(source.token, unmounted);\r\n\r\n    return function() {\r\n      unmounted = true;\r\n      source.cancel(\"Canceling in cleanup\");\r\n    };\r\n  }, []);\r\n\r\n  function getData(token, unmount) {\r\n    const url = `${config.api_host}/api/products`;\r\n    setLoading(true)\r\n    Axios.get(url, {cancelToken: token})\r\n    .then(res => {\r\n      if(!unmount) {\r\n        setProduct(res.data.products);\r\n        setLoading(false);\r\n      }\r\n    })\r\n    .catch(e => {\r\n      if(!unmount) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n      setLoading(false)\r\n    });\r\n  }\r\n\r\n  const handleCart = async (id) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    setLoading2(true);\r\n    try {\r\n      const response = await Axios.get(url, { headers: header });\r\n      var list_cart = response.data.data.products;\r\n      addToCart(id, list_cart);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      if (error.response.status === 401) {\r\n        Swal.fire({icon: 'warning', title: 'Unauthorized', text: 'Please login first'});\r\n      }\r\n      setLoading2(false)\r\n    }\r\n  }\r\n\r\n  const addToCart = async (id, list) => {\r\n    let list_id = [];\r\n    list.map((product) => {\r\n      list_id.push(product.id)\r\n    });\r\n\r\n    let check_id = list_id.includes(id);\r\n    const url = `${config.api_host}/api/update-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    const body = { product_id: [id] }\r\n    console.log('check_id', check_id);\r\n    if (check_id) {\r\n      setLoading(false)\r\n      alert('You\\'ve added this product last time');\r\n      return false;\r\n    } else {\r\n      try {\r\n        const response_add = await Axios.post(url, body, { headers: header });\r\n        dispatch({type: 'CART_RENDER'})\r\n        console.log('response_add', response_add);\r\n        setLoading2(false)\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading2(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Quickview();\r\n  }, [productId]);\r\n\r\n  const Quickview = () => {\r\n    if(clicked) {\r\n      dispatch({type: 'SET_QUICKVIEW', open: true, id: productId});\r\n    }\r\n  }\r\n\r\n  var settings = {\r\n    customPaging: function(i) {\r\n      return (\r\n        <a>\r\n          <div className=\"circle-slick-dots\"></div>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots bp-dots slick-thumb\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    initialSlide: 0,\r\n    responsive: [{\r\n      breakpoint: 700,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 1,\r\n        initialSlide: 2,\r\n        arrows: false,\r\n        dots: false\r\n      }\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"sect-product\">\r\n        <div className=\"container\">\r\n          <div className=\"best-price-wrapper\">\r\n            <div className=\"title-box\">\r\n              <div>\r\n                <span className=\"bold-title\">BEST</span> <span className=\"second-title\">PRICE</span>\r\n              </div>\r\n            </div>\r\n            <Slider {...settings} className=\"card-bp-wrapper\">\r\n              \r\n              {loading ? \r\n                SkeletonCard(10)\r\n                :\r\n                product.map((product, i) =>\r\n                  <Card4 \r\n                    name={product.name}\r\n                    image={product.images[0].id}\r\n                    productId={product.id}\r\n                    price={product.price}\r\n                    sold={product.sold}\r\n                    key={i}\r\n                    onQuickview={() => {Quickview(product.id); setPorductId(product.id); setClicked(true)}}\r\n                    onWishlist={() => setWishlist(!wishlist)}\r\n                    onCart={() => handleCart(product.id)}\r\n                    wishlist={wishlist}\r\n                    loading={loading2}\r\n                  />\r\n                )\r\n              }\r\n\r\n\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <Banner />\r\n        <FeaturedProduct />\r\n        <Product />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductHome;","A:\\Tugas Akhir\\marketplacef\\src\\config\\firebase\\index.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\index.jsx",["302","303","304","305","306","307","308","309"],"import Axios from \"axios\";\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Dropzone from './Dropzone';\r\n\r\nconst UploadImage = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n\r\n  function handleChange(file) {\r\n    setImagedata(file[0]);\r\n  }\r\n\r\n  function addFormData(e) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n\r\n    fd.append(\"image\", imagedata);\r\n    console.log('imagedata', imagedata)\r\n    console.log('fd', fd);\r\n\r\n    Axios.post(\"http://127.0.0.1:8000/api/upload-image\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n    });\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addFormData}>\r\n        <label htmlFor=\"image\">Image Upload</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => handleChange(e.target.files)}\r\n          id=\"image\"\r\n        />\r\n        <button type=\"submit\" onClick={addFormData}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UploadImageIbb = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  function handleChange(file) {\r\n    setImagedata(file[0]);\r\n  }\r\n\r\n  function addFormData(e) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n\r\n    fd.set('key', 'bd01b524fc3073d96af785323b5f2ccc');\r\n    fd.append(\"image\", imagedata);\r\n    Axios.post(\"http://localhost:8010/proxy/1/upload\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n      setImageUrl(res.data.data.url);\r\n    }).catch(e => {console.error(e.message);})\r\n  }\r\n\r\n  function preview(files) {\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        let previewElement = document.getElementById(\"preview-upload\");\r\n        previewElement.setAttribute(\"src\", e.target.result);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  const style = {\r\n    backgroundColor: 'indigo',\r\n    color: 'white',\r\n    padding: '0.5rem',\r\n    fontFamily: 'sans-serif',\r\n    borderRadius: '0.3rem',\r\n    cursor: 'pointer',\r\n    marginTop: '1rem'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addFormData}>\r\n        <label htmlFor=\"image\" style={{ cursor: 'pointer' }}>\r\n          <div className=\"preview-upload-wrapper\">\r\n            <img id=\"preview-upload\" alt=\"select an image\"/>\r\n          </div>\r\n        </label>\r\n        <input type=\"file\" onChange={(e) => {handleChange(e.target.files); preview(e.target.files)}} id=\"image\" hidden />\r\n        <button type=\"submit\" onClick={addFormData}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {imageUrl !== \"\" &&\r\n        <img src={imageUrl} alt=\"img ibb\"/>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\n// ^ Drag n Drop\r\n\r\nconst UploadImageDnd = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const onDrop = useCallback(acceptedFile => {\r\n    preview(acceptedFile);\r\n    // handleChangew(acceptedFile);\r\n    var form = document.getElementById('dndform');\r\n    var event = new Event('submit');\r\n    form.dispatchEvent(event);\r\n    addFormData(event, acceptedFile);\r\n  }, []);\r\n\r\n  function preview(files) {\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        let previewElement = document.getElementById(\"preview-upload\");\r\n        previewElement.setAttribute(\"src\", e.target.result);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  function handleChangew(files) {\r\n    console.log('files', files);\r\n    setImagedata(files[0]);\r\n  }\r\n\r\n  function addFormData(e, file) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"image\", file[0]);\r\n    console.log('imagedata', file[0]);\r\n    console.log('fd', fd);\r\n    console.log('e', e);\r\n\r\n    Axios.post(\"http://127.0.0.1:8000/api/upload-image\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n    }).catch(e => {\r\n      console.error(e.message);\r\n    });\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <form id=\"dndform\" onSubmit={addFormData}>\r\n          <div className=\"preview-upload-wrapper\">\r\n            {imageUrl === \"\" ? <img id=\"preview-upload\"/> : null}\r\n            <Dropzone onDrop={onDrop} accept={\"image/*\"}/>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImageDnd;\r\n// import Axios from \"axios\";\r\n// import React from \"react\";\r\n\r\n// class UploadImage extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       imagedata: String,\r\n//     };\r\n//     this.addFormData = this.addFormData.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//   }\r\n//   //FileChange\r\n//   handleChange(file) {\r\n//     this.setState({\r\n//       imagedata: file[0],\r\n//     });\r\n//   }\r\n//   //Form Submission\r\n//   addFormData(evt) {\r\n//     evt.preventDefault();\r\n//     const fd = new FormData();\r\n\r\n//     fd.append(\"image\", this.state.imagedata);\r\n\r\n//     //Post Request to laravel API Route\r\n//     Axios.post(\r\n//       \"http://localhost:8000/\",\r\n//       fd\r\n//     ).then((res) => {\r\n//       this.myFormRef.reset();\r\n//     });\r\n//   }\r\n\r\n//   render(Message) {\r\n//     return (\r\n//       <div>\r\n//         <h1>Therichpost.com</h1>\r\n//         <form ref={(el) => (this.myFormRef = el)}>\r\n//           <label for=\"image\">Image Upload:</label>\r\n//           <input\r\n//             onChange={(e) => this.handleChange(e.target.files)}\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             ref=\"productimage\"\r\n//           />\r\n\r\n//           <button type=\"submit\" onClick={this.addFormData}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default UploadImage;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Login\\index.jsx",["310","311"],"import Axios from \"axios\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookie from 'universal-cookie';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { config } from \"../../../config\";\r\nvar cookies = new Cookie();\r\n\r\nconst Login = ({ onBack, toSignup, toForgotPassword }) => {\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const [vermethod, setVermethod] = useState(\"email\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  function changeVermethod(e) {\r\n    setVermethod(e.target.value);\r\n  }\r\n\r\n  async function Loginn(e) {\r\n    e.preventDefault();\r\n    let url = `${config.api_host}/api/login`;\r\n    \r\n    if(vermethod === \"email\") {\r\n      let email = document.getElementById('email-input').value;\r\n      let password = document.getElementById(\"pass-input\").value;\r\n      if(email || password && vermethod === \"email\") {\r\n        let body = {email, password}\r\n        setLoading(true);\r\n\r\n        try {\r\n          let response = await Axios.post(url, body);\r\n          dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n          console.log('response Login', response);\r\n          cookies.set('user_token', response.data.data.token.token, {path: '/'});\r\n          cookies.set('login', true, {path: '/'});\r\n          const token = response.data.data.token.token;\r\n          getUser(token);\r\n        } catch(e) {\r\n          if(e.response) {\r\n            Swal.fire({icon: 'error', title: \"oops...\", text: `${e.message}`});\r\n          } else {\r\n            Swal.fire({icon: 'error', title: `An error occured`});\r\n          }\r\n          console.log('error login ', e)\r\n        }\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      let password = document.getElementById(\"pass-input\").value;\r\n      if(phoneNumber !== \"\" || !password) {\r\n        let body = {hp: phoneNumber, password}\r\n        setLoading(true);\r\n\r\n        try {\r\n          let response = await Axios.post(url, body);\r\n          dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n          cookies.set('user_token', response.data.data.token.token, {path: '/'});\r\n          cookies.set('login', true, {path: '/'});\r\n          const token = response.data.data.token.token;\r\n          getUser(token);\r\n        } catch(e) {\r\n          Swal.fire({icon: 'error', title: `An error occured`});\r\n          console.log('error login ', e)\r\n        }\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getUser = async (token) => {\r\n    const url = `${config.api_host}/api/user-detail`;\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, {headers: {'Authorization': `Bearer `.concat(token)}});\r\n      cookies.set('user', response.data.user, {path: '/'});\r\n      setLoading(false);\r\n      dispatch({type: \"SET_RENDER\"});\r\n      dispatch({type: \"CART_RENDER\"});\r\n    } catch(e) {\r\n      console.error('user detail error: ', e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {CredentialPopup.open && (\r\n        <div className=\"login-modal\">\r\n          <div className=\"l-panel\">\r\n            <button className=\"popup-back\" onClick={onBack}>\r\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            </button>\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Welcome Back!</span>\r\n              <span className=\"small-text\">\r\n                Doesn't have any account? It takes less than a minute.\r\n              </span>\r\n              <button onClick={toSignup}>\r\n                <span>Sign Up</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"r-panel\">\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Log In</span>\r\n              <span className=\"small-text\">\r\n                Welcome back, please use your verified account to login\r\n              </span>\r\n              <form className=\"input-signup\" onSubmit={Loginn}>\r\n                <div\r\n                  className=\"border-input\">\r\n                  {\r\n                    vermethod === \"email\" ? (\r\n                      <input type=\"text\" id=\"email-input\" placeholder=\"Email Address\"/>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={(e) => setPhoneNumber(e.target.value)}\r\n                          id=\"number-input\"\r\n                          placeholder=\"I.e. +6281234567890\"\r\n                        />\r\n                      </Fragment>\r\n                    )\r\n                  }\r\n                  <div className=\"select-vermethod\">\r\n                    <select onChange={changeVermethod} value={vermethod} name=\"vermthod\" id=\"vermethod\">\r\n                      <option value=\"email\">email</option>\r\n                      <option value=\"phone\">phone (OTP)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input type=\"password\" id=\"pass-input\" placeholder=\"Password\" />\r\n                </div>\r\n              <button className=\"submit-signin\" type=\"submit\" disabled={loading}>{loading ? <PulseLoader color=\"#ffffff\" size=\"8\" loading={loading} /> : \"Log In\"}</button>\r\n              </form>\r\n              <div onClick={toForgotPassword} className=\"forgot-link\">\r\n                <div>Forgot your password?</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\index.js",["312","313","314"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../../config/firebase\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\n\r\nconst Credential = () => {\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const node = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  function onBack() {\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: false });\r\n  }\r\n\r\n  function handleClick(e) {\r\n    if (node.current.contains(e.target)) return;\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: false });\r\n  }\r\n\r\n  function toSignup() {\r\n    dispatch({ type: \"POPUP_TYPE\", popup: \"signup\" });\r\n  }\r\n\r\n  function toLogin() {\r\n    dispatch({ type: \"POPUP_TYPE\", popup: \"login\" });\r\n  }\r\n\r\n  function toForgotPassword() {\r\n    dispatch({ type: \"POPUP_TYPE\", popup: \"forgot_password\" });\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   document.addEventListener(\"mousedown\", handleClick);\r\n\r\n  //   return () => {\r\n  //     document.addEventListener(\"mousedown\", handleClick);\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if (CredentialPopup.open === true) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.add(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if (\r\n      overlay_popup.length &&\r\n      CredentialPopup.open === false\r\n    ) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, [CredentialPopup.open]);\r\n\r\n  return (\r\n    <div className=\"login-node\" ref={node}>\r\n      {CredentialPopup.popup === \"login\" ? (\r\n        <Login onBack={onBack} toSignup={toSignup} toForgotPassword={toForgotPassword} />\r\n      ) : CredentialPopup.popup === \"signup\" ? (\r\n        <Signup onBack={onBack} toLogin={toLogin} />\r\n      ) : (\r\n        <Fragment>\r\n          {console.log('masuk sini')}\r\n          <ForgotPassword onBack={onBack} toLogin={toLogin} />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credential;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Signup\\index.jsx",["315","316","317","318","319","320"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../../../config/firebase\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from \"axios\";\r\nimport { config } from \"../../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = ({ onBack, toLogin }) => {\r\n  const dispatch = useDispatch();\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [vermethod, setVermethod] = useState(\"email\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n  const [reset, setReset] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  function changeVermethod(e) {\r\n    setVermethod(e.target.value);\r\n  }\r\n\r\n  \r\n  function sendOTP() {\r\n    const recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n      'size': 'normal',\r\n      'expired-callback': () => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Status Expired',\r\n          text: 'the response to the server has been expired, try again'\r\n        });\r\n      }\r\n    });\r\n\r\n    if (reset) {\r\n      // document.getElementById('recaptcha').style.display = \"block\";\r\n      recaptchaVerifier.render().then(function(widgetId) {\r\n        window.recaptchaWidgetId = widgetId;\r\n      });\r\n      setReset(false);\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, recaptchaVerifier)\r\n      .then((e) => {\r\n        Swal.fire({\r\n          title: 'Insert OTP code we\\'ve sent to you',\r\n          input: 'text',\r\n          inputAttributes: {\r\n            autocapitalize: 'off'\r\n          },\r\n          showCancelButton: true,\r\n          confirmButtonText: 'got it',\r\n          showLoaderOnConfirm: true,\r\n          preConfirm: (code) => {\r\n            return e.confirm(code)\r\n            .then(response => {\r\n                console.log('response firebase', response)\r\n                return response;\r\n              })\r\n              .catch(error => {\r\n                Swal.showValidationMessage(`you're inserting wrong code`)\r\n              })\r\n          },\r\n          allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n          let timerInterval;\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'success',\r\n            text: 'Phone number successfuly authorized',\r\n            html: 'close in <b></b>',\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n              Swal.showLoading();\r\n              timerInterval = setInterval(() => {\r\n                const content = Swal.getContent();\r\n                if (content) {\r\n                  const b = content.querySelector('b');\r\n                  if (b) {\r\n                    b.textContent = Swal.getTimerLeft()\r\n                  }\r\n                }\r\n              }, 100)\r\n            },\r\n            willClose: () => {\r\n              clearInterval(timerInterval)\r\n            }\r\n          }).then(() => {\r\n            // document.getElementById('recaptcha').style.display = \"none\";\r\n          });\r\n          setVerified(true);\r\n        })\r\n\r\n        // let code = prompt(\r\n          //   \"Insert the code we've sent to your phone number\",\r\n          //   \"\"\r\n          // );\r\n        // if (code === null) return;\r\n        // e.confirm(code)\r\n        //   .then((result) => {\r\n          //     Swal.fire({\r\n        //       icon: \"success\",\r\n        //       title: \"Success\",\r\n        //       text: `${result.user.phoneNumber} is Authorized`,\r\n        //     });\r\n        //   })\r\n        //   .catch((e) => {\r\n        //     Swal.fire({\r\n        //       icon: \"error\",\r\n        //       title: \"Failed\",\r\n        //       text: `${e}`,\r\n        //     });\r\n        //   });\r\n      })\r\n      .catch(e => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: `Error ${e.code}`,\r\n          text: `${e.message}. try again`\r\n        }).then(e => {\r\n          recaptchaVerifier.reset();\r\n        });\r\n      })\r\n  }\r\n\r\n  async function register(e) {\r\n    e.preventDefault();\r\n\r\n    let username = document.getElementById('username-input').value;\r\n\r\n    if (vermethod === 'email') {\r\n      var email = document.getElementById('email-input').value;\r\n    } else {\r\n      var phone = document.getElementById('number-input').value.trim();\r\n    }\r\n\r\n    let password = document.getElementById('pass-input').value;\r\n    let c_password = document.getElementById('confirm-pass-input').value;\r\n\r\n    let url = `${config.api_host}/api/register`;\r\n    let body = {\r\n      username,\r\n      password,\r\n      c_password\r\n    }\r\n    console.log('vermethod', vermethod);\r\n    if (vermethod === \"email\") {\r\n      body = {...body, email}\r\n    } else {\r\n      body = {...body, hp: phone}\r\n    }\r\n    console.log('body', body);\r\n\r\n    if(password !== c_password) {\r\n      Swal.fire('passwords do not match');\r\n      setReset(true);\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    if (vermethod !== \"email\" && !verified) {\r\n      alert('you must verified your phone number');\r\n      return false;\r\n    }\r\n    try {\r\n      const response = await Axios.post(url, body);\r\n      if (vermethod === \"email\") {\r\n        Swal.fire({icon: 'success', title: 'Check your mailbox', text: 'Check the verification email we\\'sent to your mailbox'});\r\n        dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n      } else {\r\n        setVerified(false);\r\n        Swal.fire({icon: 'success', title: 'Successfully create an account!'});\r\n        dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n      }\r\n    } catch(e) {\r\n      if(e.response) {\r\n        Swal.fire({icon: 'error', title: `Ooops... an error occured`});\r\n      } else {\r\n        Swal.fire({icon: 'error', title: `An error occured`});\r\n      }\r\n      setVerified(false);\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {CredentialPopup.open && (\r\n        <div className=\"login-modal\">\r\n          <div className=\"l-panel\">\r\n            <button className=\"popup-back\" onClick={onBack}>\r\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            </button>\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Hello There!</span>\r\n              <span className=\"small-text\">\r\n                If you already have an account please login with your personal\r\n                info\r\n              </span>\r\n              <button onClick={toLogin}>\r\n                <span>Sign In</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"r-panel\">\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Create Account</span>\r\n              <span className=\"small-text\">\r\n                Doesn't have an account? It takes less than a minute. If you\r\n                already have an account Login\r\n              </span>\r\n              <div className=\"input-signup\">\r\n                <div className=\"border-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"username-input\"\r\n                    placeholder=\"Username\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    vermethod === \"email\"\r\n                      ? \"border-input\"\r\n                      : \"border-input otp-input\"\r\n                  }\r\n                >\r\n                  {vermethod === \"email\" ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"email-input\"\r\n                      placeholder=\"Email Address\"\r\n                    />\r\n                  ) : (\r\n                    <Fragment>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        id=\"number-input\"\r\n                        placeholder=\"i.e. +6281234567890\"\r\n                      />\r\n                      <button onClick={sendOTP}>Send OTP</button>\r\n                    </Fragment>\r\n                  )}\r\n                  <div className=\"select-vermethod\">\r\n                    <select\r\n                      onChange={changeVermethod}\r\n                      value={vermethod}\r\n                      name=\"vermthod\"\r\n                      id=\"vermethod\"\r\n                    >\r\n                      <option value=\"email\">email</option>\r\n                      <option value=\"phone\">phone (OTP)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input type=\"password\" id=\"pass-input\" placeholder=\"Password\" />\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"confirm-pass-input\"\r\n                    placeholder=\"Re-enter Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"recaptcha\" id=\"recaptcha\"></div>\r\n              </div>\r\n              {console.log('verified', verified)}\r\n              <button className=\"submit-signup\" onClick={register} disabled={loading || vermethod !== \"email\" && !verified}>{loading ? <PulseLoader color=\"#ffffff\" size=\"8\" loading={loading} /> : \"Create Account\"}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\pushnotification\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\ListProduct\\index.jsx",["321","322","323","324"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Register\\index.jsx",["325","326","327","328","329"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Dashboard\\index.jsx",["330","331","332"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Vector from '../../../assets/images/clip-art/dashboard_vector.png';\r\nimport Cookie from 'universal-cookie';\r\nimport Axios from 'axios';\r\nimport { config } from '../../../config';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useQuery } from '../../../utils';\r\nconst cookies = new Cookie();\r\n\r\nconst Dashboard = () => {\r\n  const [totalReviews, setTotalReviews] = useState();\r\n  const [totalProducts, setTotalProducts] = useState([]);\r\n  const [popup, setPopup] = useState(false);\r\n  let history = useHistory();\r\n  let query = useQuery();\r\n\r\n  const storeReviews = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/store-reviews`;\r\n    const url2 = `${config.api_host}/api/store-products`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotalReviews(response.data.data.total);\r\n      }\r\n\r\n      const response2 = await Axios.get(url2, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotalProducts(response2.data.data);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        if(Axios.isCancel(e)) {\r\n          console.error(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened:' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    storeReviews(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query.get('seller')) {\r\n      setPopup(true)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"dashboard\">\r\n        <div className=\"panel-title\"><span>Dashboard</span></div>\r\n        <div className=\"greeting-seller\">\r\n          <h1>Welcome, {cookies.get('user').name ? cookies.get('user').name.split(' ').slice(0, 2).join(' ') : cookies.get('user').username}</h1>\r\n          <span>If you are not making any mistake,<br/> It means you are not doing anything</span>\r\n        </div>\r\n        <div className=\"stats-space\">\r\n          <div className=\"stats-card\">\r\n            <h4>{totalProducts.total}</h4>\r\n            <span>Total Products</span>\r\n            <button onClick={() => history.push('/seller/products')}>Your Products</button>\r\n          </div>\r\n          <div className=\"stats-card\">\r\n            <h4>{totalReviews}</h4>\r\n            <span>Total Reviews</span>\r\n            <button onClick={() => history.push('/seller/products')}>Your Products</button>\r\n          </div>\r\n          <div className=\"stats-card\">\r\n            <h4>{totalProducts.total_sold}</h4>\r\n            <span>Products Sold</span>\r\n            <button onClick={() => history.push('/seller/products')}>Your Products</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"action-space\">\r\n          \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Menu\\index.jsx",["333"],"import React, { Fragment } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"menu-panel\" style={{ paddingTop: '5vh' }}>\r\n        <NavLink to=\"/seller/dashboard\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"fas fa-columns\"></i>\r\n          &nbsp;\r\n          Dashboard\r\n        </NavLink>\r\n        <NavLink to=\"/seller/orders\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"bi bi-box-seam\"></i>\r\n          &nbsp;\r\n          Store Orders\r\n        </NavLink>\r\n        <NavLink to=\"/seller/products\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"far fa-list-alt\"></i>\r\n          &nbsp;\r\n          Your Products\r\n        </NavLink>\r\n        <NavLink to=\"/seller/settings\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"fas fa-cog\"></i>\r\n          &nbsp;\r\n          Store Settings\r\n        </NavLink>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Menu;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Products\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\add.jsx",["334"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport GridLoader from 'react-spinners/GridLoader';\r\nimport BeatLoader from 'react-spinners/BeatLoader';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nvar cookies = new Cookie();\r\n\r\nexport const Add = () => {\r\n  const [name, setName] = useState('');\r\n  const [condition, setCondition] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [categoriesOpt, setCategoriesOpt] = useState([]);\r\n  const [price, setPrice] = useState();\r\n  const [priceValidation, setPriceValidation] = useState();\r\n  const [stock, setStock] = useState();\r\n  const [stockValidation, setStockValidation] = useState();\r\n  const [heavy, setHeavy] = useState();\r\n  const [heavyValidation, setHeavyValidation] = useState();\r\n  const [description, setDescription] = useState('');\r\n\r\n  let history = useHistory();\r\n\r\n  const addProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = `${config.api_host}/api/create-product`\r\n    const body = {\r\n      name,\r\n      desc: description,\r\n      price,\r\n      stock,\r\n      condition,\r\n      heavy,\r\n      categories: categories\r\n    }\r\n    console.log('body', body);\r\n    const header = {\r\n      'Authorization': `Bearer ${cookies.get('user_token')}`\r\n    }\r\n\r\n    setLoading2(true);\r\n    try {\r\n      const response = await Axios.post(url, body, {headers: header});\r\n      setLoading2(false);\r\n      history.push(`/seller/upload-product/${response.data.product.id}`);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      setLoading2(false)\r\n    }\r\n  }\r\n\r\n  const getCategories = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/category`;\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setCategoriesOpt(response.data.categories);\r\n      }\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      if (Axios.isCancel(e)) {\r\n        console.error('request cancelled', e);\r\n      } else {\r\n        console.error('Another error happened', e.message);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const categoryHandle = (item) => {\r\n    if (categories.includes(item)) {\r\n      setCategories(categories.filter(cat => cat != item));\r\n    } else {\r\n      setCategories([...categories, item]);\r\n    }\r\n  }\r\n\r\n  const checkHandler = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    categoryHandle(value);\r\n  }\r\n\r\n  const integerHandle = (e, type) => {\r\n    let value = e.target.value;\r\n    if (value.length > 0) {\r\n      if (value.includes(\",\") || value.includes(\".\")) {\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(false);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(false);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(false);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        value = parseInt(value);\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(true);\r\n            setPrice(value);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(true);\r\n            setStock(value);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(true);\r\n            setHeavy(value);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      switch (type) {\r\n        case 'price':\r\n          setPriceValidation(undefined);\r\n          setPrice(undefined);\r\n          break;\r\n        case 'stock':\r\n          setStockValidation(undefined);\r\n          setStock(undefined);\r\n          break;\r\n        case 'heavy':\r\n          setHeavyValidation(undefined);\r\n          setHeavy(undefined);\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCondition = (value) => {\r\n    let isSet = (value === 'true');\r\n    setCondition(isSet);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('stockValidation', stockValidation)}\r\n      <form onSubmit={addProduct}>\r\n        <div className=\"product-information-form\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Product Information</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Product Name</h6>\r\n                <small className=\"text-secondary\">Name min. 5 words, consisting of the type <br/> of product, brand, and descriptions such <br/> as color, material or type.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"text\" className={name.length === 0 ? \"w-100 form-control\" : name.length < 5 ? \"w-100 form-control is-invalid\" : \"w-100 form-control is-valid\"} onChange={e => setName(e.target.value)} maxLength=\"70\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\"><h6>Category</h6></div>\r\n              <div className=\"input-form category-badge-form col-7\">\r\n                <div className=\"load\"><GridLoader color=\"#00ce75\" size=\"10\" loading={loading} /></div>\r\n                {categoriesOpt.length > 0 && \r\n                  categoriesOpt.map((category, i) => \r\n                    <Fragment>\r\n                      <input type=\"checkbox\" id={`category-input ${category.id}`} onChange={e => checkHandler(e)} value={category.id}/>\r\n                      <label htmlFor={`category-input ${category.id}`}><span className=\"badge bg-secondary text-light\">{category.name}</span></label>\r\n                    </Fragment>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"product-information-form mt-4\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Detail Product</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\"><h6>Condition</h6></div>\r\n              <div className=\"input-form col-7 radio-input\">\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='true' />\r\n                  <span>New</span>\r\n                </div>\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='false' />\r\n                  <span>Second</span>\r\n                </div>\r\n                {/* // <small className=\"invalid-small text-danger d-flex align-items-center\">\r\n                //   <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-exclamation-circle mr-2\" viewBox=\"0 0 16 16\">\r\n                //     <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                //     <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n                //   </svg>\r\n                //   More example invalid feedback text\r\n                // </small> */}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Price</h6>\r\n                <small className=\"text-secondary\">Enter the product price with number only. Do not use <br/> \".\" or \",\" when your're typing your product price.</small>\r\n              </div>\r\n              <div className=\"input-form price-input col-7\">\r\n                <span>Rp</span>\r\n                <input type=\"number\" className={priceValidation === undefined ? \"w-100 form-control\" : priceValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'price')}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Stock</h6>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"number\" className={stockValidation === undefined ? \"w-100 form-control\" : stockValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'stock')} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Weight</h6>\r\n                <small className=\"text-secondary\">Product weight is typed in grams to make it easier during the checkout process. Make sure you fill <br/> it in correctly, e.g. 1000, 1600, 2000, etc.</small>\r\n              </div>\r\n              <div className=\"input-form heavy-input col-7\">\r\n                <span>gram</span>\r\n                <input type=\"number\" className={heavyValidation === undefined ? \"w-100 form-control\" : heavyValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'heavy')}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Description</h6>\r\n                <small className=\"text-secondary\">The product description min. 5 words. Make sure the product description contains specifications, sizes, materials, validity period, and others. The more details, the more useful it is for the buyer.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <textarea className={description.length < 1 ? \"form-control\" : description.length > 4 ? \"form-control is-valid\" : \"form-control is-invalid\"} id=\"exampleFormControlTextarea1\" rows=\"5\" onChange={e => setDescription(e.target.value)}></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"next-form-btn\" type=\"submit\" onSubmit={addProduct}>{loading2 ? <BeatLoader color=\"#ffffff\" size=\"8\"/> : 'Add Product'}</button>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Add;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\upload.jsx",["335","336","337","338","339","340","341","342","343","344","345"],"import Axios from 'axios';\r\nimport React, { Fragment, useState, useCallback, useEffect } from 'react'\r\nimport Dropzone from './Dropzone';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nexport const Upload = () => {\r\n  const {id} = useParams();\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [previews, setPreview] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentUpload, setCurrentUpload] = useState(1);\r\n  const [successUpload, setSuccessUpload] = useState(1);\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const onDrop = useCallback((acceptedFile, p) => {\r\n    console.log('acceptedFile', acceptedFile);\r\n    console.log('currentUpload', currentUpload);\r\n    // handleChangew(acceptedFile);\r\n    var form = document.getElementById('imageform');\r\n    setImageUrl(acceptedFile);\r\n    var event = new Event('submit');\r\n    form.dispatchEvent(event);\r\n    addFormData(event, acceptedFile);\r\n  }, []);\r\n\r\n  function preview(files, i) {\r\n    i = i - 2;\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        console.log('i', i);\r\n        let previewElement = document.getElementsByClassName('preview-img');\r\n        \r\n        if (previewElement[i].hasAttribute('src')) {\r\n          previewElement[i+1].setAttribute('src', e.target.result);\r\n        } else {\r\n          previewElement[i].setAttribute('src', e.target.result);\r\n        }\r\n        console.log('previewElement', previewElement);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  async function addFormData(e, file) {\r\n    e.preventDefault();\r\n    \r\n    const fd = new FormData();\r\n    const url = `${config.api_host}/api/store-image/${id}`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`};\r\n\r\n    const options = {\r\n      headers: header,\r\n      onUploadProgress: (progressEvent) => {\r\n        const {loaded, total} = progressEvent;\r\n        let percent = Math.floor( (loaded * 100) / total )\r\n        console.log(`${loaded}kb of ${total}kb | ${percent}%`);\r\n        if (percent < 100) {\r\n          setUploadPercentage(percent)\r\n        }\r\n      }\r\n    }\r\n    \r\n    fd.append(\"image\", file[0]);\r\n    console.log('imagedata', file[0]);\r\n    setLoading(true);\r\n    \r\n    try {\r\n      await Axios.post(url, fd, options);\r\n      setCurrentUpload(currentUpload => currentUpload + 1);\r\n      setSuccessUpload(successUpload => successUpload + 1);\r\n      setInterval(() => {\r\n        setUploadPercentage(100);\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        setUploadPercentage(0);\r\n      }, 1000);\r\n      \r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    preview(imageUrl, successUpload);\r\n  }, [successUpload]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"imagesform\">\r\n        <div className=\"product-information-form\">\r\n          <div className=\"product-information-header img-form\">\r\n            <div className=\"title-form\"><h6>Upload Product</h6></div>\r\n          </div>\r\n          <small className=\"text-secondary\">Image format .jpg .jpeg .png .jfif .webp and minimum size of 300 x 300px (For optimal image use minimum size of 570 x 570 px). <br/></small>\r\n          <small className=\"text-secondary mt-3\">Select product photos or drag and drop up to 6 product photos here.</small>\r\n          <form id=\"imageform\" onSubmit={addFormData}>\r\n            <div className=\"preview-upload-wrapper\">\r\n              <div className=\"guide-vector main\"></div>\r\n              {loading && currentUpload === 1 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload1\"/>}\r\n              {successUpload > 1 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('one')} />\r\n            </div>\r\n\r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 2 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 2 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector front\"></div>\r\n              {loading && currentUpload === 2 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload2\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('two')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 3 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 3 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector right\"></div>\r\n              {loading && currentUpload === 3 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload3\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('three')} />\r\n            </div>\r\n\r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 4 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 4 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector upper\"></div>\r\n              {loading && currentUpload === 4 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload4\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('four')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 5 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 5 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector detail\"></div>\r\n              {loading && currentUpload === 5 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload5\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('five')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 6 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 6 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector back\"></div>\r\n              {loading && currentUpload === 6 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload6\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('six')} />\r\n            </div>\r\n            <button onClick={() => history.push('/seller/products')}>Finish</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Upload;","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\Dropzone.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\Dropzone.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\ImageLoad.jsx",["346"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst ImageLoad = React.memo(({ src, placeholder, alt = \"\", className = \"\", styles = {} }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentSrc, updateSrc] = useState(placeholder);\r\n\r\n  useEffect(() => {\r\n    // Start loading original image\r\n    const imageToLoad = new Image();\r\n    imageToLoad.src = src;\r\n    imageToLoad.onload = () => {\r\n      // Saat image terload sepenuhnya, ganti src dan loading ke false\r\n      setLoading(false);\r\n      updateSrc(src);\r\n    }\r\n  }, [src])\r\n\r\n  return (\r\n    <img src={currentSrc} style={{ opacity: loading ? 0.6 : 0.9, transition: \"opacity .15s linear\" }} alt={alt} className={className} style={styles} />\r\n  )\r\n});\r\n\r\nexport default ImageLoad;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Guarder\\AuthGuarder.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Notfound.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\GettingStarted.jsx",["347"],"import React, { Fragment, useEffect } from 'react'\r\nimport { useQuery } from '../../utils'\r\nimport NewSeller from '../../assets/images/clip-art/new_seller.png';\r\n\r\nexport const GettingStarted = () => {\r\n  let query = useQuery();\r\n  const seller_type = query.get('seller');\r\n\r\n  const removePopup = () => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n    document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n    for (let i = 0; i < overlay_popup.length; i++) {\r\n      overlay_popup[i].classList.remove(\"popup-open\");\r\n    }\r\n\r\n    document.getElementsByClassName('getting-started')[0].remove();\r\n  }\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if (seller_type === 'new') {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.add(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if (overlay_popup.length && seller_type) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {seller_type === 'new' && (\r\n        <div className=\"getting-started\">\r\n          {/* <button onClick={removePopup}>Let's do this</button> */}\r\n          <div className=\"sementara gs-vector mt-5\">\r\n            <div className=\"gs-img-wrap\">\r\n              <img src={NewSeller} alt=\"vector\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"gs-title text-center mt-3\" style={{ fontSize: '20px', fontFamily: 'Nunito-Bold', color: 'var(--secondary-color)' }}>\r\n            <span>Welcome New Member</span>\r\n          </div>\r\n          <div className=\"gs-content text-center mt-1 p-3\" style={{ fontFamily: 'Nunito-Semibold', color: '#8a8ebb' }}>\r\n            <p>here you can monitor and manage all your store products. You can Manage your order, product list, and settings the store here</p>\r\n          </div>\r\n          <button onClick={removePopup} className=\"mt-2\">Let's Do This</button>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default GettingStarted;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Cart\\index.jsx",["348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { countTotal, currencyFormatter, soldFormatter } from \"../../../utils\";\r\nimport { config } from \"../../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport ImageLoad from \"../../Components/ImageLoad\";\r\nimport Placeholder from '../../../assets/images/clip-art/placeholder.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst cookies = new Cookies();\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const [products, setProducts] = useState([]);\r\n  const [value, setValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [render, setRender] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const getCart = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const auth = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    console.log('masuk sini');\r\n    try {\r\n      const response = await Axios.get(url, { headers: auth, cancelToken: token });\r\n      if (!unmounted) {\r\n        let customResponse = response.data.data.products.map((product) => {\r\n          product.amount = 1;\r\n          return product;\r\n        })\r\n        console.log('customResponse', customResponse)\r\n        setProducts(customResponse);\r\n\r\n        amountItem(response.data.data.products);\r\n        total(response.data.data.products);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if (Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeItem = async (product_id) => {\r\n    const url = `${config.api_host}/api/remove-cart`\r\n    const body = { product_id }\r\n    const auth = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n\r\n    setLoading(true)\r\n    try {\r\n      const response = await Axios.post(url, body, { headers: auth });\r\n      console.log('response', response);\r\n      dispatch({ type: \"CART_RENDER\" });\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const inputChange = (value, product_id) => {\r\n    let int = parseInt(value);\r\n    products.map((product) => {\r\n      if (value < 1) {\r\n        if (product.id === product_id) {\r\n          product.amount = product.amount;\r\n          return;\r\n        }\r\n        \r\n      }\r\n      if (product.id === product_id) {\r\n        product.amount = int;\r\n      }\r\n    })\r\n    setRender(render => render + 1)\r\n  }\r\n\r\n  const count = (product_id, type) => {\r\n    switch (type) {\r\n      case 'plus':\r\n        console.log('product_id', product_id);\r\n        products.map((product) => {\r\n          if (product.id === product_id) {\r\n            product.amount++;\r\n          }\r\n        })\r\n        setRender(render => render + 1)\r\n        break;\r\n\r\n      case 'minus':\r\n        console.log('product_id', product_id);\r\n        products.map((product) => {\r\n          if (product.id === product_id) {\r\n            if (product.amount < 2) {\r\n              return;\r\n            }\r\n            product.amount--;\r\n          }\r\n        })\r\n        setRender(render => render + 1)\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const amountItem = (list = products) => {\r\n    var per_product = [];\r\n    let final;\r\n\r\n    list.map((product) => {\r\n      per_product = [...per_product, product.amount];\r\n    })\r\n    \r\n    final = per_product.reduce((a, b) => a + b, 0);\r\n    setTotalItem(final);\r\n  }\r\n\r\n  const total = (list = products) => {\r\n    var per_product = [];\r\n    let final;\r\n\r\n    list.map((product) => {\r\n      let count = (product.price * product.amount);\r\n      per_product = [...per_product, count];\r\n    })\r\n    console.log('counting', per_product);\r\n    \r\n    final = per_product.reduce((a, b) => a + b, 0).toString();\r\n    setTotalPrice(final);\r\n  }\r\n\r\n  const validate = (user_id) => {\r\n    console.log('user_id', user_id);\r\n    const user = cookies.get('user');\r\n    if (user.name === null || user.address === null || user.city_id === null) {\r\n      alert('You must complete your data before going to the checkout section');\r\n      history.push('/user/settings')\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const goCheckout = () => {\r\n    const validation = validate(cookies.get('user').id);\r\n    if (validation) {\r\n      history.push('/order-checkout');\r\n    }\r\n    dispatch({type: 'CHECKOUT', products: products});\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCart(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [CartReducer.render]);\r\n\r\n  useEffect(() => {\r\n    total();\r\n    amountItem();\r\n  }, [render]);\r\n  \r\n  return (\r\n    <Fragment>\r\n      {console.log('products', products)}\r\n      <section className=\"cart-sect\">\r\n        <div className=\"cart-cont\">\r\n          <div className=\"cart-title\">\r\n            <span>Shopping Cart</span>\r\n          </div>\r\n          <div className=\"cart-content\">\r\n            <div className=\"cart-main\">\r\n              <div className=\"cart-list\">\r\n                {products.map((product) => (\r\n                  <div className=\"cart-card\">\r\n                    <div className=\"product-image\">\r\n                      <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${product.image[0].id}`} alt=\"product\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"product-name\">\r\n                      <div className=\"truncate\" style={{ WebkitLineClamp: \"1\" }} >\r\n                        <span className=\"name\">{product.name}</span>\r\n                      </div>\r\n                      <span>{product.store}</span>\r\n                    </div>\r\n                    <div className=\"input-amount\">\r\n                      <button\r\n                      onClick={() => count(product.id, 'minus')}\r\n                      >\r\n                        <i class=\"fas fa-minus\"></i>\r\n                      </button>\r\n                      <input type=\"number\" name=\"amount\" id=\"quantity-input\" min=\"1\" onKeyPress={event => event.charCode >= 48} onChange={e => inputChange(e.target.value, product.id)} value={product.amount} />\r\n                      <button\r\n                      onClick={() => count(product.id, 'plus')}\r\n                      >\r\n                        <i class=\"fas fa-plus\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"total-price\">\r\n                      <span>{currencyFormatter(product.price)}</span>\r\n                    </div>\r\n                    <div className=\"remove-cart\">\r\n                      <button disabled={loading} style={{ cursor: loading ? 'not-allowed' : 'pointer' }} onClick={() => removeItem(product.id)}><i class=\"fas fa-times\"></i></button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"cart-checkout-wrapper\">\r\n              <div className=\"cart-checkout\">\r\n                <div className=\"pay-title\">\r\n                  <span>Shopping Summary</span>\r\n                </div>\r\n                <div className=\"detail-payment\">\r\n                  <div className=\"total-price\">\r\n                    <span>Total Price ({countTotal(products, 'amount')} item)</span>\r\n                  </div>\r\n                  <div className=\"price-amount\">\r\n                    <span>{currencyFormatter(totalPrice)}</span>\r\n                  </div>\r\n                </div>\r\n                <hr className=\"payment-divider\" />\r\n                <div className=\"checkout-total\">\r\n                  <div className=\"total-price\">Subtotal</div>\r\n                  <div className=\"price-amount\">{currencyFormatter(totalPrice)}</div>\r\n                </div>\r\n                <button className=\"cart-checkout-btn ripple\" onClick={goCheckout}>Checkout</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Cart;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Checkout\\index.jsx",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Settings\\index.jsx",["384","385","386","387","388","389","390","391"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Menu\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\experiment\\ratingpicker\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\edit.jsx",["392","393","394","395","396","397"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport GridLoader from 'react-spinners/GridLoader';\r\nimport BeatLoader from 'react-spinners/BeatLoader';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nvar cookies = new Cookie();\r\n\r\nexport const Edit = () => {\r\n  let { id } = useParams();\r\n  const [product, setProduct] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [condition, setCondition] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [categoriesOpt, setCategoriesOpt] = useState([]);\r\n  const [price, setPrice] = useState();\r\n  const [priceValidation, setPriceValidation] = useState();\r\n  const [stock, setStock] = useState();\r\n  const [stockValidation, setStockValidation] = useState();\r\n  const [heavy, setHeavy] = useState();\r\n  const [heavyValidation, setHeavyValidation] = useState();\r\n  const [description, setDescription] = useState('');\r\n  let history = useHistory();\r\n\r\n  const getProduct = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/product/${id}`;\r\n    const urlCat = `${config.api_host}/api/category`;\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: token});\r\n      const responseCat = await Axios.get(urlCat, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setProduct(response.data.product);\r\n\r\n        let categories_id = [];\r\n        response.data.product.categories.map((category) => {\r\n          categories_id.push(category.id);\r\n        });\r\n        setCategories(categories_id);\r\n\r\n        let customCategories = responseCat.data.categories.map((category, i) => {\r\n          response.data.product.categories.map((product_category, a) => {\r\n            if (category.id === product_category.id) {\r\n              category = {...category, selected : true}\r\n            }\r\n          })\r\n          return category;\r\n        })\r\n\r\n        setCategoriesOpt(customCategories);\r\n      }\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      if (Axios.isCancel(e)) {\r\n        console.error('request cancelled', e);\r\n      } else {\r\n        console.error('Another error happened', e.message);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const editProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = `${config.api_host}/api/update-product/${id}`\r\n    let body = {};\r\n\r\n    if (name.length > 0) {\r\n      body = {...body, name};\r\n    }\r\n    if (description.length > 0) {\r\n      body = {...body, desc: description};\r\n    }\r\n    if (price !== undefined) {\r\n      body = {...body, price};\r\n    }\r\n    if (stock !== undefined) {\r\n      body = {...body, stock};\r\n    }\r\n    if (condition !== undefined) {\r\n      body = {...body, condition};\r\n    }\r\n    if (heavy !== undefined) {\r\n      body = {...body, heavy};\r\n    }\r\n    body = {...body, categories: categories}\r\n\r\n    console.log('body', body);\r\n    const header = {\r\n      'Authorization': `Bearer ${cookies.get('user_token')}`\r\n    }\r\n\r\n    setLoading2(true);\r\n    try {\r\n      const response = await Axios.post(url, body, {headers: header});\r\n      setLoading2(false);\r\n      history.push(`/seller/products`);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      setLoading2(false)\r\n    }\r\n  }\r\n\r\n  const categoryHandle = (item) => {\r\n    if (categories.includes(item)) {\r\n      setCategories(categories.filter(cat => cat != item));\r\n      categoriesOpt.map((categoryopt) => {\r\n        if (categoryopt.id === item) {\r\n          categoryopt = {...categoryopt, selected : false}\r\n        }\r\n      })\r\n    } else {\r\n      setCategories([...categories, item]);\r\n    }\r\n  }\r\n\r\n  const checkHandler = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    categoryHandle(value);\r\n  }\r\n\r\n  const integerHandle = (e, type) => {\r\n    let value = e.target.value;\r\n    if (value.length > 0) {\r\n      if (value.includes(\",\") || value.includes(\".\")) {\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(false);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(false);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(false);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        value = parseInt(value);\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(true);\r\n            setPrice(value);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(true);\r\n            setStock(value);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(true);\r\n            setHeavy(value);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      switch (type) {\r\n        case 'price':\r\n          setPriceValidation(undefined);\r\n          setPrice(undefined);\r\n          break;\r\n        case 'stock':\r\n          setStockValidation(undefined);\r\n          setStock(undefined);\r\n          break;\r\n        case 'heavy':\r\n          setHeavyValidation(undefined);\r\n          setHeavy(undefined);\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCondition = (value) => {\r\n    let isSet = (value === 'true');\r\n    if (isSet === true) {\r\n      product.condition = 1;\r\n    } else {\r\n      product.condition = 0;\r\n    }\r\n    console.log('isSet', isSet)\r\n    setCondition(isSet);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getProduct(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('categoriesOpt', categoriesOpt)}\r\n      {console.log('categories', categories)}\r\n      <form onSubmit={editProduct}>\r\n        <div className=\"product-information-form\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Product Information</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Product Name</h6>\r\n                <small className=\"text-secondary\">Name min. 5 words, consisting of the type <br/> of product, brand, and descriptions such <br/> as color, material or type.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"text\" className={name.length === 0 ? \"w-100 form-control\" : name.length < 5 ? \"w-100 form-control is-invalid\" : \"w-100 form-control is-valid\"} onChange={e => setName(e.target.value)} maxLength=\"70\" defaultValue={product.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\"><h6>Category</h6></div>\r\n              <div className=\"input-form category-badge-form col-7\">\r\n                <div className=\"load\"><GridLoader color=\"#00ce75\" size=\"10\" loading={loading} /></div>\r\n                {categoriesOpt.length > 0 && \r\n                  categoriesOpt.map((category, i) => \r\n                    <Fragment>\r\n                      <input type=\"checkbox\" id={`category-input ${category.id}`} onChange={e => checkHandler(e)} value={category.id} defaultChecked={category.selected}/>\r\n                      <label htmlFor={`category-input ${category.id}`}><span className=\"badge bg-secondary text-light\">{category.name}</span></label>\r\n                    </Fragment>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"product-information-form mt-4\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Detail Product</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\"><h6>Condition</h6></div>\r\n              <div className=\"input-form col-7 radio-input\">\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='true' checked={product.condition === 1}/>\r\n                  <span>New</span>\r\n                </div>\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='false' checked={product.condition === 0}/>\r\n                  <span>Second</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Price</h6>\r\n                <small className=\"text-secondary\">Enter the product price with number only. Do not use <br/> \".\" or \",\" when your're typing your product price.</small>\r\n              </div>\r\n              <div className=\"input-form price-input col-7\">\r\n                <span>Rp</span>\r\n                <input type=\"number\" className={priceValidation === undefined ? \"w-100 form-control\" : priceValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'price')} defaultValue={product.price} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Stock</h6>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"number\" className={stockValidation === undefined ? \"w-100 form-control\" : stockValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'stock')} defaultValue={product.stock} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Weight</h6>\r\n                <small className=\"text-secondary\">Product weight is typed in grams to make it easier during the checkout process. Make sure you fill <br/> it in correctly, e.g. 1000, 1600, 2000, etc.</small>\r\n              </div>\r\n              <div className=\"input-form heavy-input col-7\">\r\n                <span>gram</span>\r\n                <input type=\"number\" className={heavyValidation === undefined ? \"w-100 form-control\" : heavyValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'heavy')} defaultValue={product.heavy} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Description</h6>\r\n                <small className=\"text-secondary\">The product description min. 5 words. Make sure the product description contains specifications, sizes, materials, validity period, and others. The more details, the more useful it is for the buyer.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <textarea className={description.length < 1 ? \"form-control\" : description.length > 4 ? \"form-control is-valid\" : \"form-control is-invalid\"} id=\"exampleFormControlTextarea1\" rows=\"5\" onChange={e => setDescription(e.target.value)} defaultValue={product.description} ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"next-form-btn\" type=\"submit\" onSubmit={editProduct}>{loading2 ? <BeatLoader color=\"#ffffff\" size=\"8\"/> : 'Add Product'}</button>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Edit;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Tracking\\index.jsx",["398","399"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport Awaiting from '../../../assets/images/icons/awaiting_confirmation.svg';\r\nimport Processed from '../../../assets/images/icons/processed.svg';\r\nimport Shipping from '../../../assets/images/icons/shipping.svg';\r\nimport Delivered from '../../../assets/images/icons/delivered.svg';\r\nimport Rating from 'react-rating';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { OrderCard } from '../../Components/Card';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nimport Axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nvar cookies = new Cookie();\r\n\r\nconst Track = () => {\r\n  const dispatch = useDispatch();\r\n  const [popupReview, setPopupReview] = useState(false);\r\n  const [trackopt, setTrackopt] = useState(1);\r\n  const [packages, setPackages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [product_id, setProduct_id] = useState(0);\r\n  const [order_id, setOrder_id] = useState(0);\r\n  const [render, setRender] = useState(0);\r\n  const [rate, setRate] = useState();\r\n  const [comment, setComment] = useState('');\r\n\r\n  const handleCart = async (id) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    setLoading(true);\r\n    setProduct_id(id);\r\n    try {\r\n      const response = await Axios.get(url, { headers: header });\r\n      var list_cart = response.data.data.products;\r\n      addToCart(id, list_cart);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      if (error.response.status === 401) {\r\n        Swal.fire({icon: 'warning', title: 'Unauthorized', text: 'Please login first'});\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const addToCart = async (id, list) => {\r\n    let list_id = [];\r\n    list.map((product) => {\r\n      list_id.push(product.id)\r\n    });\r\n\r\n    let check_id = list_id.includes(id);\r\n    const url = `${config.api_host}/api/update-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    const body = { product_id: [id] }\r\n    console.log('check_id', check_id);\r\n    if (check_id) {\r\n      setLoading(false)\r\n      alert('You\\'ve added this product last time');\r\n      return false;\r\n    } else {\r\n      try {\r\n        const response_add = await Axios.post(url, body, { headers: header });\r\n        dispatch({type: 'CART_RENDER'})\r\n        console.log('response_add', response_add);\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getTrack = async (unmounted, token) => {\r\n    let url = `${config.api_host}/api/track/${trackopt}`;\r\n    let header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    \r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        console.log('response track', response);\r\n        setPackages(response.data.packages)\r\n      }\r\n    } catch (error) {\r\n      if (!unmounted) {\r\n        if (Axios.isCancel(error)) {\r\n          console.log(`Request cancelled ${error.message}`);\r\n        } else {\r\n          console.log(`Another error happened: ${error}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleTrackopt = (value, prev) => {\r\n    if (value === prev) {\r\n      return;\r\n    }\r\n    setTrackopt(value);\r\n  }\r\n\r\n  const handleArrivedOrder = async (order_id) => {\r\n    let url = `${config.api_host}/api/arrived-order/${order_id}`;\r\n    let header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    setOrder_id(order_id);\r\n    setLoading(true);\r\n    try {\r\n      let response = await Axios.get(url, {headers: header});\r\n      console.log('response arrived order', response);\r\n      setRender(render => render + 1);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(`Fail update order status : ${error}`);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const addReview = () => {\r\n    let url = `${config.api_host}/api/add-review`;\r\n    let header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    let body = {\r\n      rate,\r\n      comment,\r\n      order_id,\r\n      product_id\r\n    }\r\n\r\n    if (comment.length < 1) {\r\n      Swal.fire({icon: 'error', title: 'cannot be empty', text: 'Comment field cannot be null'});\r\n      return false;\r\n    } else if (rate === undefined) {\r\n      Swal.fire({icon: 'error', title: 'cannot be empty', text: 'Rate cannot be null'});\r\n      return false;\r\n    }\r\n\r\n    setLoading(true);\r\n    Axios.post(url, body, {headers: header})\r\n    .then(response => {\r\n      Swal.fire({icon: 'success', title: 'Thank you', text: response.data.message}).then(() => setPopupReview(false));\r\n      setLoading(false);\r\n      setComment('');\r\n      setRate();\r\n      setRender(render => render + 1);\r\n    }).catch(error => {\r\n      if (error.response) {\r\n        console.log('error.response.data', error.response.data);\r\n        console.log('error.response.status', error.response.status);\r\n        console.log('error.response.headers', error.response.headers);\r\n        Swal.fire({icon: 'error', title: 'Can\\'t do that', text: `${error.response.data.message}`}).then(() => setPopupReview(false));\r\n      }\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getTrack(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling request in cleanup');\r\n    }\r\n  }, [trackopt, render]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"track-sect\">\r\n        <div className=\"container\">\r\n          <div className=\"track-box\">\r\n            <div className=\"track-header\">\r\n              <div className=\"track-option-list\">\r\n                <div className={trackopt === 1 ? \"track-option selected\" : \"track-option\"} onClick={() => handleTrackopt(1, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Awaiting} alt=\"awaiting\"/></div>\r\n                  <span>Awaiting Seller Response</span>\r\n                </div>\r\n                <div className={trackopt === 2 ? \"track-option selected\" : \"track-option\"} onClick={() => handleTrackopt(2, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Processed} alt=\"processed\"/></div>\r\n                  <span>In Process</span>\r\n                </div>\r\n                <div className={trackopt === 3 ? \"track-option selected\" : \"track-option\"} onClick={() => handleTrackopt(3, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Shipping} alt=\"shipping\"/></div>\r\n                  <span>Shipping</span>\r\n                </div>\r\n                <div className={trackopt === 4 ? \"track-option selected\" : \"track-option\"} onClick={() => handleTrackopt(4, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Delivered} alt=\"finish\"/></div>\r\n                  <span>Finish</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"order-list\">\r\n              {packages.map((order, i) =>\r\n                <Fragment key={i}>\r\n                  <OrderCard key={i} productId={order.product.id} image={order.product.images[0].id} name={order.product.name} price={order.product.price} orderAmount={order.order_amount} totalProductPrice={order.total_product_price} weight={order.product.weight} onClick={() => {trackopt===3 ? handleArrivedOrder(order.id) : handleCart(order.product.id)}} loading={loading} trackOpt={trackopt} orderId={order_id} currProductId={product_id} type=\"buyer\" onReview={() => {setPopupReview(true); setOrder_id(order.id); setProduct_id(order.product.id)}}/>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {popupReview && \r\n      <div className=\"bg-white review-popup\">\r\n        <div className=\"box-popup\">\r\n          <div className=\"popup-header\">Your opinion matters to us</div>\r\n          <div className=\"popup-content\">\r\n            <h5 className=\"content-title\">How was quality of the product?</h5>\r\n            <Rating  onChange={e => setRate(e)} emptySymbol=\"fas fa-star empty\" fullSymbol=\"fas fa-star glow\" /> \r\n            <textarea onChange={e => setComment(e.target.value)} placeholder=\"This product is awesome\"></textarea>\r\n            <button onClick={addReview} disabled={loading}>{loading ? <PulseLoader size=\"15\" color=\"#ffffff\"/> : 'Rate now'}</button> {/* //TODO kasih validasi klo empty, klo success inputannya bersihin lagi */}\r\n          </div>\r\n          <button className=\"popup-footer\" onClick={() => setPopupReview(false)}>Maybe later</button>\r\n        </div>\r\n      </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Track;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Orders\\index.jsx",["400","401","402"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport NewOrder from '../../../assets/images/icons/seller/new_order.svg';\r\nimport ReadyToShip from '../../../assets/images/icons/seller/ready_to_ship.svg';\r\nimport Shipping from '../../../assets/images/icons/seller/shipping.svg';\r\nimport Delivered from '../../../assets/images/icons/seller/delivered.svg';\r\nimport Destination from '../../../assets/images/icons/destination.svg';\r\nimport { OrderCard } from '../../Components/Card';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nimport Axios from 'axios';\r\nvar cookies = new Cookie();\r\n\r\nconst Order = () => {\r\n  const dispatch = useDispatch();\r\n  const RenderReducer = useSelector(state => state.RenderReducer);\r\n  const [trackopt, setTrackopt] = useState(1);\r\n  const [packages, setPackages] = useState([]);\r\n  const [order_id, setOrder_id] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [render, setRender] = useState(0);\r\n  const [popup, setPopup] = useState(false);\r\n  const [popupData, setPopupData] = useState([]);\r\n\r\n  const getTrack = async (unmounted, token) => {\r\n    let url = `${config.api_host}/api/orders/${trackopt}`;\r\n    let header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    \r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        console.log('response track', response);\r\n        setPackages(response.data.packages);\r\n      }\r\n    } catch (error) {\r\n      if (!unmounted) {\r\n        if (Axios.isCancel(error)) {\r\n          console.log(`Request cancelled ${error.message}`);\r\n        } else {\r\n          console.log(`Another error happened: ${error}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleTrackopt = (value, prev) => {\r\n    if (value === prev) {\r\n      return;\r\n    }\r\n    setTrackopt(value);\r\n  }\r\n\r\n  const handleOrderStatus = async (order_id, nextStatus) => {\r\n    let url = `${config.api_host}/api/handle-order/${order_id}/status/${nextStatus}`;\r\n    let header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    setOrder_id(order_id);\r\n    setLoading(true);\r\n    try {\r\n      let response = await Axios.get(url, {headers: header});\r\n      console.log('response acc order', response);\r\n      setRender(render => render + 1);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(`Fail acc order: ${error}`);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getTrack(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling request in cleanup');\r\n    }\r\n  }, [trackopt, render]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"track-sect\">\r\n        <div className=\"container\">\r\n          <div className=\"track-box\">\r\n            <div className=\"track-header\">\r\n              <div className=\"track-option-list\">\r\n                <div className={trackopt === 1 ? \"track-option seller selected\" : \"track-option seller\"} onClick={() => handleTrackopt(1, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={NewOrder} alt=\"awaiting\"/></div>\r\n                  <span>New Order</span>\r\n                </div>\r\n                <div className={trackopt === 2 ? \"track-option seller selected\" : \"track-option seller\"} onClick={() => handleTrackopt(2, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={ReadyToShip} alt=\"processed\"/></div>\r\n                  <span>Ready To Ship</span>\r\n                </div>\r\n                <div className={trackopt === 3 ? \"track-option seller selected\" : \"track-option seller\"} onClick={() => handleTrackopt(3, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Shipping} alt=\"shipping\"/></div>\r\n                  <span>Shipping</span>\r\n                </div>\r\n                <div className={trackopt === 4 ? \"track-option seller selected\" : \"track-option seller\"} onClick={() => handleTrackopt(4, trackopt)}>\r\n                  <div className=\"track-logo-wrapper\"><img src={Delivered} alt=\"finish\"/></div>\r\n                  <span>Finish</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"order-list\">\r\n              {packages.map((order, i) =>\r\n                <Fragment key={i}>\r\n                  <OrderCard key={i} productId={order.product.id} image={order.product.images[0].id} name={order.product.name} price={order.product.price} orderAmount={order.order_amount} totalProductPrice={order.total_product_price} weight={order.product.weight} onClick={() => handleOrderStatus(order.id, parseInt(order.status) + 1)} loading={loading} orderId={order.id} currOrderId={order_id} type=\"seller\" trackOpt={trackopt} onPopup={() => {setPopup(true); setPopupData(order.user)}} />\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {console.log('popupData', popupData)}\r\n      </section>\r\n\r\n      {/*^ Destination Popup */}\r\n      {popup && \r\n      <div className=\"destination-info-popup\">\r\n        <div className=\"destination-info\">\r\n        <button onClick={() => setPopup(false)}><i class=\"fas fa-times\"></i></button>\r\n          <div className=\"destination-vector\">\r\n            <img src={Destination} alt=\"vector\"/>\r\n          </div>\r\n          <div className=\"destination-detail\">\r\n            <div className=\"info-label\">\r\n              <p>Name</p>\r\n              <p>Phone</p>\r\n              <p>Address</p>\r\n              <p>City</p>\r\n            </div>\r\n            <div className=\"info-detail\">\r\n              <p>{popupData.name}</p>\r\n              <p>{popupData.hp}</p>\r\n              <p>{popupData.address}</p>\r\n              <p>{popupData.city_name}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Order;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\ForgotPassword\\index.jsx",["403"],"import Axios from \"axios\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookie from 'universal-cookie';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { config } from \"../../../config\";\r\nvar cookies = new Cookie();\r\n\r\nconst ForgotPassword = ({ onBack, toLogin }) => {\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const sendEmail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let url = `${config.api_host}/api/password/email`;\r\n    let body = {email}\r\n    \r\n    setLoading(true);\r\n    console.log('body', body)\r\n    try {\r\n      const response = await Axios.post(url, body);\r\n      Swal.fire({icon: 'success', title: 'Already Sent', text: response.data.data})\r\n      dispatch({type: \"POPUP_TYPE\", popup: \"login\"});\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('error', error)\r\n      if (error.response) {\r\n        console.log('error.response.data', error.response.data)\r\n        if (error.response.status === 422) {\r\n          if (error.response.data.message.email) {\r\n            Swal.fire({icon: 'error', title: 'Oops...', text: `${error.response.data.message.email[0]}`});  \r\n          } else if (error.response.data.message === \"Please wait before retrying.\") {\r\n            Swal.fire({icon: 'error', title: 'Oops...', text: \"Please wait 60 seconds before retrying.\"});\r\n          } else {\r\n            Swal.fire({icon: 'error', text: `${error.response.data.message}`});\r\n          }\r\n        }\r\n        if (error.response.status === 500) {\r\n          Swal.fire({icon: 'error', title: 'Connection error', text: 'Make sure you have an active internet connections'});\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {CredentialPopup.open && (\r\n        <div className=\"login-modal\">\r\n          <div className=\"l-panel\">\r\n            <button className=\"popup-back\" onClick={onBack}>\r\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            </button>\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Try to Remember!</span>\r\n              <span className=\"small-text\">\r\n                Already remembered your password? Let's go back login.\r\n              </span>\r\n              <button onClick={toLogin}>\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"r-panel\">\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Forgot Password</span>\r\n              <span className=\"small-text\">\r\n                Enter your email address, we will send the password reset link to your mailbox\r\n              </span>\r\n              <form className=\"input-signup\" onSubmit={sendEmail}>\r\n                <div className=\"border-input\">\r\n                  <input type=\"text\" id=\"email-input\" onChange={e => setEmail(e.target.value)} placeholder=\"Email Address\"/>\r\n                </div>\r\n                <button className=\"submit-signin\" type=\"submit\" disabled={loading}>{loading ? <PulseLoader color=\"#ffffff\" size=\"8\" loading={loading} /> : \"Send Reset Link\"}</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\CallbackResetPassword\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Settings\\index.jsx",["404","405","406","407"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Wishlist\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Footer.jsx",[],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":13,"column":8,"nodeType":"414","messageId":"415","endLine":13,"endColumn":19},{"ruleId":"412","severity":1,"message":"416","line":16,"column":10,"nodeType":"414","messageId":"415","endLine":16,"endColumn":26},{"ruleId":"412","severity":1,"message":"417","line":2,"column":25,"nodeType":"414","messageId":"415","endLine":2,"endColumn":33},{"ruleId":"412","severity":1,"message":"418","line":20,"column":19,"nodeType":"414","messageId":"415","endLine":20,"endColumn":29},{"ruleId":"412","severity":1,"message":"419","line":22,"column":10,"nodeType":"414","messageId":"415","endLine":22,"endColumn":16},{"ruleId":"412","severity":1,"message":"420","line":22,"column":18,"nodeType":"414","messageId":"415","endLine":22,"endColumn":27},{"ruleId":"412","severity":1,"message":"421","line":23,"column":10,"nodeType":"414","messageId":"415","endLine":23,"endColumn":17},{"ruleId":"412","severity":1,"message":"422","line":26,"column":10,"nodeType":"414","messageId":"415","endLine":26,"endColumn":14},{"ruleId":"412","severity":1,"message":"423","line":26,"column":16,"nodeType":"414","messageId":"415","endLine":26,"endColumn":23},{"ruleId":"424","severity":1,"message":"425","line":226,"column":6,"nodeType":"426","endLine":226,"endColumn":8,"suggestions":"427"},{"ruleId":"428","severity":1,"message":"429","line":256,"column":95,"nodeType":"430","endLine":256,"endColumn":118},{"ruleId":"412","severity":1,"message":"431","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"432","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":17},{"ruleId":"412","severity":1,"message":"433","line":17,"column":16,"nodeType":"414","messageId":"415","endLine":17,"endColumn":23},{"ruleId":"412","severity":1,"message":"434","line":12,"column":10,"nodeType":"414","messageId":"415","endLine":12,"endColumn":22},{"ruleId":"412","severity":1,"message":"435","line":13,"column":10,"nodeType":"414","messageId":"415","endLine":13,"endColumn":12},{"ruleId":"412","severity":1,"message":"436","line":13,"column":14,"nodeType":"414","messageId":"415","endLine":13,"endColumn":19},{"ruleId":"412","severity":1,"message":"437","line":2,"column":25,"nodeType":"414","messageId":"415","endLine":2,"endColumn":35},{"ruleId":"424","severity":1,"message":"438","line":216,"column":6,"nodeType":"426","endLine":216,"endColumn":16,"suggestions":"439"},{"ruleId":"440","severity":1,"message":"441","line":261,"column":71,"nodeType":"442","messageId":"443","endLine":261,"endColumn":73},{"ruleId":"440","severity":1,"message":"441","line":261,"column":87,"nodeType":"442","messageId":"443","endLine":261,"endColumn":89},{"ruleId":"440","severity":1,"message":"444","line":261,"column":304,"nodeType":"442","messageId":"443","endLine":261,"endColumn":306},{"ruleId":"440","severity":1,"message":"444","line":261,"column":335,"nodeType":"442","messageId":"443","endLine":261,"endColumn":337},{"ruleId":"440","severity":1,"message":"441","line":261,"column":335,"nodeType":"442","messageId":"443","endLine":261,"endColumn":337},{"ruleId":"440","severity":1,"message":"441","line":261,"column":346,"nodeType":"442","messageId":"443","endLine":261,"endColumn":348},{"ruleId":"412","severity":1,"message":"445","line":2,"column":5,"nodeType":"414","messageId":"415","endLine":2,"endColumn":12},{"ruleId":"412","severity":1,"message":"437","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":20},{"ruleId":"412","severity":1,"message":"446","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":146,"column":19,"nodeType":"449","messageId":"450","endLine":146,"endColumn":21},{"ruleId":"412","severity":1,"message":"451","line":15,"column":14,"nodeType":"414","messageId":"415","endLine":15,"endColumn":19},{"ruleId":"424","severity":1,"message":"452","line":34,"column":6,"nodeType":"426","endLine":34,"endColumn":19,"suggestions":"453"},{"ruleId":"454","severity":1,"message":"455","line":66,"column":9,"nodeType":"430","endLine":66,"endColumn":12},{"ruleId":"428","severity":1,"message":"429","line":67,"column":11,"nodeType":"430","endLine":67,"endColumn":94},{"ruleId":"424","severity":1,"message":"456","line":116,"column":6,"nodeType":"426","endLine":116,"endColumn":8,"suggestions":"457"},{"ruleId":"412","severity":1,"message":"445","line":3,"column":5,"nodeType":"414","messageId":"415","endLine":3,"endColumn":12},{"ruleId":"412","severity":1,"message":"458","line":32,"column":9,"nodeType":"414","messageId":"415","endLine":32,"endColumn":20},{"ruleId":"412","severity":1,"message":"459","line":39,"column":10,"nodeType":"414","messageId":"415","endLine":39,"endColumn":19},{"ruleId":"412","severity":1,"message":"460","line":39,"column":21,"nodeType":"414","messageId":"415","endLine":39,"endColumn":33},{"ruleId":"412","severity":1,"message":"461","line":46,"column":17,"nodeType":"414","messageId":"415","endLine":46,"endColumn":25},{"ruleId":"412","severity":1,"message":"462","line":48,"column":19,"nodeType":"414","messageId":"415","endLine":48,"endColumn":29},{"ruleId":"412","severity":1,"message":"422","line":54,"column":9,"nodeType":"414","messageId":"415","endLine":54,"endColumn":13},{"ruleId":"412","severity":1,"message":"463","line":55,"column":9,"nodeType":"414","messageId":"415","endLine":55,"endColumn":12},{"ruleId":"412","severity":1,"message":"464","line":57,"column":9,"nodeType":"414","messageId":"415","endLine":57,"endColumn":24},{"ruleId":"424","severity":1,"message":"465","line":115,"column":6,"nodeType":"426","endLine":115,"endColumn":14,"suggestions":"466"},{"ruleId":"467","severity":1,"message":"468","line":149,"column":9,"nodeType":"449","messageId":"469","endLine":149,"endColumn":53},{"ruleId":"470","severity":1,"message":"471","line":149,"column":33,"nodeType":"472","messageId":"473","endLine":149,"endColumn":35},{"ruleId":"447","severity":1,"message":"448","line":205,"column":24,"nodeType":"449","messageId":"450","endLine":205,"endColumn":26},{"ruleId":"424","severity":1,"message":"474","line":267,"column":6,"nodeType":"426","endLine":267,"endColumn":8,"suggestions":"475"},{"ruleId":"454","severity":1,"message":"455","line":278,"column":9,"nodeType":"430","endLine":278,"endColumn":12},{"ruleId":"428","severity":1,"message":"429","line":279,"column":11,"nodeType":"430","endLine":282,"endColumn":12},{"ruleId":"412","severity":1,"message":"476","line":11,"column":10,"nodeType":"414","messageId":"415","endLine":11,"endColumn":27},{"ruleId":"412","severity":1,"message":"477","line":11,"column":29,"nodeType":"414","messageId":"415","endLine":11,"endColumn":42},{"ruleId":"412","severity":1,"message":"478","line":13,"column":23,"nodeType":"414","messageId":"415","endLine":13,"endColumn":34},{"ruleId":"412","severity":1,"message":"435","line":23,"column":10,"nodeType":"414","messageId":"415","endLine":23,"endColumn":12},{"ruleId":"412","severity":1,"message":"436","line":23,"column":14,"nodeType":"414","messageId":"415","endLine":23,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":82,"column":24,"nodeType":"449","messageId":"450","endLine":82,"endColumn":26},{"ruleId":"424","severity":1,"message":"479","line":110,"column":6,"nodeType":"426","endLine":110,"endColumn":17,"suggestions":"480"},{"ruleId":"454","severity":1,"message":"455","line":121,"column":9,"nodeType":"430","endLine":121,"endColumn":12},{"ruleId":"412","severity":1,"message":"481","line":5,"column":7,"nodeType":"414","messageId":"415","endLine":5,"endColumn":18},{"ruleId":"412","severity":1,"message":"482","line":46,"column":7,"nodeType":"414","messageId":"415","endLine":46,"endColumn":21},{"ruleId":"412","severity":1,"message":"483","line":83,"column":9,"nodeType":"414","messageId":"415","endLine":83,"endColumn":14},{"ruleId":"484","severity":1,"message":"485","line":98,"column":13,"nodeType":"430","endLine":98,"endColumn":61},{"ruleId":"412","severity":1,"message":"486","line":116,"column":10,"nodeType":"414","messageId":"415","endLine":116,"endColumn":19},{"ruleId":"412","severity":1,"message":"487","line":117,"column":20,"nodeType":"414","messageId":"415","endLine":117,"endColumn":31},{"ruleId":"412","severity":1,"message":"488","line":141,"column":12,"nodeType":"414","messageId":"415","endLine":141,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":170,"column":32,"nodeType":"430","endLine":170,"endColumn":58},{"ruleId":"440","severity":1,"message":"441","line":28,"column":16,"nodeType":"442","messageId":"443","endLine":28,"endColumn":18},{"ruleId":"440","severity":1,"message":"441","line":28,"column":28,"nodeType":"442","messageId":"443","endLine":28,"endColumn":30},{"ruleId":"412","severity":1,"message":"489","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":35},{"ruleId":"412","severity":1,"message":"490","line":3,"column":8,"nodeType":"414","messageId":"415","endLine":3,"endColumn":16},{"ruleId":"412","severity":1,"message":"491","line":17,"column":12,"nodeType":"414","messageId":"415","endLine":17,"endColumn":23},{"ruleId":"412","severity":1,"message":"492","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"493","line":5,"column":10,"nodeType":"414","messageId":"415","endLine":5,"endColumn":13},{"ruleId":"412","severity":1,"message":"494","line":20,"column":7,"nodeType":"414","messageId":"415","endLine":20,"endColumn":14},{"ruleId":"412","severity":1,"message":"495","line":173,"column":13,"nodeType":"414","messageId":"415","endLine":173,"endColumn":21},{"ruleId":"440","severity":1,"message":"441","line":276,"column":86,"nodeType":"442","messageId":"443","endLine":276,"endColumn":88},{"ruleId":"440","severity":1,"message":"441","line":276,"column":111,"nodeType":"442","messageId":"443","endLine":276,"endColumn":113},{"ruleId":"412","severity":1,"message":"496","line":14,"column":10,"nodeType":"414","messageId":"415","endLine":14,"endColumn":16},{"ruleId":"412","severity":1,"message":"497","line":14,"column":18,"nodeType":"414","messageId":"415","endLine":14,"endColumn":27},{"ruleId":"424","severity":1,"message":"498","line":116,"column":6,"nodeType":"426","endLine":116,"endColumn":43,"suggestions":"499"},{"ruleId":"424","severity":1,"message":"500","line":116,"column":21,"nodeType":"501","endLine":116,"endColumn":42},{"ruleId":"412","severity":1,"message":"502","line":16,"column":9,"nodeType":"414","messageId":"415","endLine":16,"endColumn":13},{"ruleId":"467","severity":1,"message":"468","line":54,"column":9,"nodeType":"449","messageId":"469","endLine":54,"endColumn":53},{"ruleId":"470","severity":1,"message":"471","line":54,"column":33,"nodeType":"472","messageId":"473","endLine":54,"endColumn":35},{"ruleId":"412","severity":1,"message":"495","line":93,"column":13,"nodeType":"414","messageId":"415","endLine":93,"endColumn":21},{"ruleId":"424","severity":1,"message":"503","line":127,"column":6,"nodeType":"426","endLine":127,"endColumn":8,"suggestions":"504"},{"ruleId":"412","severity":1,"message":"505","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"506","line":13,"column":10,"nodeType":"414","messageId":"415","endLine":13,"endColumn":15},{"ruleId":"424","severity":1,"message":"507","line":58,"column":6,"nodeType":"426","endLine":58,"endColumn":8,"suggestions":"508"},{"ruleId":"412","severity":1,"message":"509","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"470","severity":1,"message":"510","line":77,"column":50,"nodeType":"472","messageId":"473","endLine":77,"endColumn":52},{"ruleId":"412","severity":1,"message":"486","line":11,"column":10,"nodeType":"414","messageId":"415","endLine":11,"endColumn":19},{"ruleId":"412","severity":1,"message":"511","line":11,"column":21,"nodeType":"414","messageId":"415","endLine":11,"endColumn":33},{"ruleId":"412","severity":1,"message":"512","line":13,"column":10,"nodeType":"414","messageId":"415","endLine":13,"endColumn":18},{"ruleId":"424","severity":1,"message":"513","line":30,"column":6,"nodeType":"426","endLine":30,"endColumn":8,"suggestions":"514"},{"ruleId":"424","severity":1,"message":"515","line":96,"column":6,"nodeType":"426","endLine":96,"endColumn":21,"suggestions":"516"},{"ruleId":"428","severity":1,"message":"429","line":115,"column":41,"nodeType":"430","endLine":115,"endColumn":92},{"ruleId":"428","severity":1,"message":"429","line":129,"column":41,"nodeType":"430","endLine":129,"endColumn":92},{"ruleId":"428","severity":1,"message":"429","line":142,"column":41,"nodeType":"430","endLine":142,"endColumn":92},{"ruleId":"428","severity":1,"message":"429","line":155,"column":41,"nodeType":"430","endLine":155,"endColumn":92},{"ruleId":"428","severity":1,"message":"429","line":168,"column":41,"nodeType":"430","endLine":168,"endColumn":92},{"ruleId":"428","severity":1,"message":"429","line":181,"column":41,"nodeType":"430","endLine":181,"endColumn":92},{"ruleId":"517","severity":1,"message":"518","line":19,"column":135,"nodeType":"519","endLine":19,"endColumn":149},{"ruleId":"424","severity":1,"message":"520","line":35,"column":6,"nodeType":"426","endLine":35,"endColumn":8,"suggestions":"521"},{"ruleId":"412","severity":1,"message":"477","line":3,"column":41,"nodeType":"414","messageId":"415","endLine":3,"endColumn":54},{"ruleId":"412","severity":1,"message":"522","line":16,"column":10,"nodeType":"414","messageId":"415","endLine":16,"endColumn":15},{"ruleId":"412","severity":1,"message":"523","line":16,"column":17,"nodeType":"414","messageId":"415","endLine":16,"endColumn":25},{"ruleId":"412","severity":1,"message":"524","line":20,"column":10,"nodeType":"414","messageId":"415","endLine":20,"endColumn":19},{"ruleId":"447","severity":1,"message":"525","line":72,"column":28,"nodeType":"449","messageId":"526","endLine":72,"endColumn":30},{"ruleId":"527","severity":1,"message":"528","line":75,"column":28,"nodeType":"529","messageId":"530","endLine":75,"endColumn":42},{"ruleId":"447","severity":1,"message":"448","line":76,"column":11,"nodeType":"531","messageId":"532","endLine":76,"endColumn":18},{"ruleId":"447","severity":1,"message":"448","line":91,"column":32,"nodeType":"449","messageId":"450","endLine":91,"endColumn":34},{"ruleId":"447","severity":1,"message":"525","line":101,"column":32,"nodeType":"449","messageId":"526","endLine":101,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":104,"column":15,"nodeType":"531","messageId":"532","endLine":104,"endColumn":22},{"ruleId":"447","severity":1,"message":"448","line":122,"column":24,"nodeType":"449","messageId":"450","endLine":122,"endColumn":26},{"ruleId":"447","severity":1,"message":"448","line":134,"column":24,"nodeType":"449","messageId":"450","endLine":134,"endColumn":26},{"ruleId":"424","severity":1,"message":"533","line":172,"column":6,"nodeType":"426","endLine":172,"endColumn":26,"suggestions":"534"},{"ruleId":"424","severity":1,"message":"535","line":177,"column":6,"nodeType":"426","endLine":177,"endColumn":14,"suggestions":"536"},{"ruleId":"412","severity":1,"message":"537","line":9,"column":10,"nodeType":"414","messageId":"415","endLine":9,"endColumn":15},{"ruleId":"412","severity":1,"message":"419","line":16,"column":10,"nodeType":"414","messageId":"415","endLine":16,"endColumn":16},{"ruleId":"412","severity":1,"message":"538","line":17,"column":10,"nodeType":"414","messageId":"415","endLine":17,"endColumn":20},{"ruleId":"412","severity":1,"message":"539","line":17,"column":22,"nodeType":"414","messageId":"415","endLine":17,"endColumn":35},{"ruleId":"412","severity":1,"message":"540","line":20,"column":7,"nodeType":"414","messageId":"415","endLine":20,"endColumn":11},{"ruleId":"447","severity":1,"message":"448","line":47,"column":32,"nodeType":"449","messageId":"450","endLine":47,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":55,"column":32,"nodeType":"449","messageId":"450","endLine":55,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":63,"column":32,"nodeType":"449","messageId":"450","endLine":63,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":74,"column":32,"nodeType":"449","messageId":"450","endLine":74,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":75,"column":35,"nodeType":"449","messageId":"450","endLine":75,"endColumn":37},{"ruleId":"447","severity":1,"message":"448","line":92,"column":32,"nodeType":"449","messageId":"450","endLine":92,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":98,"column":37,"nodeType":"449","messageId":"450","endLine":98,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":127,"column":34,"nodeType":"449","messageId":"450","endLine":127,"endColumn":36},{"ruleId":"412","severity":1,"message":"541","line":158,"column":9,"nodeType":"414","messageId":"415","endLine":158,"endColumn":15},{"ruleId":"447","severity":1,"message":"448","line":158,"column":57,"nodeType":"449","messageId":"450","endLine":158,"endColumn":59},{"ruleId":"447","severity":1,"message":"448","line":169,"column":24,"nodeType":"449","messageId":"450","endLine":169,"endColumn":26},{"ruleId":"447","severity":1,"message":"448","line":171,"column":40,"nodeType":"449","messageId":"450","endLine":171,"endColumn":42},{"ruleId":"447","severity":1,"message":"448","line":179,"column":40,"nodeType":"449","messageId":"450","endLine":179,"endColumn":42},{"ruleId":"412","severity":1,"message":"542","line":190,"column":11,"nodeType":"414","messageId":"415","endLine":190,"endColumn":24},{"ruleId":"447","severity":1,"message":"448","line":194,"column":34,"nodeType":"449","messageId":"450","endLine":194,"endColumn":36},{"ruleId":"447","severity":1,"message":"448","line":195,"column":37,"nodeType":"449","messageId":"450","endLine":195,"endColumn":39},{"ruleId":"424","severity":1,"message":"543","line":212,"column":6,"nodeType":"426","endLine":212,"endColumn":8,"suggestions":"544"},{"ruleId":"412","severity":1,"message":"545","line":29,"column":10,"nodeType":"414","messageId":"415","endLine":29,"endColumn":21},{"ruleId":"412","severity":1,"message":"546","line":29,"column":23,"nodeType":"414","messageId":"415","endLine":29,"endColumn":37},{"ruleId":"412","severity":1,"message":"547","line":30,"column":24,"nodeType":"414","messageId":"415","endLine":30,"endColumn":39},{"ruleId":"412","severity":1,"message":"494","line":32,"column":7,"nodeType":"414","messageId":"415","endLine":32,"endColumn":14},{"ruleId":"470","severity":1,"message":"471","line":39,"column":113,"nodeType":"472","messageId":"473","endLine":39,"endColumn":115},{"ruleId":"467","severity":1,"message":"468","line":119,"column":9,"nodeType":"449","messageId":"469","endLine":119,"endColumn":53},{"ruleId":"470","severity":1,"message":"471","line":119,"column":33,"nodeType":"472","messageId":"473","endLine":119,"endColumn":35},{"ruleId":"424","severity":1,"message":"503","line":218,"column":6,"nodeType":"426","endLine":218,"endColumn":14,"suggestions":"548"},{"ruleId":"447","severity":1,"message":"448","line":39,"column":57,"nodeType":"449","messageId":"450","endLine":39,"endColumn":59},{"ruleId":"447","severity":1,"message":"448","line":45,"column":70,"nodeType":"449","messageId":"450","endLine":45,"endColumn":72},{"ruleId":"412","severity":1,"message":"495","line":99,"column":13,"nodeType":"414","messageId":"415","endLine":99,"endColumn":21},{"ruleId":"470","severity":1,"message":"510","line":110,"column":50,"nodeType":"472","messageId":"473","endLine":110,"endColumn":52},{"ruleId":"447","severity":1,"message":"448","line":111,"column":39,"nodeType":"449","messageId":"450","endLine":111,"endColumn":41},{"ruleId":"424","severity":1,"message":"452","line":205,"column":6,"nodeType":"426","endLine":205,"endColumn":8,"suggestions":"549"},{"ruleId":"447","severity":1,"message":"448","line":48,"column":24,"nodeType":"449","messageId":"450","endLine":48,"endColumn":26},{"ruleId":"424","severity":1,"message":"550","line":166,"column":6,"nodeType":"426","endLine":166,"endColumn":24,"suggestions":"551"},{"ruleId":"412","severity":1,"message":"552","line":15,"column":9,"nodeType":"414","messageId":"415","endLine":15,"endColumn":17},{"ruleId":"412","severity":1,"message":"553","line":16,"column":9,"nodeType":"414","messageId":"415","endLine":16,"endColumn":22},{"ruleId":"424","severity":1,"message":"550","line":79,"column":6,"nodeType":"426","endLine":79,"endColumn":24,"suggestions":"554"},{"ruleId":"412","severity":1,"message":"445","line":8,"column":5,"nodeType":"414","messageId":"415","endLine":8,"endColumn":12},{"ruleId":"467","severity":1,"message":"468","line":73,"column":9,"nodeType":"449","messageId":"469","endLine":73,"endColumn":53},{"ruleId":"470","severity":1,"message":"471","line":73,"column":33,"nodeType":"472","messageId":"473","endLine":73,"endColumn":35},{"ruleId":"424","severity":1,"message":"503","line":147,"column":6,"nodeType":"426","endLine":147,"endColumn":8,"suggestions":"555"},{"ruleId":"556","severity":1,"message":"557","line":221,"column":1,"nodeType":"558","messageId":"559","endLine":230,"endColumn":11},"no-native-reassign",["560"],"no-negated-in-lhs",["561"],"no-unused-vars","'UploadImage' is defined but never used.","Identifier","unusedVar","'PushNotification' is defined but never used.","'Redirect' is defined but never used.","'setLoading' is assigned a value but never used.","'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'clicked' is assigned a value but never used.","'cart' is assigned a value but never used.","'setCart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["562"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'Quickview' is defined but never used.","'setLoop' is assigned a value but never used.","'gratisongkir' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["563"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '&&' and '||'.","'cookies' is assigned a value but never used.","'Axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setUd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["564"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["565"],"'CartReducer' is assigned a value but never used.","'provinces' is assigned a value but never used.","'setProvinces' is assigned a value but never used.","'setBerat' is assigned a value but never used.","'setCourier' is assigned a value but never used.","'arr' is assigned a value but never used.","'prevDestination' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'estOngkir'. Either include it or remove the dependency array.",["566"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCity' and 'getProduct'. Either include them or remove the dependency array.",["567"],"'currencyFormatter' is defined but never used.","'soldFormatter' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'Quickview'. Either include it or remove the dependency array.",["568"],"'UploadImage' is assigned a value but never used.","'UploadImageIbb' is assigned a value but never used.","'style' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'imagedata' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'handleChangew' is defined but never used.","'useState' is defined but never used.","'firebase' is defined but never used.","'handleClick' is defined but never used.","'useEffect' is defined but never used.","'css' is defined but never used.","'history' is assigned a value but never used.","'response' is assigned a value but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["569"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'node' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCity'. Either include it or remove the dependency array.",["570"],"'Vector' is defined but never used.","'popup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["571"],"'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'setImagedata' is assigned a value but never used.","'previews' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'addFormData' and 'currentUpload'. Either include them or remove the dependency array.",["572"],"React Hook useEffect has a missing dependency: 'imageUrl'. Either include it or remove the dependency array.",["573"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'seller_type'. Either include it or remove the dependency array.",["574"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'totalItem' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-self-assign","'product.amount' is assigned to itself.","MemberExpression","selfAssignment","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["575"],"React Hook useEffect has missing dependencies: 'amountItem' and 'total'. Either include them or remove the dependency array.",["576"],"'store' is defined but never used.","'renderPage' is assigned a value but never used.","'setRenderPage' is assigned a value but never used.","'user' is assigned a value but never used.","'result' is assigned a value but never used.","'handleCourier' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CheckoutReducer.products', 'getCost', 'grouped', and 'groupedProducts'. Either include them or remove the dependency array.",["577"],"'inputavatar' is assigned a value but never used.","'setInputavatar' is assigned a value but never used.","'setValidFileExt' is assigned a value but never used.",["578"],["579"],"React Hook useEffect has a missing dependency: 'getTrack'. Either include it or remove the dependency array.",["580"],"'dispatch' is assigned a value but never used.","'RenderReducer' is assigned a value but never used.",["581"],["582"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"619","fix":"621"},{"desc":"599","fix":"622"},"Update the dependencies array to be: [login]",{"range":"623","text":"624"},"Update the dependencies array to be: [trackOpt, type]",{"range":"625","text":"626"},"Update the dependencies array to be: [QReducer.id, getProduct]",{"range":"627","text":"628"},"Update the dependencies array to be: [handleClick]",{"range":"629","text":"630"},"Update the dependencies array to be: [estOngkir, render]",{"range":"631","text":"632"},"Update the dependencies array to be: [getCity, getProduct]",{"range":"633","text":"634"},"Update the dependencies array to be: [Quickview, productId]",{"range":"635","text":"636"},"Update the dependencies array to be: [type, render, getProducts]",{"range":"637","text":"638"},"Update the dependencies array to be: [getCity]",{"range":"639","text":"640"},"Update the dependencies array to be: [query]",{"range":"641","text":"642"},"Update the dependencies array to be: [addFormData, currentUpload]",{"range":"643","text":"644"},"Update the dependencies array to be: [imageUrl, successUpload]",{"range":"645","text":"646"},"Update the dependencies array to be: [seller_type]",{"range":"647","text":"648"},"Update the dependencies array to be: [CartReducer.render, getCart]",{"range":"649","text":"650"},"Update the dependencies array to be: [amountItem, render, total]",{"range":"651","text":"652"},"Update the dependencies array to be: [CheckoutReducer.products, getCost, grouped, groupedProducts]",{"range":"653","text":"654"},"Update the dependencies array to be: [getCity, render]",{"range":"655","text":"656"},"Update the dependencies array to be: [getProduct]",{"range":"657","text":"658"},"Update the dependencies array to be: [trackopt, render, getTrack]",{"range":"659","text":"660"},{"range":"661","text":"660"},{"range":"662","text":"640"},[7063,7065],"[login]",[7965,7975],"[trackOpt, type]",[1093,1106],"[QReducer.id, getProduct]",[3548,3550],"[handleClick]",[3938,3946],"[estOngkir, render]",[8567,8569],"[getCity, getProduct]",[3524,3535],"[Quickview, productId]",[3436,3473],"[type, render, getProducts]",[3773,3775],"[getCity]",[1821,1823],"[query]",[1173,1175],"[addFormData, currentUpload]",[3061,3076],"[imageUrl, successUpload]",[1472,1474],"[seller_type]",[5049,5069],"[CartReducer.render, getCart]",[5134,5142],"[amountItem, render, total]",[7036,7038],"[CheckoutReducer.products, getCost, grouped, groupedProducts]",[7109,7117],"[getCity, render]",[5880,5882],"[getProduct]",[5625,5643],"[trackopt, render, getTrack]",[2793,2811],[4510,4512]]