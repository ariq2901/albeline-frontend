[{"A:\\Tugas Akhir\\marketplacef\\src\\index.js":"1","A:\\Tugas Akhir\\marketplacef\\src\\App.js":"2","A:\\Tugas Akhir\\marketplacef\\src\\reportWebVitals.js":"3","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Navbar.jsx":"4","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\index.jsx":"5","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Header.jsx":"6","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Banner.jsx":"7","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Product.jsx":"8","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Card.jsx":"9","A:\\Tugas Akhir\\marketplacef\\src\\config.js":"10","A:\\Tugas Akhir\\marketplacef\\src\\utils\\index.js":"11","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\SliderCustomized.jsx":"12","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\FeaturedProduct.jsx":"13","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Quickview.jsx":"14","A:\\Tugas Akhir\\marketplacef\\src\\redux\\index.js":"15","A:\\Tugas Akhir\\marketplacef\\src\\redux\\store.js":"16","A:\\Tugas Akhir\\marketplacef\\src\\redux\\reducer.js":"17","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Detail\\index.jsx":"18","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\ProductHome.jsx":"19","A:\\Tugas Akhir\\marketplacef\\src\\config\\firebase\\index.js":"20","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\index.jsx":"21","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Login\\index.jsx":"22","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\index.js":"23","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Signup\\index.jsx":"24","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\pushnotification\\index.jsx":"25","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\ListProduct\\index.jsx":"26","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Register\\index.jsx":"27","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\index.jsx":"28","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Dashboard\\index.jsx":"29","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Menu\\index.jsx":"30","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Products\\index.jsx":"31","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\add.jsx":"32","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\upload.jsx":"33","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\Dropzone.jsx":"34","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\Dropzone.jsx":"35","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\ImageLoad.jsx":"36","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Guarder\\AuthGuarder.jsx":"37","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Notfound.jsx":"38","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\GettingStarted.jsx":"39","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Cart\\index.jsx":"40","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Checkout\\index.jsx":"41","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Settings\\index.jsx":"42","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\index.jsx":"43","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Menu\\index.jsx":"44"},{"size":603,"mtime":1611553093035,"results":"45","hashOfConfig":"46"},{"size":2225,"mtime":1613735665866,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":9992,"mtime":1613888365987,"results":"49","hashOfConfig":"46"},{"size":321,"mtime":1612401353344,"results":"50","hashOfConfig":"46"},{"size":4798,"mtime":1613570304846,"results":"51","hashOfConfig":"46"},{"size":615,"mtime":1608648473938,"results":"52","hashOfConfig":"46"},{"size":2121,"mtime":1612322725475,"results":"53","hashOfConfig":"46"},{"size":6404,"mtime":1613358353278,"results":"54","hashOfConfig":"46"},{"size":256,"mtime":1613650864724,"results":"55","hashOfConfig":"46"},{"size":6082,"mtime":1613793383448,"results":"56","hashOfConfig":"46"},{"size":280,"mtime":1608730507114,"results":"57","hashOfConfig":"46"},{"size":2126,"mtime":1613446697820,"results":"58","hashOfConfig":"46"},{"size":6089,"mtime":1613266212731,"results":"59","hashOfConfig":"46"},{"size":49,"mtime":1608893704687,"results":"60","hashOfConfig":"46"},{"size":212,"mtime":1608893696625,"results":"61","hashOfConfig":"46"},{"size":2432,"mtime":1613888558679,"results":"62","hashOfConfig":"46"},{"size":19919,"mtime":1613358191565,"results":"63","hashOfConfig":"46"},{"size":5503,"mtime":1613719985589,"results":"64","hashOfConfig":"46"},{"size":530,"mtime":1611589861701,"results":"65","hashOfConfig":"46"},{"size":6935,"mtime":1613614373390,"results":"66","hashOfConfig":"46"},{"size":5488,"mtime":1613888291116,"results":"67","hashOfConfig":"46"},{"size":2118,"mtime":1613719832183,"results":"68","hashOfConfig":"46"},{"size":9691,"mtime":1613892446246,"results":"69","hashOfConfig":"46"},{"size":758,"mtime":1611589878052,"results":"70","hashOfConfig":"46"},{"size":8649,"mtime":1612488846776,"results":"71","hashOfConfig":"46"},{"size":5581,"mtime":1613893054061,"results":"72","hashOfConfig":"46"},{"size":1460,"mtime":1613305545428,"results":"73","hashOfConfig":"46"},{"size":3035,"mtime":1613305093758,"results":"74","hashOfConfig":"46"},{"size":866,"mtime":1612917697901,"results":"75","hashOfConfig":"46"},{"size":2781,"mtime":1612995425325,"results":"76","hashOfConfig":"46"},{"size":10762,"mtime":1613017378259,"results":"77","hashOfConfig":"46"},{"size":9066,"mtime":1613894543051,"results":"78","hashOfConfig":"46"},{"size":864,"mtime":1613062506288,"results":"79","hashOfConfig":"46"},{"size":907,"mtime":1613097149354,"results":"80","hashOfConfig":"46"},{"size":759,"mtime":1613604114395,"results":"81","hashOfConfig":"46"},{"size":478,"mtime":1613267562715,"results":"82","hashOfConfig":"46"},{"size":1278,"mtime":1613470486158,"results":"83","hashOfConfig":"46"},{"size":2023,"mtime":1613349428711,"results":"84","hashOfConfig":"46"},{"size":8229,"mtime":1613719954528,"results":"85","hashOfConfig":"46"},{"size":13229,"mtime":1613930619321,"results":"86","hashOfConfig":"46"},{"size":13134,"mtime":1613892655117,"results":"87","hashOfConfig":"46"},{"size":891,"mtime":1613571054813,"results":"88","hashOfConfig":"46"},{"size":1061,"mtime":1613622428932,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1wqobg6",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"92"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"A:\\Tugas Akhir\\marketplacef\\src\\index.js",[],["204","205"],"A:\\Tugas Akhir\\marketplacef\\src\\App.js",["206"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Navbar from \"./Pages/Navbar\";\nimport Home from \"./Pages/Home\";\nimport Detail from \"./Pages/Detail\";\nimport Quickview from \"./Pages/Components/Quickview\";\nimport { OfflineAlert } from \"./utils\";\nimport { store } from \"./redux\";\nimport { Provider } from \"react-redux\";\nimport Cart from \"./Pages/Buyer/Cart\";\nimport UploadImage from \"./experiment/uploadImage\";\nimport Credential from \"./Pages/Credentials\";\nimport { PushNotification } from \"./experiment/pushnotification\";\nimport ListProduct from \"./Pages/ListProduct\";\nimport Register from \"./Pages/Store/Register\";\nimport Seller from \"./Pages/Store\";\nimport AuthGuarder from \"./Pages/Guarder/AuthGuarder\";\nimport NotFound from \"./Pages/Components/Notfound\";\nimport Checkout from \"./Pages/Buyer/Checkout\";\nimport User from \"./Pages/User\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/products\">\n            <ListProduct />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <Detail />\n          </Route>\n          <AuthGuarder path=\"/user\">\n            <User />\n          </AuthGuarder>\n          <AuthGuarder path=\"/cart\" exact>\n            <Cart />\n          </AuthGuarder>\n          <AuthGuarder path=\"/order-checkout\" exact>\n            <Checkout />\n          </AuthGuarder>\n          <AuthGuarder path=\"/open-shop\">\n            <Register />\n          </AuthGuarder>\n          <AuthGuarder path=\"/seller\">\n            <Seller />\n          </AuthGuarder>\n          <Route path=\"/experiment-image-upload\">\n            <UploadImage />\n          </Route>\n          <AuthGuarder path=\"/cart/checkout\">\n            <Checkout />\n          </AuthGuarder>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n      {/* <PushNotification /> */}\n      <Credential />\n      <Quickview />\n      <OfflineAlert />\n    </Provider>\n  );\n}\n\nexport default App;\n","A:\\Tugas Akhir\\marketplacef\\src\\reportWebVitals.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Navbar.jsx",["207","208","209","210","211","212","213","214","215"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { Link, NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport Avatar from \"../assets/images/about.jpg\";\r\nimport Logo from \"../assets/images/Logo.svg\";\r\nimport SignoutIco from \"../assets/images/icons/signout.jpg\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { config } from \"../config\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nconst cookies = new Cookies();\r\n\r\nconst Navbar = () => {\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const RegisterShop = useSelector(state => state.RegisterShop);\r\n  const RenderReducer = useSelector(state => state.RenderReducer);\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [render, setRender] = useState(0);\r\n  const [clicked, setClicked] = useState(false);\r\n  const [search, setSearch] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [display, setDisplay] = useState(false);\r\n  const [menu, setMenu] = useState(false);\r\n  const [store, setStore] = useState();\r\n  const [options, setOptions] = useState([]);\r\n  const login = cookies.get(\"login\");\r\n  const searchRef = useRef(null);\r\n  let node = useRef();\r\n  let history = useHistory();\r\n  \r\n  const loginPopup = (truep) => {\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: truep });\r\n  };\r\n\r\n  const checkUserStore = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/check-store`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    \r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setStore(response.data.message);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleCart = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const auth = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    console.log('masuk sini');\r\n    try {\r\n      const response = await Axios.get(url, {headers: auth, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotal(response.data.data.products.length);\r\n        console.log('response cart navbar', response);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if (Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const logout = async () => {\r\n    const url = `${config.api_host}/api/logout`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    try {\r\n      const response = await Axios.get(url, {headers: header});\r\n      console.log('response logout', response)\r\n      cookies.remove('user');\r\n      cookies.remove('user_token');\r\n      cookies.remove('login');\r\n      dispatch({type: \"SET_RENDER\"})\r\n      history.push('/');\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      Swal.fire({icon: 'error', title: 'Oops...', text: e.message});\r\n    }\r\n  }\r\n\r\n  const keyDown = e => {\r\n    e.preventDefault();\r\n    const url = `${config.api_host}/api/search/products`;\r\n    let name = document.getElementById('search-product').value;\r\n    let payload = {name};\r\n\r\n    console.log('payload', payload);\r\n    Axios.post(url, payload)\r\n    .then(response => {\r\n      setOptions(response.data.products);\r\n    }).catch(e => {\r\n      console.error('Failure: ', e);\r\n    })\r\n  }\r\n\r\n  // const search = e => {\r\n  //   e.preventDefault();\r\n\r\n  //   const url = `${config.api_host}/api/search/products`;\r\n    \r\n  // }\r\n\r\n  const handleMenu = event => {\r\n    if (cookies.get('login') === true) {\r\n      if (node.current.contains(event.target)) {\r\n        return;\r\n      } \r\n      setMenu(false);\r\n    }\r\n    return;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    const {current: wrap} = searchRef;\r\n\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  }\r\n\r\n  const setProduct = product => {\r\n    setSearch(product);\r\n    history.push({\r\n      pathname: `/detail/${product}`,\r\n    })\r\n    setDisplay(false);\r\n  }\r\n\r\n  const handleDisplay = () => {\r\n    let name = document.getElementById('search-product').value;\r\n    if (name.length > 0) {\r\n      setDisplay(true);\r\n      return;\r\n    }\r\n    setDisplay(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    if (cookies.get('user_token') !== null) {\r\n      checkUserStore(source.token, unmounted);\r\n    }\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [RegisterShop.registered]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    handleCart(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [CartReducer.render]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    if (login) {\r\n      document.addEventListener('mousedown', handleMenu);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n      document.removeEventListener('mousedown', handleMenu);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log(\"cookies.get('login')\", cookies.get('login'))}\r\n      <nav>\r\n        <div className=\"container\">\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"logo-wrapper\">\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }} className=\"logo\">\r\n                <img src={Logo} alt=\"logo\" />\r\n              </Link>\r\n              <Link to=\"/products\" className=\"products-nav\">Products</Link>\r\n            </div>\r\n\r\n            <div className={login === undefined ? \"guest-wrapper\" : \"addon-wrapper\"}>\r\n              <div className={input ? \"search-input-wrapper active\" : \"search-input-wrapper\"}>\r\n                <div className=\"search-input\">\r\n                  <form onSubmit={search} className={input ? \"active\" : \"\"}>\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={e => {keyDown(e);handleDisplay();}} className={input ? \"active\" : \"\"} id=\"search-product\" />\r\n                  </form>\r\n                  <button className=\"search-btn\" onClick={(e) => setInput(!input)}>\r\n                    {input ? <i class=\"bi bi-x s-logo\"></i> : <i className=\"bi bi-search s-logo\"></i>}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {login === undefined ? (\r\n                <button className=\"nav-login-btn\" onClick={() => {setClicked(true);loginPopup(true);}} > Login </button>\r\n              ) : (\r\n                <Fragment>\r\n                  <NavLink className=\"cart\" to=\"/cart\">\r\n                    {total > 0 ? (\r\n                      <div className=\"badge-cart\"><span>{total}</span></div>\r\n                    ) : null}\r\n                    <i className=\"bi bi-cart2\"></i>\r\n                  </NavLink>\r\n                  <div className=\"wishlist\">\r\n                    <i className=\"bi bi-heart-fill\"></i>\r\n                  </div>\r\n                  <button className=\"account\">\r\n                    <div ref={node} className={menu ? \"menu\" : \"menu hide\"}>\r\n                      <div className=\"user-banner\">\r\n                        <div className=\"user-img-round\"><img src={`${config.api_host}/api/image/${cookies.get('user').image.id}`} alt=\"user\"/></div>\r\n                        <div className=\"user-greeting\">\r\n                          <span className=\"greeting\">{cookies.get('user').username}</span>\r\n                          <span className=\"email-user\">{cookies.get('user').email}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"menu-action\">\r\n                        <div className=\"user-store\">\r\n                          {store ? <button><Link to=\"/seller/dashboard\">Seller Dashboard</Link></button> : <button><Link to=\"/open-shop\">Open Shop</Link></button>}\r\n                        </div>\r\n                        <div className=\"more\">\r\n                          <Link to=\"history\">Purchase History</Link>\r\n                          <Link to=\"wishlist\">Wishlist</Link>\r\n                          <Link to=\"/user/settings\">Settings</Link>\r\n                          <div className=\"signout\" onClick={logout}>Sign out <img src={SignoutIco} alt=\"ico\"/></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"account-img\" onClick={() => setMenu(!menu)} >\r\n                      <img src={`${config.api_host}/api/image/${cookies.get('user').image.id}`} alt=\"profile\" />\r\n                    </div>\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {display && (\r\n          <div ref={searchRef} className=\"auto-container\">\r\n            {options.slice(0, 5).map((v, i) =>{\r\n              return (\r\n                <div onClick={() => setProduct(v.id)} className=\"auto-option\" key={i} tabIndex=\"0\">\r\n                  <div className=\"icon-option\">\r\n                    <img src={`${config.api_host}/api/image/${v.images[0].id}`} alt=\"img-ico\"/>\r\n                  </div>\r\n                  <div className=\"name-option\">\r\n                    <span>{v.name}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\index.jsx",["216","217"],"import React, { Fragment } from 'react';\r\nimport Header from './Header';\r\nimport ProductHome from './ProductHome';\r\nimport Quickview from '../Components/Quickview';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"overlay-popup\">\r\n      <Header />\r\n      <ProductHome />\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Header.jsx",["218","219"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport { config } from '../../config';\r\nimport Axios from 'axios';\r\nimport ImageLoad from '../Components/ImageLoad';\r\nimport Placeholder from '../../assets/images/placeholder.jpg';\r\n\r\nconst Header = () => {\r\n  const [bigBanner, setBigBanner] = useState([]);\r\n  const [smallBanner, setSmallBanner] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [id, setId] = useState(0);\r\n\r\n  const getCategories = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/category`;\r\n\r\n    try {\r\n      const response = await Axios.get(url);\r\n      if (!unmounted) {\r\n        setCategories(response.data.categories);\r\n      }\r\n    } catch (error) {\r\n      if (!unmounted) {\r\n        console.error(error.message);\r\n        if (Axios.isCancel(error)) {\r\n          console.log(`request cancelled: ${error.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + error.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBigBanner();\r\n    getSmallBanner();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  function getBigBanner() {\r\n    const url = `${config.api_host}/api/banners/big`;\r\n    console.log(url);\r\n    Axios.get(url)\r\n    .then(res => {\r\n      setBigBanner(res.data.banners);\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n  }\r\n  \r\n  async function getSmallBanner() {\r\n    try {\r\n      const url = `${config.api_host}/api/banners/small`;\r\n      const res = await Axios.get(url);\r\n      setSmallBanner(res.data.banners);\r\n    } catch(e) {\r\n      console.error(\"Failure \", e);\r\n    }\r\n  }\r\n\r\n  // var settings = {\r\n  //   customPaging: function(i) {\r\n  //     return (\r\n  //       <a>\r\n  //         <div className=\"strip-slick-dots\"></div>\r\n  //       </a>\r\n  //     );\r\n  //   },\r\n  //   className: \"center\",\r\n  //   centerMode: true,\r\n  //   centerPadding: \"60px\",\r\n  //   dots: true,\r\n  //   dotsClass: \"slick-dots banner-dots slick-thumb\",\r\n  //   infinite: true,\r\n  //   slidesToShow: 1,\r\n  //   slidesToScroll: 1,\r\n  //   autoplay: true,\r\n  //   speed: 500,\r\n  //   autoplaySpeed: 5000,\r\n  //   nextArrow: <CustomArrow prev={false} />,\r\n  //   prevArrow: <CustomArrow prev={true}/>,\r\n  // };\r\n\r\n  const settings = {\r\n    className: \"center\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    centerPadding: \"220px\",\r\n    slidesToShow: 1,\r\n    speed: 800,\r\n    autoplay: true,\r\n    autoplaySpeed: 4000,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n  };\r\n\r\n  var settings2 = {\r\n    dots: false,\r\n    slidesToShow: 11,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n      {console.log(\"CATEGORIES\", categories)}\r\n      <section className=\"home-header\">\r\n        <div className=\"container\">\r\n          <div className=\"content-header\">\r\n            {/* <div className=\"rest-content-item\">\r\n              {smallBanner.map((image, i) =>\r\n                <div className=\"small-banner-wrapper\" key={i} style={{ backgroundImage: `url(${config.api_host}/api/image/${image.image.id})` }}></div>\r\n                )}\r\n              </div> */}\r\n            <Slider {...settings} className=\"content3-item\">\r\n              {bigBanner.map((image, i) =>\r\n                <div key={i} className=\"big-banner-wrapper\">\r\n                  <div className=\"big-banner\">\r\n                    <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${image.image.id}`} alt=\"banner\"/>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Slider>\r\n          </div>\r\n          <div className=\"category-grid-ico\">\r\n\r\n            <Slider {...settings2} className=\"categories-slider\">\r\n\r\n              {\r\n                categories.map((category, i) =>\r\n                  <div className=\"cat-ico-wrapper\" key={i}>\r\n                    <div className=\"cat-ico\">\r\n                      <img src={`${config.api_host}/api/image/${category.image.id}`} alt=\"ico\"/>\r\n                    </div>\r\n                    <span style={{ color: '#8296ab' }}>{category.name}</span>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            </Slider>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Header;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Banner.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\Product.jsx",["220","221"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Card } from '../Components/Card';\r\nimport Axios from 'axios';\r\nimport { config } from '../../config';\r\n\r\nconst Product = () => {\r\n\r\n  const [product, setProduct] = useState([]);\r\n  //eslint-disable-next-line\r\n  const [loading, setLoading] = useState(false);\r\n  const [rekomendasi, setRekomendasi] = useState(true);\r\n  const [gratisongkir, setGratisongkir] = useState(false);\r\n  const [id, setId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [id]);\r\n\r\n  function getData() {\r\n    const url = `${config.api_host}/api/products`;\r\n    Axios.get(url)\r\n    .then(res => {\r\n      setProduct(res.data.products);\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n  }\r\n  \r\n\r\n  // ^ Sementara\r\n  // function loopCard(baris) {\r\n  //   var oneRow = [];\r\n  //   for(var i = 0; i < baris; i++) {\r\n  //     if(i%2 === 0) {\r\n  //       oneRow.push(<Fragment><Card image={Fashion}/><Card image={Phone}/><Card image={Bed}/><Card image={Lego}/><Card image={Headset}/><Card image={Sepatu}/></Fragment>);\r\n  //     } else {\r\n  //       oneRow.push(<Fragment><Card image={Bed}/><Card image={Sepatu}/><Card image={Phone}/><Card image={Fashion}/><Card image={Lego}/><Card image={Headset}/></Fragment>);\r\n  //     }\r\n  //   }\r\n  //   return oneRow;\r\n  // }\r\n  // End\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container spacing-section\">\r\n        <div className=\"product-wrapper\">\r\n          <div className=\"tab-bar\">\r\n            <ul>\r\n              <li onClick={e => {setRekomendasi(true); setGratisongkir(false);}} className={rekomendasi ? \"active-bar\" : \"\"}>{rekomendasi ? <div className=\"line-bar\"></div> : null}Rekomendasi</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"card-wrapper\">\r\n            {product.map((product, i) => \r\n              <Card key={i} image={product.images[0].id} name={product.name} rating={product.rate} sold={product.sold} productId={product.id} price={product.price} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Product;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Card.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\config.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\utils\\index.js",["222"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport const currencyFormatter = (duit) => {\r\n  let int = parseInt(duit);\r\n  if(int !== undefined) {\r\n    return int.toLocaleString('id-ID', {\r\n      style: 'currency',\r\n      currency: 'IDR'\r\n    }).slice(0, -3);\r\n  } else {\r\n    console.error('Parameter duit gak ada valuenya. duit : ', int);\r\n  }\r\n}\r\n\r\nexport const soldFormatter = (terjual) => {\r\n  if(terjual !== undefined) {\r\n    if(terjual !== null) {\r\n      return `${terjual} Terjual`\r\n    } else {\r\n      return '';\r\n    }\r\n  } else {\r\n    console.error('Parameter Terjual gak ada valuenya. Terjual : ', terjual);\r\n  }\r\n}\r\n\r\nexport const inStockFormatter = (jumlah) => {\r\n  if( jumlah !== undefined ) {\r\n    if( jumlah !== 0 ) {\r\n      return (\r\n        <Fragment>\r\n          <span className=\"in-stock\"><i class=\"bi bi-check2-circle\"></i> <span>In stock</span></span>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <span className=\"out-of-stock\"><i class=\"bi bi-check2\"></i> <span>Out of stock</span></span>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const ratingTextFormatter = (rating) => {\r\n  if( rating !== undefined ) {\r\n    const rate = parseInt(rating);\r\n    if(rate % 1 === 0) {\r\n      console.log('rating', typeof rate);\r\n      return rate.toFixed(1);\r\n    } else {\r\n      return rating;\r\n    }\r\n  }\r\n}\r\n\r\nexport const ratingFormatter = (rating) => {\r\n  if(rating !== undefined ) {\r\n    const starsComponent = [];\r\n    const modulus = rating % 1;\r\n    const ratingCountFloored = Math.floor(rating);\r\n  \r\n    for(let i=0;i<ratingCountFloored;i++) {\r\n      starsComponent.push(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" key={i} width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill yellow\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n        </svg>\r\n      );\r\n    }\r\n    if(modulus > 0.5) {\r\n      starsComponent.push(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-half yellow\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M5.354 5.119L7.538.792A.516.516 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0 1 16 6.32a.55.55 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.519.519 0 0 1-.146.05c-.341.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.171-.403.59.59 0 0 1 .084-.302.513.513 0 0 1 .37-.245l4.898-.696zM8 12.027c.08 0 .16.018.232.056l3.686 1.894-.694-3.957a.564.564 0 0 1 .163-.505l2.906-2.77-4.052-.576a.525.525 0 0 1-.393-.288L8.002 2.223 8 2.226v9.8z\"/>\r\n        </svg>\r\n      );\r\n    }\r\n    if(starsComponent.length < 5) {\r\n      for(let a=starsComponent;starsComponent.length < 5;a++) {\r\n        starsComponent.push(\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star yellow\" key={a} viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n          </svg>\r\n        );\r\n      }\r\n    }\r\n    console.log('starsComponent', starsComponent)\r\n    return (\r\n      starsComponent\r\n    );\r\n  } else {\r\n    console.error(\"Parameter Terjual gak ada valuenya. Terjual : \", rating);\r\n  }\r\n}\r\n\r\nexport const OfflineAlert = () => {\r\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\r\n  const updateNetwork = () => {\r\n    setNetwork(window.navigator.onLine);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener(\"offline\", updateNetwork);\r\n    window.addEventListener(\"online\", updateNetwork);\r\n    return () => {\r\n        window.removeEventListener(\"offline\", updateNetwork);\r\n        window.removeEventListener(\"online\", updateNetwork);\r\n    };\r\n  });\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    const alert = document.getElementsByClassName(\"network-alert\")[0];\r\n    alert.classList.remove(\"show-alert\");\r\n    alert.classList.add(\"hide-alert\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={isOnline ? \"hide-alert network-alert\" : \"show-alert network-alert\"}>\r\n        <i className=\"bi bi-wifi-off wifi-mati\"></i>\r\n        <span>You are currently offline.</span>\r\n        <span onClick={handleRefresh} style={{color: \"rgb(65 142 235)\", cursor: \"pointer\"}}>Refresh</span>\r\n        <i onClick={hideAlert} className=\"bi bi-x cancel-offline\"></i>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const getCity = async (id) => {\r\n  if (id !== undefined) { \r\n    var name = 'hello';\r\n    \r\n    let city_id = id.toString();\r\n    const url = `http://localhost:2901/proxy/starter/city`;\r\n    const qs = {id: city_id};\r\n    const header = {\r\n      key: \"11fa41eaf62c64584a90b03a759c5296\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    try {\r\n      const response = await Axios.get(url, {params: qs, headers: header })\r\n      console.log('response city name', response);\r\n      name = 'helowwq'\r\n      // return `${response.data.rajaongkir.results.city_name}`\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return name;\r\n  } else {\r\n    console.error('Parameter id gak ada valuenya: ', id);\r\n  }\r\n}","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\SliderCustomized.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\FeaturedProduct.jsx",["223"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { config } from '../../config';\r\nimport { Card2 } from '../Components/Card';\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport TallBanner from '../../assets/images/tallBanner.jfif';\r\nimport TallBanner2 from '../../assets/images/tallBanner2.jfif';\r\nimport TallBanner3 from '../../assets/images/tallBanner3.jfif';\r\n\r\nfunction FeaturedProduct() {\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [ud, setUd] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    GetProducts();\r\n  }, [ud]);\r\n  \r\n  const GetProducts = async () => {\r\n    try {\r\n      const url = `${config.api_host}/api/products`;\r\n      const respons = await Axios.get(url);\r\n      setProducts(respons.data.products);\r\n    } catch(e) {\r\n      console.error('Fail ', e);\r\n    }\r\n  }\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    rows: 2,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>\r\n  };\r\n  \r\n  var settings2 = {\r\n    arrows: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('products featured', products)}\r\n      <div className=\"container spacing-section\">\r\n      {/* featured-wrapper */}\r\n        <div className=\"featured-wrapper\">\r\n          \r\n          <Slider {...settings2} className=\"tall-banner\">\r\n            <img src={TallBanner} alt=\"banner\"/>\r\n            <img src={TallBanner2} alt=\"banner\"/>\r\n            <img src={TallBanner3} alt=\"banner\"/>\r\n          </Slider>\r\n          <Slider {...settings} className=\"rows-slider\">\r\n              \r\n              {products.map((product, i) => \r\n                <Card2 key={i} name={product.name} image={product.images[0].id} harga={product.price} />\r\n              )}\r\n\r\n            </Slider>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default FeaturedProduct;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Quickview.jsx",["224","225","226","227"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport { config } from '../../config';\r\nimport { currencyFormatter, ratingFormatter, soldFormatter } from '../../utils';\r\nimport { CustomArrow } from './SliderCustomized';\r\n\r\nconst Quickview = () => {\r\n  //^ Redux \r\n  const QReducer = useSelector(state => state.QReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  //^ Local State\r\n  const [product, setProduct] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  //^ Ref node\r\n  const node = useRef();\r\n\r\n  useEffect(() => {\r\n    const source = Axios.CancelToken.source();\r\n    getProduct(source.token);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    }\r\n  }, [QReducer.id]);\r\n\r\n  async function getProduct(source) {\r\n    const url = `${config.api_host}/api/product/${QReducer.id}`;\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: source});\r\n      setProduct(response.data.product);\r\n      setImages(response.data.product.image);\r\n      const cat = response.data.product.categories.map(item => {\r\n        let container = [];\r\n        container = item.name;\r\n        return container;\r\n      })\r\n\r\n      setCategories(cat);\r\n    } catch(e) {\r\n      console.error(\"Failure \", e);\r\n    }\r\n  }\r\n  \r\n\r\n  var settings = {\r\n    customPaging: function(i) {\r\n      if(i !== null) {\r\n        for(var a = -1; a < i; a++) {\r\n          var imageCount = images[0].id + a;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <a>\r\n          <img className=\"image-dots\" src={`${config.api_host}/api/image/${imageCount + 1}`}></img>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots quickview-dots slick-thumb\",\r\n    arrows: true,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>,\r\n    infinite: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    if(node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n    \r\n    dispatch({type: 'SET_POPUP', open: false});\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if(QReducer.open === true) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        document.getElementsByClassName(\"overlay-popup\")[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if(overlay_popup.length && QReducer.open === false) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        document.getElementsByClassName(\"overlay-popup\")[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, [QReducer.open]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={node} className=\"quickview-node\">\r\n        {QReducer.open && (\r\n          <div className=\"quickview-modal\">\r\n            <div className=\"quickview-slider\">\r\n              <Slider {...settings}>\r\n\r\n                {images.map((image, i) =>\r\n                  <div key={i} className=\"quickview-image\">\r\n                    <div style={{backgroundImage: `url(${config.api_host}/api/image/${image.id})`, backgroundPosition: \"center\"}}></div>\r\n                  </div>\r\n                )}\r\n\r\n              </Slider>\r\n            </div>\r\n            <div className=\"quickview-inline\">\r\n              <div className=\"quickview-info\">\r\n                <div className=\"quickview-name\"><span>{product.name}</span></div>\r\n                <div className=\"quickview-scale\">\r\n                  <div className=\"quickview-rating\">{ratingFormatter(product.rate)}</div>\r\n                  <div className=\"quickview-sold\">{soldFormatter(product.sold)}</div>\r\n                </div>\r\n                <div className=\"quickview-price-title\">Our Price</div>\r\n                <div className=\"quickview-price\">{currencyFormatter(product.price)}</div>\r\n                <div className=\"quickview-description\"><p>{product.description}</p></div>\r\n\r\n                <div className=\"quickview-action\">\r\n                  <div className=\"q-action-title\">available :</div>\r\n                  <div className=\"q-action\">\r\n                    <input type=\"number\" name=\"quantity\" id=\"quantity\" disabled value={product.stock}/>\r\n                    <button className=\"q-cart\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bag-check\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M10.854 8.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n                        <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z\"/>\r\n                      </svg>\r\n                      Add To Cart\r\n                    </button>\r\n                    <div className=\"q-wishlist\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"quickview-category\">\r\n                  <span className=\"quickview-category-title\">Categories: &nbsp;</span>\r\n                  {categories.join(', ')}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Quickview;","A:\\Tugas Akhir\\marketplacef\\src\\redux\\index.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\redux\\store.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\redux\\reducer.js",["228"],"import { combineReducers } from \"redux\";\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nconst initialQ = {\r\n  open: false,\r\n  id: 0,\r\n};\r\n\r\nconst QReducer = (state = initialQ, action) => {\r\n  switch (action.type) {\r\n    case \"SET_QUICKVIEW\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n        id: action.id,\r\n      };\r\n\r\n    case \"SET_POPUP\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialCredentialPopup = {\r\n  open: false,\r\n  popup: \"login\",\r\n};\r\n\r\nconst CredentialPopup = (state = initialCredentialPopup, action) => {\r\n  switch (action.type) {\r\n    case \"CREDENTIAL_POPUP\":\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      };\r\n    case \"POPUP_TYPE\":\r\n      return {\r\n        ...state,\r\n        popup: action.popup,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialRegisterShop = {\r\n  registered: false,\r\n};\r\n\r\nconst RegisterShop = (state = initialRegisterShop, action) => {\r\n  switch (action.type) {\r\n    case \"REGISTER_SHOP\":\r\n      return {\r\n        ...state,\r\n        registered: action.registered,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialCart = {\r\n  render: 0,\r\n  product_id: [],\r\n}\r\n\r\nconst CartReducer = (state = initialCart, action) => {\r\n  switch (action.type) {\r\n    case \"CART_COUNT\":\r\n      return {\r\n        ...state,\r\n        render: action.render,\r\n        product_id: [...state.product_id, action.product_id]\r\n      };\r\n    case \"CART_RENDER\":\r\n      return {\r\n        ...state,\r\n        render: state.render + 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialCheckout = {\r\n  products: []\r\n}\r\n\r\nconst CheckoutReducer = (state = initialCheckout, action) => {\r\n  switch (action.type) {\r\n    case \"CHECKOUT\":\r\n      return {\r\n        ...state,\r\n        products: action.products\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialRender = {\r\n  render: 0\r\n}\r\n\r\nconst RenderReducer = (state = initialRender, action) => {\r\n  switch (action.type) {\r\n    case \"SET_RENDER\":\r\n      return {\r\n        ...state,\r\n        render: state.render + 1\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  QReducer,\r\n  CredentialPopup,\r\n  RegisterShop,\r\n  CartReducer,\r\n  CheckoutReducer,\r\n  RenderReducer\r\n});\r\n\r\nexport default reducer;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Detail\\index.jsx",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import { currencyFormatter, inStockFormatter, ratingFormatter, ratingTextFormatter, soldFormatter, } from \"../../utils\";\r\nimport StarRound from \"../../assets/images/clip-art/star-round-icon.svg\";\r\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { CustomArrow } from \"../Components/SliderCustomized\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport Truck from \"../../assets/images/icons/truck.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ReviewCard } from \"../Components/Card\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { config } from \"../../config\";\r\nimport Select from \"react-select\";\r\nimport Slider from \"react-slick\";\r\nimport PulseLoader from 'react-spinners/PulseLoader'\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst Detail = (props) => {\r\n  let { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const [product, setProduct] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [reveal, setReveal] = useState(false);\r\n  const [groupedOptions, setGroupedOptions] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [destination, setDestination] = useState({\r\n    value: \"152\",\r\n    label: \"Jakarta Pusat\",\r\n    province: \"DKI Jakarta\",\r\n  });\r\n  const [isDisplay, setIsDisplay] = useState(false);\r\n  const [berat, setBerat] = useState(1000);\r\n  const [origin, setOrigin] = useState({ name: \"Jakarta Barat\", value: \"151\" });\r\n  const [courier, setCourier] = useState(\"jne\");\r\n  const [ongkir, setOngkir] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const cart = cookies.get(\"cart\");\r\n  const arr = [product];\r\n\r\n  const prevDestination = usePrevious(destination);\r\n  const node = useRef();\r\n\r\n  const getProduct = async (token) => {\r\n    if (id !== 0) {\r\n      try {\r\n        const response = await Axios.get(\r\n          `${config.api_host}/api/product/${id}`,\r\n          { cancelToken: token }\r\n        );\r\n        console.log(\"response\", response);\r\n        setReviews(response.data.product.reviews);\r\n        setStore(response.data.product.store);\r\n        setProduct(response.data.product);\r\n        setImages(response.data.product.image);\r\n      } catch (e) {\r\n        if (Axios.isCancel(e)) {\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCity = async (token) => {\r\n    // own Proxy Server\r\n    const proxUrl = \"http://localhost:2901/proxy/starter/city\";\r\n    // const url = 'https://cors-anywhere.herokuapp.com/https://api.rajaongkir.com/starter/city';\r\n    try {\r\n      let response = await Axios.get(proxUrl, {\r\n        headers: { key: \"11fa41eaf62c64584a90b03a759c5296\" },\r\n        cancelToken: token,\r\n      });\r\n\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 3000));\r\n\r\n      var contain = response.data.rajaongkir.results.map((result) => ({\r\n        value: result.city_id,\r\n        label: result.city_name,\r\n        province: result.province,\r\n      }));\r\n\r\n      var provinsi = response.data.rajaongkir.results.map((result) => ({\r\n        label: result.province,\r\n      }));\r\n\r\n      removeDuplicate(provinsi, contain);\r\n    } catch (e) {\r\n      if (Axios.isCancel(e)) {\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (prevDestination !== destination) {\r\n      estOngkir();\r\n    }\r\n  }, [destination]);\r\n\r\n  const estOngkir = async () => {\r\n    if (destination) {\r\n      const url = \"http://localhost:2901/proxy/starter/cost\";\r\n      const headers = {\r\n        key: \"11fa41eaf62c64584a90b03a759c5296\",\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const body = {\r\n        origin: origin.value,\r\n        destination: destination.value,\r\n        weight: berat,\r\n        courier: courier,\r\n      };\r\n      console.log(\"body\", body);\r\n      try {\r\n        let response = await Axios.post(url, body, { headers: headers });\r\n        console.log(\"ONGKIR \", response);\r\n        setOngkir(response.data.rajaongkir.results[0].costs[0].cost[0].value);\r\n      } catch (e) {\r\n        console.error(\"Failure: \" + e);\r\n      }\r\n    }\r\n  };\r\n\r\n  function removeDuplicate(p, c) {\r\n    let uniqueProvince = Array.from(new Set(p.map((a) => a.label)));\r\n    var i = 0;\r\n    var groupedOptions = [];\r\n    for (i = 0; i < uniqueProvince.length; i++) {\r\n      const filteredCity = c.filter(\r\n        (city) => city.province == uniqueProvince[i]\r\n      );\r\n      groupedOptions[i] = {\r\n        label: uniqueProvince[i],\r\n        options: [...filteredCity, filteredCity],\r\n      };\r\n      groupedOptions[i][\"options\"].pop();\r\n    }\r\n    console.log(\"groupedOptions\", groupedOptions);\r\n    setGroupedOptions(groupedOptions);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const handleSelect = (destination) => {\r\n    setDestination(destination);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    setIsDisplay(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setIsDisplay(!isDisplay);\r\n  };\r\n\r\n  const existCheck = () => {\r\n    if (cart !== undefined) {\r\n      const checker = cart.map((crt) => {\r\n        console.log(\"crt\", crt.name);\r\n        if (crt.name === product.name) {\r\n          return false;\r\n        }\r\n      });\r\n      if (checker.includes(false)) {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const addToCart = () => {\r\n  //   const check = existCheck();\r\n  //   const toCookie = {};\r\n  //   toCookie[\"id\"] = product.id;\r\n  //   toCookie[\"name\"] = product.name;\r\n  //   toCookie[\"harga\"] = product.harga;\r\n  //   toCookie[\"sold\"] = product.sold;\r\n  //   toCookie[\"image\"] = product.image[0];\r\n  //   toCookie[\"amount\"] = 1;\r\n\r\n  //   console.log(\"toCookie\", toCookie);\r\n  //   if (check === false) {\r\n  //     return false;\r\n  //   }\r\n  //   if (cart !== undefined) {\r\n  //     cookies.set(\"cart\", [toCookie, ...cart]);\r\n  //     return;\r\n  //   } else {\r\n  //     cookies.set(\"cart\", [toCookie]);\r\n  //   }\r\n  // };\r\n\r\n  const handleCart = async (id) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const header = { 'Authorization': config.bearer_token }\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, { headers: header });\r\n      var list_cart = response.data.data.products;\r\n      addToCart(id, list_cart);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      if (error.response.status === 401) {\r\n        Swal.fire({icon: 'warning', title: 'Unauthorized', text: 'Please login first'});\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const addToCart = async (id, list) => {\r\n    let list_id = [];\r\n    list.map((product) => {\r\n      list_id.push(product.id)\r\n    });\r\n\r\n    let check_id = list_id.includes(id);\r\n    const url = `${config.api_host}/api/update-cart`;\r\n    const header = { 'Authorization': config.bearer_token }\r\n    const body = { product_id: [id] }\r\n    console.log('check_id', check_id);\r\n    if (check_id) {\r\n      setLoading(false)\r\n      alert('You\\'ve added this product last time');\r\n      return false;\r\n    } else {\r\n      try {\r\n        const response_add = await Axios.post(url, body, { headers: header });\r\n        dispatch({type: 'CART_RENDER'})\r\n        console.log('response_add', response_add);\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const source = Axios.CancelToken.source();\r\n    getProduct(source.token);\r\n    getCity(source.token);\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, []);\r\n\r\n  var settings = {\r\n    customPaging: function (i) {\r\n      if (i !== null) {\r\n        for (var a = -1; a < i; a++) {\r\n          var imageCount = images[0].id + a;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <a>\r\n          <img\r\n            className=\"image-dots\"\r\n            src={`${config.api_host}/api/image/${imageCount + 1}`}\r\n          ></img>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots quickview-dots slick-thumb\",\r\n    arrows: true,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true} />,\r\n    infinite: false,\r\n    speed: 500,\r\n    // autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  const groupBadgeStyles = {\r\n    backgroundColor: \"#EBECF0\",\r\n    borderRadius: \"2em\",\r\n    color: \"#172B4D\",\r\n    display: \"inline-block\",\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    lineHeight: \"1\",\r\n    minWidth: 1,\r\n    padding: \"0.16666666666667em 0.5em\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  const formatGroupLabel = (data) => (\r\n    <div style={groupStyles}>\r\n      <span>{data.label}</span>\r\n      <span style={groupBadgeStyles}>{data.options.length}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"overlay-popup\">\r\n        <section className=\"detail-sect\">\r\n          <div className=\"detail-cont\">\r\n            <div className=\"box\" style={{ height: \"505px\" }}>\r\n              <div className=\"detail-back\" onClick={handleBack}>\r\n                <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n              </div>\r\n              <div className=\"detail-slider\">\r\n                <Slider {...settings}>\r\n                  {images.map((image, i) => (\r\n                    <div className=\"detail-image\" key={i}>\r\n                      <div\r\n                        style={{\r\n                          backgroundImage: `url(${config.api_host}/api/image/${image.id})`,\r\n                          backgroundPosition: \"center\",\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  ))}\r\n                </Slider>\r\n              </div>\r\n              <div className=\"detail-inline\">\r\n                <div className=\"detail-info\">\r\n                  <span className=\"detail-name\">{product.name}</span>\r\n                  <div className=\"detail-status\">\r\n                    <div className=\"detail-rating\">\r\n                      {ratingTextFormatter(product.rating)}{\" \"}\r\n                      {ratingFormatter(product.rate)}\r\n                    </div>\r\n                    <div className=\"detail-sold\">\r\n                      {soldFormatter(product.sold)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-stock\">\r\n                    {inStockFormatter(product.jumlah)}\r\n                  </div>\r\n                  <div className=\"detail-description-wrapper\">\r\n                    <div\r\n                      className={\r\n                        reveal\r\n                          ? \"detail-description reveal\"\r\n                          : \"detail-description compact\"\r\n                      }\r\n                    >\r\n                      <p>{product.description}</p>\r\n                    </div>\r\n                    <button\r\n                      className=\"reveal-description-btn\"\r\n                      onClick={() => setReveal(!reveal)}\r\n                    >\r\n                      {reveal ? (\r\n                        <i className=\"fas fa-chevron-up\"></i>\r\n                      ) : (\r\n                          <i className=\"fas fa-chevron-down\"></i>\r\n                        )}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"detail-harga\">\r\n                    <span>{currencyFormatter(product.harga)}</span>\r\n                  </div>\r\n                  <div className=\"detail-action\">\r\n                    <button\r\n                      className=\"detail-addtocart\"\r\n                      onClick={() => handleCart(product.id)}\r\n                      disabled={loading}\r\n                      style={{ cursor: loading ? 'not-allowed' : 'pointer' }}\r\n                    >\r\n                      {loading ?\r\n                        <PulseLoader size=\"8\" color=\"#fff\" /> :\r\n                        <Fragment>\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19\" height=\"19\" fill=\"currentColor\" className=\"bi bi-cart3\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n                          </svg>\r\n                          <span>ADD TO CART</span>\r\n                        </Fragment>\r\n                      }\r\n                    </button>\r\n                    <div className=\"detail-whislist\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"25\"\r\n                        height=\"25\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-heart\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\" style={{ height: \"20vh\", marginTop: \"2vh\" }}>\r\n              <div className=\"inner-box\">\r\n                <div className=\"box-toko\">\r\n                  <div className=\"img-toko\">\r\n                    <img\r\n                      src={`${config.api_host}/api/image/${store.image}`}\r\n                      alt=\"toko\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"action-toko\">\r\n                    <div className=\"name-toko\">\r\n                      <span>{store.name}</span>\r\n                    </div>\r\n                    <div className=\"go-toko\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        class=\"bi bi-shop-window\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h12V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zm2 .5a.5.5 0 0 1 .5.5V13h8V9.5a.5.5 0 0 1 1 0V13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.5a.5.5 0 0 1 .5-.5z\" />\r\n                      </svg>\r\n                      <span>Kunjungi Toko</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"box-pengiriman\">\r\n                  <div className=\"from-location\">\r\n                    <div className=\"from-title\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        class=\"bi bi-geo-alt-fill\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\" />\r\n                      </svg>\r\n                      <span>Barang dikirim dari</span>\r\n                    </div>\r\n                    <div className=\"from-point\">\r\n                      <b>Jakarta Barat</b>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"to-location\">\r\n                    <div className=\"to-title\">\r\n                      <img src={Truck} alt=\"ico\" />\r\n                      <span>Ongkir mulai dari</span>\r\n                    </div>\r\n                    <div className=\"to-point\">\r\n                      <p onClick={handleOpen}>\r\n                        <b>{currencyFormatter(ongkir)}</b> ke{\" \"}\r\n                        <b>{destination.label}</b>{\" \"}\r\n                        <i\r\n                          className=\"fas fa-chevron-down\"\r\n                          style={{\r\n                            transformOrigin: \"60% 40%\",\r\n                            transform: isDisplay ? \"rotate(180deg)\" : \"\",\r\n                            transition: \"all 0.3s ease\",\r\n                          }}\r\n                        ></i>\r\n                      </p>\r\n                      <div ref={node} className=\"destination-popup\">\r\n                        {isDisplay ? (\r\n                          <Select\r\n                            options={groupedOptions}\r\n                            formatGroupLabel={formatGroupLabel}\r\n                            value={destination}\r\n                            onChange={handleSelect}\r\n                            autoFocus={true}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\" style={{ marginTop: '2vh', padding: '20px' }}>\r\n              <div className=\"reviews-title\"><span>Reviews and rating</span></div>\r\n              <div className=\"reviews-stats\">\r\n                <div className=\"reviews-area\">\r\n                  {reviews.map((review) =>\r\n                    <ReviewCard comment={review.comment} rate={review.rate} username={review.user.name} avatar={review.user.image} created_at={review.created_at} />\r\n                  )}\r\n                </div>\r\n                <div className=\"overall-rating\">\r\n                  <span className=\"overall-rating-title\"><div className=\"star-round\"><img src={StarRound} alt=\"star-ico\" /></div> Overall Rating</span>\r\n                  <div className=\"inner-overall-rating\">\r\n                    <div className=\"overall-rating-text\">\r\n                      <span className=\"product-rating-text\">{ratingTextFormatter(product.rate)}</span>\r\n                      <span className=\"slash-rating\">/</span>\r\n                      <span className=\"full-rating\">5</span>\r\n                    </div>\r\n                    <div className=\"overall-star\">{ratingFormatter(product.rate)}</div>\r\n                    <div className=\"total-reviews\">{reviews.length} reviews</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default withRouter(Detail);\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Home\\ProductHome.jsx",["245","246","247","248","249","250","251","252"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Banner from './Banner';\r\nimport Product from './Product';\r\nimport Axios from 'axios';\r\nimport { config } from '../../config';\r\nimport { CustomArrow } from '../Components/SliderCustomized';\r\nimport { currencyFormatter, soldFormatter } from '../../utils';\r\nimport FeaturedProduct from './FeaturedProduct';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card4, SkeletonCard } from '../Components/Card';\r\nimport Swal from 'sweetalert2';\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nconst ProductHome = () => {\r\n  const dispatch = useDispatch();\r\n  const [wishlist, setWishlist] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [id, setId] = useState(0);\r\n  const [clicked, setClicked] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [productId, setPorductId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getData(source.token, unmounted);\r\n\r\n    return function() {\r\n      unmounted = true;\r\n      source.cancel(\"Canceling in cleanup\");\r\n    };\r\n  }, []);\r\n\r\n  function getData(token, unmount) {\r\n    const url = `${config.api_host}/api/products`;\r\n    setLoading(true)\r\n    Axios.get(url, {cancelToken: token})\r\n    .then(res => {\r\n      if(!unmount) {\r\n        setProduct(res.data.products);\r\n        setLoading(false);\r\n      }\r\n    })\r\n    .catch(e => {\r\n      if(!unmount) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n      setLoading(false)\r\n    });\r\n  }\r\n\r\n  const handleCart = async (id) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    setLoading2(true);\r\n    try {\r\n      const response = await Axios.get(url, { headers: header });\r\n      var list_cart = response.data.data.products;\r\n      addToCart(id, list_cart);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      if (error.response.status === 401) {\r\n        Swal.fire({icon: 'warning', title: 'Unauthorized', text: 'Please login first'});\r\n      }\r\n      setLoading2(false)\r\n    }\r\n  }\r\n\r\n  const addToCart = async (id, list) => {\r\n    let list_id = [];\r\n    list.map((product) => {\r\n      list_id.push(product.id)\r\n    });\r\n\r\n    let check_id = list_id.includes(id);\r\n    const url = `${config.api_host}/api/update-cart`;\r\n    const header = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    const body = { product_id: [id] }\r\n    console.log('check_id', check_id);\r\n    if (check_id) {\r\n      setLoading(false)\r\n      alert('You\\'ve added this product last time');\r\n      return false;\r\n    } else {\r\n      try {\r\n        const response_add = await Axios.post(url, body, { headers: header });\r\n        dispatch({type: 'CART_RENDER'})\r\n        console.log('response_add', response_add);\r\n        setLoading2(false)\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading2(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Quickview();\r\n  }, [productId]);\r\n\r\n  const Quickview = () => {\r\n    if(clicked) {\r\n      dispatch({type: 'SET_QUICKVIEW', open: true, id: productId});\r\n    }\r\n  }\r\n\r\n  var settings = {\r\n    customPaging: function(i) {\r\n      return (\r\n        <a>\r\n          <div className=\"circle-slick-dots\"></div>\r\n        </a>\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots bp-dots slick-thumb\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    nextArrow: <CustomArrow prev={false} />,\r\n    prevArrow: <CustomArrow prev={true}/>\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"sect-product\">\r\n        <div className=\"container\">\r\n          <div className=\"best-price-wrapper\">\r\n            <div className=\"title-box\">\r\n              <div>\r\n                <span className=\"bold-title\">BEST</span> <span className=\"second-title\">PRICE</span>\r\n              </div>\r\n            </div>\r\n            <Slider {...settings} className=\"card-bp-wrapper\">\r\n              \r\n              {loading ? \r\n                SkeletonCard(10)\r\n                :\r\n                product.map((product, i) =>\r\n                  <Card4 \r\n                    name={product.name}\r\n                    image={product.images[0].id}\r\n                    productId={product.id}\r\n                    price={product.price}\r\n                    sold={product.sold}\r\n                    key={i}\r\n                    onQuickview={() => {Quickview(product.id); setPorductId(product.id); setClicked(true)}}\r\n                    onWishlist={() => setWishlist(!wishlist)}\r\n                    onCart={() => handleCart(product.id)}\r\n                    wishlist={wishlist}\r\n                    loading={loading2}\r\n                  />\r\n                )\r\n              }\r\n\r\n\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        <Banner />\r\n        <FeaturedProduct />\r\n        <Product />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductHome;","A:\\Tugas Akhir\\marketplacef\\src\\config\\firebase\\index.js",[],"A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\index.jsx",["253","254","255","256","257","258","259","260"],"import Axios from \"axios\";\r\nimport React, { useState, useCallback } from \"react\";\r\nimport Dropzone from './Dropzone';\r\n\r\nconst UploadImage = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n\r\n  function handleChange(file) {\r\n    setImagedata(file[0]);\r\n  }\r\n\r\n  function addFormData(e) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n\r\n    fd.append(\"image\", imagedata);\r\n    console.log('imagedata', imagedata)\r\n    console.log('fd', fd);\r\n\r\n    Axios.post(\"http://127.0.0.1:8000/api/upload-image\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n    });\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addFormData}>\r\n        <label htmlFor=\"image\">Image Upload</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => handleChange(e.target.files)}\r\n          id=\"image\"\r\n        />\r\n        <button type=\"submit\" onClick={addFormData}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UploadImageIbb = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  function handleChange(file) {\r\n    setImagedata(file[0]);\r\n  }\r\n\r\n  function addFormData(e) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n\r\n    fd.set('key', 'bd01b524fc3073d96af785323b5f2ccc');\r\n    fd.append(\"image\", imagedata);\r\n    Axios.post(\"http://localhost:8010/proxy/1/upload\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n      setImageUrl(res.data.data.url);\r\n    }).catch(e => {console.error(e.message);})\r\n  }\r\n\r\n  function preview(files) {\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        let previewElement = document.getElementById(\"preview-upload\");\r\n        previewElement.setAttribute(\"src\", e.target.result);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  const style = {\r\n    backgroundColor: 'indigo',\r\n    color: 'white',\r\n    padding: '0.5rem',\r\n    fontFamily: 'sans-serif',\r\n    borderRadius: '0.3rem',\r\n    cursor: 'pointer',\r\n    marginTop: '1rem'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addFormData}>\r\n        <label htmlFor=\"image\" style={{ cursor: 'pointer' }}>\r\n          <div className=\"preview-upload-wrapper\">\r\n            <img id=\"preview-upload\" alt=\"select an image\"/>\r\n          </div>\r\n        </label>\r\n        <input type=\"file\" onChange={(e) => {handleChange(e.target.files); preview(e.target.files)}} id=\"image\" hidden />\r\n        <button type=\"submit\" onClick={addFormData}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {imageUrl !== \"\" &&\r\n        <img src={imageUrl} alt=\"img ibb\"/>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\n// ^ Drag n Drop\r\n\r\nconst UploadImageDnd = () => {\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const onDrop = useCallback(acceptedFile => {\r\n    preview(acceptedFile);\r\n    // handleChangew(acceptedFile);\r\n    var form = document.getElementById('dndform');\r\n    var event = new Event('submit');\r\n    form.dispatchEvent(event);\r\n    addFormData(event, acceptedFile);\r\n  }, []);\r\n\r\n  function preview(files) {\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        let previewElement = document.getElementById(\"preview-upload\");\r\n        previewElement.setAttribute(\"src\", e.target.result);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  function handleChangew(files) {\r\n    console.log('files', files);\r\n    setImagedata(files[0]);\r\n  }\r\n\r\n  function addFormData(e, file) {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"image\", file[0]);\r\n    console.log('imagedata', file[0]);\r\n    console.log('fd', fd);\r\n    console.log('e', e);\r\n\r\n    Axios.post(\"http://127.0.0.1:8000/api/upload-image\", fd).then((res) => {\r\n      console.log(\"Success uploading file\", res);\r\n    }).catch(e => {\r\n      console.error(e.message);\r\n    });\r\n  }\r\n\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n  //! >>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=>>=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<=<<\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <form id=\"dndform\" onSubmit={addFormData}>\r\n          <div className=\"preview-upload-wrapper\">\r\n            {imageUrl === \"\" ? <img id=\"preview-upload\"/> : null}\r\n            <Dropzone onDrop={onDrop} accept={\"image/*\"}/>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImageDnd;\r\n// import Axios from \"axios\";\r\n// import React from \"react\";\r\n\r\n// class UploadImage extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       imagedata: String,\r\n//     };\r\n//     this.addFormData = this.addFormData.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//   }\r\n//   //FileChange\r\n//   handleChange(file) {\r\n//     this.setState({\r\n//       imagedata: file[0],\r\n//     });\r\n//   }\r\n//   //Form Submission\r\n//   addFormData(evt) {\r\n//     evt.preventDefault();\r\n//     const fd = new FormData();\r\n\r\n//     fd.append(\"image\", this.state.imagedata);\r\n\r\n//     //Post Request to laravel API Route\r\n//     Axios.post(\r\n//       \"http://localhost:8000/\",\r\n//       fd\r\n//     ).then((res) => {\r\n//       this.myFormRef.reset();\r\n//     });\r\n//   }\r\n\r\n//   render(Message) {\r\n//     return (\r\n//       <div>\r\n//         <h1>Therichpost.com</h1>\r\n//         <form ref={(el) => (this.myFormRef = el)}>\r\n//           <label for=\"image\">Image Upload:</label>\r\n//           <input\r\n//             onChange={(e) => this.handleChange(e.target.files)}\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             ref=\"productimage\"\r\n//           />\r\n\r\n//           <button type=\"submit\" onClick={this.addFormData}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default UploadImage;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Login\\index.jsx",["261","262"],"import Axios from \"axios\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookie from 'universal-cookie';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { config } from \"../../../config\";\r\nvar cookies = new Cookie();\r\n\r\nconst Login = ({ onBack, toSignup }) => {\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const [vermethod, setVermethod] = useState(\"email\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  function changeVermethod(e) {\r\n    setVermethod(e.target.value);\r\n  }\r\n\r\n  async function Loginn(e) {\r\n    e.preventDefault();\r\n    let url = `${config.api_host}/api/login`;\r\n    \r\n    if(vermethod === \"email\") {\r\n      let email = document.getElementById('email-input').value;\r\n      let password = document.getElementById(\"pass-input\").value;\r\n      if(email || password && vermethod === \"email\") {\r\n        let body = {email, password}\r\n        setLoading(true);\r\n\r\n        try {\r\n          let response = await Axios.post(url, body);\r\n          dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n          console.log('response Login', response);\r\n          cookies.set('user_token', response.data.data.token.token);\r\n          cookies.set('login', true);\r\n          const token = response.data.data.token.token;\r\n          getUser(token);\r\n        } catch(e) {\r\n          if(e.response) {\r\n            Swal.fire({icon: 'error', title: \"oops...\", text: `${e.message}`});\r\n          } else {\r\n            Swal.fire({icon: 'error', title: `An error occured`});\r\n          }\r\n          console.log('error login ', e)\r\n        }\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      let password = document.getElementById(\"pass-input\").value;\r\n      if(phoneNumber !== \"\" || !password) {\r\n        let body = {hp: phoneNumber, password}\r\n        setLoading(true);\r\n\r\n        try {\r\n          let response = await Axios.post(url, body);\r\n          dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n          cookies.set('user_token', response.data.data.token.token);\r\n          cookies.set('login', true);\r\n          const token = response.data.data.token.token;\r\n          getUser(token);\r\n        } catch(e) {\r\n          Swal.fire({icon: 'error', title: `An error occured`});\r\n          console.log('error login ', e)\r\n        }\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getUser = async (token) => {\r\n    const url = `${config.api_host}/api/user-detail`;\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, {headers: {'Authorization': `Bearer `.concat(token)}});\r\n      cookies.set('user', response.data.user);\r\n      setLoading(false);\r\n      dispatch({type: \"SET_RENDER\"});\r\n    } catch(e) {\r\n      console.error('user detail error: ', e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {CredentialPopup.open && (\r\n        <div className=\"login-modal\">\r\n          <div className=\"l-panel\">\r\n            <button className=\"popup-back\" onClick={onBack}>\r\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            </button>\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Welcome Back!</span>\r\n              <span className=\"small-text\">\r\n                Doesn't have any account? It takes less than a minute.\r\n              </span>\r\n              <button onClick={toSignup}>\r\n                <span>Sign Up</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"r-panel\">\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Log In</span>\r\n              <span className=\"small-text\">\r\n                Welcome back, please use your verified account to login\r\n              </span>\r\n              <form className=\"input-signup\" onSubmit={Loginn}>\r\n                <div\r\n                  className=\"border-input\">\r\n                  {\r\n                    vermethod === \"email\" ? (\r\n                      <input type=\"text\" id=\"email-input\" placeholder=\"Email Address\"/>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={(e) => setPhoneNumber(e.target.value)}\r\n                          id=\"number-input\"\r\n                          placeholder=\"I.e. +6281234567890\"\r\n                        />\r\n                      </Fragment>\r\n                    )\r\n                  }\r\n                  <div className=\"select-vermethod\">\r\n                    <select onChange={changeVermethod} value={vermethod} name=\"vermthod\" id=\"vermethod\">\r\n                      <option value=\"email\">email</option>\r\n                      <option value=\"phone\">phone (OTP)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input type=\"password\" id=\"pass-input\" placeholder=\"Password\" />\r\n                </div>\r\n              <button className=\"submit-signin\" type=\"submit\" disabled={loading}>{loading ? <PulseLoader color=\"#ffffff\" size=\"8\" loading={loading} /> : \"Log In\"}</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\index.js",["263","264","265","266"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../../config/firebase\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\n\r\nconst Credential = () => {\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const node = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  function onBack() {\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: false });\r\n  }\r\n\r\n  function handleClick(e) {\r\n    if (node.current.contains(e.target)) return;\r\n    dispatch({ type: \"CREDENTIAL_POPUP\", open: false });\r\n  }\r\n\r\n  function toSignup() {\r\n    dispatch({ type: \"POPUP_TYPE\", popup: \"signup\" });\r\n  }\r\n\r\n  function toLogin() {\r\n    dispatch({ type: \"POPUP_TYPE\", popup: \"login\" });\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   document.addEventListener(\"mousedown\", handleClick);\r\n\r\n  //   return () => {\r\n  //     document.addEventListener(\"mousedown\", handleClick);\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if (CredentialPopup.open === true) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.add(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if (\r\n      overlay_popup.length &&\r\n      CredentialPopup.open === false\r\n    ) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, [CredentialPopup.open]);\r\n\r\n  return (\r\n    <div className=\"login-node\" ref={node}>\r\n      {CredentialPopup.popup === \"login\" ? (\r\n        <Login onBack={onBack} toSignup={toSignup} />\r\n      ) : (\r\n        <Signup onBack={onBack} toLogin={toLogin} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credential;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Credentials\\Signup\\index.jsx",["267","268","269","270","271","272"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../../../config/firebase\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport Axios from \"axios\";\r\nimport { config } from \"../../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = ({ onBack, toLogin }) => {\r\n  const dispatch = useDispatch();\r\n  const CredentialPopup = useSelector((state) => state.CredentialPopup);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [vermethod, setVermethod] = useState(\"email\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n  const [reset, setReset] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  function changeVermethod(e) {\r\n    setVermethod(e.target.value);\r\n  }\r\n\r\n  \r\n  function sendOTP() {\r\n    const recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n      'size': 'normal',\r\n      'expired-callback': () => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Status Expired',\r\n          text: 'the response to the server has been expired, try again'\r\n        });\r\n      }\r\n    });\r\n\r\n    if (reset) {\r\n      // document.getElementById('recaptcha').style.display = \"block\";\r\n      recaptchaVerifier.render().then(function(widgetId) {\r\n        window.recaptchaWidgetId = widgetId;\r\n      });\r\n      setReset(false);\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, recaptchaVerifier)\r\n      .then((e) => {\r\n        Swal.fire({\r\n          title: 'Insert OTP code we\\'ve sent to you',\r\n          input: 'text',\r\n          inputAttributes: {\r\n            autocapitalize: 'off'\r\n          },\r\n          showCancelButton: true,\r\n          confirmButtonText: 'got it',\r\n          showLoaderOnConfirm: true,\r\n          preConfirm: (code) => {\r\n            return e.confirm(code)\r\n            .then(response => {\r\n                console.log('response firebase', response)\r\n                return response;\r\n              })\r\n              .catch(error => {\r\n                Swal.showValidationMessage(`you're inserting wrong code`)\r\n              })\r\n          },\r\n          allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n          let timerInterval;\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'success',\r\n            text: 'Phone number successfuly authorized',\r\n            html: 'close in <b></b>',\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n              Swal.showLoading();\r\n              timerInterval = setInterval(() => {\r\n                const content = Swal.getContent();\r\n                if (content) {\r\n                  const b = content.querySelector('b');\r\n                  if (b) {\r\n                    b.textContent = Swal.getTimerLeft()\r\n                  }\r\n                }\r\n              }, 100)\r\n            },\r\n            willClose: () => {\r\n              clearInterval(timerInterval)\r\n            }\r\n          }).then(() => {\r\n            // document.getElementById('recaptcha').style.display = \"none\";\r\n          });\r\n          setVerified(true);\r\n        })\r\n\r\n        // let code = prompt(\r\n          //   \"Insert the code we've sent to your phone number\",\r\n          //   \"\"\r\n          // );\r\n        // if (code === null) return;\r\n        // e.confirm(code)\r\n        //   .then((result) => {\r\n          //     Swal.fire({\r\n        //       icon: \"success\",\r\n        //       title: \"Success\",\r\n        //       text: `${result.user.phoneNumber} is Authorized`,\r\n        //     });\r\n        //   })\r\n        //   .catch((e) => {\r\n        //     Swal.fire({\r\n        //       icon: \"error\",\r\n        //       title: \"Failed\",\r\n        //       text: `${e}`,\r\n        //     });\r\n        //   });\r\n      })\r\n      .catch(e => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: `Error ${e.code}`,\r\n          text: `${e.message}. try again`\r\n        }).then(e => {\r\n          recaptchaVerifier.reset();\r\n        });\r\n      })\r\n  }\r\n\r\n  async function register(e) {\r\n    e.preventDefault();\r\n\r\n    let username = document.getElementById('username-input').value;\r\n\r\n    if (vermethod === 'email') {\r\n      var email = document.getElementById('email-input').value;\r\n    } else {\r\n      var phone = document.getElementById('number-input').value.trim();\r\n    }\r\n\r\n    let password = document.getElementById('pass-input').value;\r\n    let c_password = document.getElementById('confirm-pass-input').value;\r\n\r\n    let url = `${config.api_host}/api/register`;\r\n    let body = {\r\n      username,\r\n      password,\r\n      c_password\r\n    }\r\n    console.log('vermethod', vermethod);\r\n    if (vermethod === \"email\") {\r\n      body = {...body, email}\r\n    } else {\r\n      body = {...body, hp: phone}\r\n    }\r\n    console.log('body', body);\r\n\r\n    if(password !== c_password) {\r\n      Swal.fire('passwords do not match');\r\n      setReset(true);\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    if (vermethod !== \"email\" && !verified) {\r\n      alert('you must verified your phone number');\r\n      return false;\r\n    }\r\n    try {\r\n      const response = await Axios.post(url, body);\r\n      if (vermethod === \"email\") {\r\n        Swal.fire({icon: 'success', title: 'Check your mailbox', text: 'Check the verification email we\\'sent to your mailbox'});\r\n        dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n      } else {\r\n        setVerified(false);\r\n        Swal.fire({icon: 'success', title: 'Successfully create an account!'});\r\n        dispatch({type: 'CREDENTIAL_POPUP', open: false});\r\n      }\r\n    } catch(e) {\r\n      console.log('e.response.data', e.response.data)\r\n      if(e.response) {\r\n        Swal.fire({icon: 'error', title: `Ooops... an error occured`});\r\n      } else {\r\n        Swal.fire({icon: 'error', title: `An error occured`});\r\n      }\r\n      setVerified(false);\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {CredentialPopup.open && (\r\n        <div className=\"login-modal\">\r\n          <div className=\"l-panel\">\r\n            <button className=\"popup-back\" onClick={onBack}>\r\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            </button>\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Hello There!</span>\r\n              <span className=\"small-text\">\r\n                If you already have an account please login with your personal\r\n                info\r\n              </span>\r\n              <button onClick={toLogin}>\r\n                <span>Sign In</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"r-panel\">\r\n            <div className=\"content\">\r\n              <span className=\"big-text\">Create Account</span>\r\n              <span className=\"small-text\">\r\n                Doesn't have an account? It takes less than a minute. If you\r\n                already have an account Login\r\n              </span>\r\n              <div className=\"input-signup\">\r\n                <div className=\"border-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"username-input\"\r\n                    placeholder=\"Username\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    vermethod === \"email\"\r\n                      ? \"border-input\"\r\n                      : \"border-input otp-input\"\r\n                  }\r\n                >\r\n                  {vermethod === \"email\" ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"email-input\"\r\n                      placeholder=\"Email Address\"\r\n                    />\r\n                  ) : (\r\n                    <Fragment>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        id=\"number-input\"\r\n                        placeholder=\"i.e. +6281234567890\"\r\n                      />\r\n                      <button onClick={sendOTP}>Send OTP</button>\r\n                    </Fragment>\r\n                  )}\r\n                  <div className=\"select-vermethod\">\r\n                    <select\r\n                      onChange={changeVermethod}\r\n                      value={vermethod}\r\n                      name=\"vermthod\"\r\n                      id=\"vermethod\"\r\n                    >\r\n                      <option value=\"email\">email</option>\r\n                      <option value=\"phone\">phone (OTP)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input type=\"password\" id=\"pass-input\" placeholder=\"Password\" />\r\n                </div>\r\n                <div className=\"border-input\">\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"confirm-pass-input\"\r\n                    placeholder=\"Re-enter Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"recaptcha\" id=\"recaptcha\"></div>\r\n              </div>\r\n              {console.log('verified', verified)}\r\n              <button className=\"submit-signup\" onClick={register} disabled={loading || vermethod !== \"email\" && !verified}>{loading ? <PulseLoader color=\"#ffffff\" size=\"8\" loading={loading} /> : \"Create Account\"}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\pushnotification\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\ListProduct\\index.jsx",["273","274","275","276","277"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { config } from '../../config';\r\nimport { CardList } from '../Components/Card';\r\n\r\nconst ListProduct = () => {\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [type, setType] = useState('');\r\n  const [filterWindow, setFilterWindow] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [condition, setCondition] = useState('');\r\n  const [filter, setFilter] = useState({});\r\n  const [checked, setChecked] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n\r\n  const getProducts = (token, unmounted) => {\r\n    var url = `${config.api_host}/api/search/products`;\r\n    if (type !== '') {\r\n      let body = {sort_by: type};\r\n      Axios.post(url, body, {cancelToken: token})\r\n      .then(response => {\r\n        if(!unmounted) {\r\n          setProducts(response.data.products);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if(!unmounted) {\r\n          console.error(e.message);\r\n          if(Axios.isCancel(e)) {\r\n            console.log(`request cancelled: ${e.message}`);\r\n          } else {\r\n            console.log('Another error happened:' + e.message);\r\n          }\r\n        }\r\n      });\r\n    } if (filter.length > 0) {\r\n      let body = {};\r\n      if (condition !== '') {\r\n        body = {...body, condition}\r\n      }\r\n      if (categories.length > 0) {\r\n        body = {...body, categories}\r\n      }\r\n      if (price.length > 0) {\r\n        body = {...body, price}\r\n      }\r\n      console.log('masuk sini');\r\n      Axios.post(url, body, {cancelToken: token})\r\n      .then(response => {\r\n        if(!unmounted) {\r\n          setProducts(response.data.products);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if(!unmounted) {\r\n          console.error(e.message);\r\n          if(Axios.isCancel(e)) {\r\n            console.log(`request cancelled: ${e.message}`);\r\n          } else {\r\n            console.log('Another error happened:' + e.message);\r\n          }\r\n        }\r\n      });\r\n    } else if (type === '' && condition === '') {\r\n\r\n      const url = `${config.api_host}/api/products`;\r\n      \r\n      Axios.get(url, {cancelToken: token})\r\n      .then(response => {\r\n        if(!unmounted) {\r\n          setProducts(response.data.products);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if(!unmounted) {\r\n          console.error(e.message);\r\n          if(Axios.isCancel(e)) {\r\n            console.log(`request cancelled: ${e.message}`);\r\n          } else {\r\n            console.log('Another error happened:' + e.message);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const getCategories = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/category`;\r\n\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setCategories(response.data.categories);\r\n      }\r\n    } catch (e) {\r\n      if(!unmounted) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const categoryHandle = (item) => {\r\n    let itemInt = parseInt(item);\r\n    if (checked.includes(itemInt)) {\r\n      setChecked(checked.filter(cat => cat != itemInt));\r\n    } else {\r\n      setChecked([...checked, itemInt]);\r\n    }\r\n  }\r\n  \r\n  const checkHandler = e => {\r\n    const value = e.target.value;\r\n    categoryHandle(value);\r\n  }\r\n\r\n  const limitPrice = event => {\r\n    if (event.target.value > 0) {\r\n      let value = event.target.value;\r\n      var name = event.target.id;\r\n      setPrice({...price, min: value});\r\n      if (name = 'min') {\r\n        if (price.includes('min')) {\r\n          console.log('masuk ops ini');\r\n        }\r\n      } else {\r\n        setPrice({...price, max: value});\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getProducts(source.token, unmounted);\r\n\r\n    return function() {\r\n      unmounted = true;\r\n      source.cancel(\"cancelling in cleanup\");\r\n    }\r\n  }, [type, condition, ]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(source.token, unmounted);\r\n\r\n    return function() {\r\n      unmounted = true;\r\n      source.cancel(\"cancelling in cleanup\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('price', price)}\r\n      <div className=\"overlay-popup\">\r\n        <section className=\"products-sect\">\r\n          <div className=\"container\">\r\n            <div className=\"products-box\">\r\n              <div className=\"list-header\">\r\n                <div className=\"filter\">\r\n                  <span className=\"title\">Filter</span>\r\n                  <input type=\"checkbox\" id=\"filter-toggle\" />\r\n                  <label htmlFor=\"filter-toggle\" onClick={e => {setFilterWindow(!filterWindow)}}>\r\n                    <span className=\"fil-span\"></span>\r\n                  </label>\r\n                </div>\r\n                <div className=\"sortby\">\r\n                  <div className=\"sortby-title\"><span>Sort by</span></div>\r\n                  <button className={type === 'name' ? \"sortby-name active\" : \"sortby-name\"} onClick={e => setType('name')}>A - Z</button>\r\n                  <button className={type === 'rating' ? \"sortby-rating active\" : \"sortby-rating\"} onClick={e => setType('rating')}>Rating</button>\r\n                  <div className=\"sortby-dropdown\">\r\n                    <select name=\"sortby\" onChange={e => setType(e.target.value)}>\r\n                      <option selected disabled>Price</option>\r\n                      <option value=\"max_price\">most expensive</option>\r\n                      <option value=\"min_price\">cheapest</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"list-products\">\r\n                <div className={filterWindow ? \"filter-window show\" : \"filter-window hide\"}>\r\n                  <div className=\"conditions\">\r\n                    <button className=\"new-btn\" onClick={e => setCondition(true)}>New</button>\r\n                    <button className=\"second-btn\" onClick={e => setCondition(false)}>Second</button>\r\n                  </div>\r\n                  <div className=\"categories-opt\">\r\n                    <ul>\r\n                      {categories.slice(1, 6).map((category, i) => \r\n                        <li key={i}>\r\n                          <div className=\"type-checkbox\">\r\n                            <input type=\"checkbox\" value={category.id} onClick={e => {checkHandler(e)}} id={`${category.name}-box`} />\r\n                            <label htmlFor={`${category.name}-box`}>\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            <p className=\"label-title\">{category.name}</p>\r\n                          </div>\r\n                        </li>\r\n                      )}\r\n                      <li className=\"show-wrapper\">\r\n                        <ul>\r\n                          {categories.slice(6, categories.length).map((category, i) =>\r\n                            <li>\r\n                              <div className=\"type-checkbox\">\r\n                                <input type=\"checkbox\" value={category.id} onClick={e => checkHandler(e)} id={`${category.name}-box`} />\r\n                                <label htmlFor={`${category.name}-box`}>\r\n                                  <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <p className=\"label-title\">{category.name}</p>\r\n                              </div>\r\n                            </li>\r\n                          )}\r\n                        </ul>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"limit-price\">\r\n                    <input type=\"number\" id=\"min\" onChange={e => limitPrice(e)} placeholder=\"min\" />\r\n                    <input type=\"number\" id=\"max\" onChange={e => limitPrice(e)} placeholder=\"max\" />\r\n                  </div>\r\n                </div>\r\n                {products.map((product, i) => \r\n                  <CardList image={product.images[0].id} name={product.name} productId={product.id} price={product.price} sold={product.sold} rate={product.rate}/>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListProduct;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Register\\index.jsx",["278","279","280","281","282"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from \"react-select\";\r\nimport Swal from 'sweetalert2';\r\nimport Cookie from 'universal-cookie';\r\nimport Shop from '../../../assets/images/clip-art/shop.png';\r\nimport { config } from '../../../config';\r\nconst cookies = new Cookie();\r\n\r\nexport const Register = () => {\r\n  const [groupedOptions, setGroupedOptions] = useState([]);\r\n  const [city_id, setCity_id] = useState('');\r\n  const [city_name, setCity_name] = useState('');\r\n  const node = useRef();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const getCity = async (token) => {\r\n    // own Proxy Server\r\n    const proxUrl = \"http://localhost:2901/proxy/starter/city\";\r\n    try {\r\n      let response = await Axios.get(proxUrl, {\r\n        headers: { key: \"11fa41eaf62c64584a90b03a759c5296\" },\r\n        cancelToken: token,\r\n      });\r\n\r\n      var contain = response.data.rajaongkir.results.map((result) => ({\r\n        value: result.city_id,\r\n        label: result.city_name,\r\n        province: result.province,\r\n      }));\r\n\r\n      var provinsi = response.data.rajaongkir.results.map((result) => ({\r\n        label: result.province,\r\n      }));\r\n\r\n      removeDuplicate(provinsi, contain);\r\n    } catch (e) {\r\n      if (Axios.isCancel(e)) {\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  function removeDuplicate(p, c) {\r\n    let uniqueProvince = Array.from(new Set(p.map((a) => a.label)));\r\n    var i = 0;\r\n    var groupedOptions = [];\r\n    for (i = 0; i < uniqueProvince.length; i++) {\r\n      const filteredCity = c.filter(\r\n        (city) => city.province == uniqueProvince[i]\r\n      );\r\n      groupedOptions[i] = {\r\n        label: uniqueProvince[i],\r\n        options: [...filteredCity, filteredCity],\r\n      };\r\n      groupedOptions[i][\"options\"].pop();\r\n    }\r\n    setGroupedOptions(groupedOptions);\r\n  }\r\n\r\n  const handleSelect = (addressVal) => {\r\n    setCity_id(addressVal.value);\r\n    setCity_name(addressVal.label);\r\n  };\r\n  \r\n  const formatGroupLabel = (data) => (\r\n    <div style={groupStyles}>\r\n      <span>{data.label}</span>\r\n      <span style={groupBadgeStyles}>{data.options.length}</span>\r\n    </div>\r\n  );\r\n\r\n  const openShop = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = `${config.api_host}/api/open-store`;\r\n    let name = document.getElementsByName('shopname')[0].value;\r\n    let header = {\r\n      'Authorization': `Bearer `.concat(cookies.get('user_token'))\r\n    }\r\n\r\n    let body = {\r\n      name,\r\n      city_id,\r\n      city_name\r\n    }\r\n    console.log('body', body);\r\n    try {\r\n      const response = await Axios.post(url, body, {headers: header});\r\n      dispatch({type: \"REGISTER_SHOP\", registered: true});\r\n      Swal.fire({icon: 'success', title: 'your shop has been created', text: 'Let\\'s fill up your store with your products!'}).then(() => {history.push('/seller/dashboard?seller=new')});\r\n    } catch(e) {\r\n      Swal.fire({icon: 'error', title: 'Oops...', text: 'An error Occured'});\r\n      console.error('Failure created a store: ', e);\r\n    }\r\n  }\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  const groupBadgeStyles = {\r\n    backgroundColor: \"#EBECF0\",\r\n    borderRadius: \"2em\",\r\n    color: \"#172B4D\",\r\n    display: \"inline-block\",\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    lineHeight: \"1\",\r\n    minWidth: 1,\r\n    padding: \"0.16666666666667em 0.5em\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = Axios.CancelToken.source();\r\n    getCity(source.token);\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"op-shop\">\r\n        <div className=\"container\">\r\n          <div className=\"open-shop-grid\">\r\n            <div className=\"vector-art\">\r\n              <div className=\"vector-title\">\r\n                <span>Make a unique shop name, always looks good</span>\r\n                <p>Use a short and simple name to make your shop easy for buyers to remember.</p>\r\n              </div>\r\n              <div className=\"vector-image\">\r\n                <img src={Shop} alt=\"shop\"/>\r\n              </div>\r\n            </div>\r\n            <form onSubmit={openShop} className=\"open-shop-input\">\r\n              <span className=\"greeting_2\">Hello, <b className=\"bold\">{cookies.get('user').name ? cookies.get('user').name.split(' ').slice(0, 2).join(' ') : cookies.get('user').username}</b> let's fill in your shop details!</span>\r\n\r\n              <div className=\"name-shop-input\">\r\n                <h4>Enter Your Shop Name</h4>\r\n                <label htmlFor=\"shopname\">Shop Name</label>\r\n                <input type=\"text\" name=\"shopname\" id=\"shopname\"/>\r\n                <small>Make sure your store name is entered correctly</small>\r\n              </div>\r\n\r\n              <div className=\"address-shop-input\">\r\n                <h4>Enter Your Shop City Address</h4>\r\n                <label htmlFor=\"shopcity\">City Address</label>\r\n                <Select\r\n                  options={groupedOptions}\r\n                  formatGroupLabel={formatGroupLabel}\r\n                  onChange={handleSelect}\r\n                  autoFocus={true}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\">create your shop</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Register;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Dashboard\\index.jsx",["283","284","285"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Vector from '../../../assets/images/clip-art/dashboard_vector.png';\r\nimport Cookie from 'universal-cookie';\r\nimport Axios from 'axios';\r\nimport { config } from '../../../config';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useQuery } from '../../../utils';\r\nconst cookies = new Cookie();\r\n\r\nconst Dashboard = () => {\r\n  const [totalReviews, setTotalReviews] = useState();\r\n  const [totalProducts, setTotalProducts] = useState();\r\n  const [popup, setPopup] = useState(false);\r\n  let history = useHistory();\r\n  let query = useQuery();\r\n\r\n  const storeReviews = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/store-reviews`;\r\n    const url2 = `${config.api_host}/api/store-products`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n\r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotalReviews(response.data.data.total);\r\n      }\r\n\r\n      const response2 = await Axios.get(url2, {headers: header, cancelToken: token});\r\n      if (!unmounted) {\r\n        setTotalProducts(response2.data.data.total);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        if(Axios.isCancel(e)) {\r\n          console.error(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened:' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    storeReviews(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query.get('seller')) {\r\n      setPopup(true)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"dashboard\">\r\n        <div className=\"panel-title\"><span>Dashboard</span></div>\r\n        <div className=\"greeting-seller\">\r\n          <h1>Welcome, {cookies.get('user').name ? cookies.get('user').name.split(' ').slice(0, 2).join(' ') : cookies.get('user').username}</h1>\r\n          <span>If you are not making any mistake,<br/> It means you are not doing anything</span>\r\n        </div>\r\n        <div className=\"stats-space\">\r\n          <div className=\"stats-card\">\r\n            <h4>{totalProducts}</h4>\r\n            <span>Total Products</span>\r\n            <button onClick={() => history.push('/seller/products')}>Your Products</button>\r\n          </div>\r\n          <div className=\"stats-card\">\r\n            <h4>{totalReviews}</h4>\r\n            <span>Total Reviews</span>\r\n            <button>Your Products</button>\r\n          </div>\r\n          <div className=\"stats-card\">\r\n            <h4>42</h4>\r\n            <span>Total Products</span>\r\n            <button>Your Products</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"action-space\">\r\n          \r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Menu\\index.jsx",["286"],"import React, { Fragment } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"menu-panel\">\r\n        <NavLink to=\"/seller/dashboard\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"fas fa-columns\"></i>\r\n          &nbsp;\r\n          Dashboard\r\n        </NavLink>\r\n        <NavLink to=\"/seller/products\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"far fa-list-alt\"></i>\r\n          &nbsp;\r\n          Your Products\r\n        </NavLink>\r\n        <NavLink to=\"/seller/settings\" activeClassName=\"panel__link--active\" className=\"panel__link\">\r\n          <i class=\"fas fa-cog\"></i>\r\n          &nbsp;\r\n          Store Settings\r\n        </NavLink>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Menu;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\Products\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\add.jsx",["287"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport GridLoader from 'react-spinners/GridLoader';\r\nimport BeatLoader from 'react-spinners/BeatLoader';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nvar cookies = new Cookie();\r\n\r\nexport const Add = () => {\r\n  const [name, setName] = useState('');\r\n  const [condition, setCondition] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [categoriesOpt, setCategoriesOpt] = useState([]);\r\n  const [price, setPrice] = useState();\r\n  const [priceValidation, setPriceValidation] = useState();\r\n  const [stock, setStock] = useState();\r\n  const [stockValidation, setStockValidation] = useState();\r\n  const [heavy, setHeavy] = useState();\r\n  const [heavyValidation, setHeavyValidation] = useState();\r\n  const [description, setDescription] = useState('');\r\n\r\n  let history = useHistory();\r\n\r\n  const addProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = `${config.api_host}/api/create-product`\r\n    const body = {\r\n      name,\r\n      desc: description,\r\n      price,\r\n      stock,\r\n      condition,\r\n      heavy,\r\n      categories: categories\r\n    }\r\n    console.log('body', body);\r\n    const header = {\r\n      'Authorization': `Bearer ${cookies.get('user_token')}`\r\n    }\r\n\r\n    setLoading2(true);\r\n    try {\r\n      const response = await Axios.post(url, body, {headers: header});\r\n      setLoading2(false);\r\n      history.push(`/seller/upload-product/${response.data.product.id}`);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      setLoading2(false)\r\n    }\r\n  }\r\n\r\n  const getCategories = async (unmounted, token) => {\r\n    const url = `${config.api_host}/api/category`;\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.get(url, {cancelToken: token});\r\n      if (!unmounted) {\r\n        setCategoriesOpt(response.data.categories);\r\n      }\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      if (Axios.isCancel(e)) {\r\n        console.error('request cancelled', e);\r\n      } else {\r\n        console.error('Another error happened', e.message);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const categoryHandle = (item) => {\r\n    if (categories.includes(item)) {\r\n      setCategories(categories.filter(cat => cat != item));\r\n    } else {\r\n      setCategories([...categories, item]);\r\n    }\r\n  }\r\n\r\n  const checkHandler = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    categoryHandle(value);\r\n  }\r\n\r\n  const integerHandle = (e, type) => {\r\n    let value = e.target.value;\r\n    if (value.length > 0) {\r\n      if (value.includes(\",\") || value.includes(\".\")) {\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(false);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(false);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(false);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        value = parseInt(value);\r\n        switch (type) {\r\n          case 'price':\r\n            setPriceValidation(true);\r\n            setPrice(value);\r\n            break;\r\n          case 'stock':\r\n            setStockValidation(true);\r\n            setStock(value);\r\n            break;\r\n          case 'heavy':\r\n            setHeavyValidation(true);\r\n            setHeavy(value);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      switch (type) {\r\n        case 'price':\r\n          setPriceValidation(undefined);\r\n          setPrice(undefined);\r\n          break;\r\n        case 'stock':\r\n          setStockValidation(undefined);\r\n          setStock(undefined);\r\n          break;\r\n        case 'heavy':\r\n          setHeavyValidation(undefined);\r\n          setHeavy(undefined);\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCondition = (value) => {\r\n    let isSet = (value === 'true');\r\n    setCondition(isSet);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCategories(unmounted, source.token);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log('stockValidation', stockValidation)}\r\n      <form onSubmit={addProduct}>\r\n        <div className=\"product-information-form\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Product Information</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Product Name</h6>\r\n                <small className=\"text-secondary\">Name min. 5 words, consisting of the type <br/> of product, brand, and descriptions such <br/> as color, material or type.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"text\" className={name.length === 0 ? \"w-100 form-control\" : name.length < 5 ? \"w-100 form-control is-invalid\" : \"w-100 form-control is-valid\"} onChange={e => setName(e.target.value)} maxLength=\"70\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\"><h6>Category</h6></div>\r\n              <div className=\"input-form category-badge-form col-7\">\r\n                <div className=\"load\"><GridLoader color=\"#00ce75\" size=\"10\" loading={loading} /></div>\r\n                {categoriesOpt.length > 0 && \r\n                  categoriesOpt.map((category, i) => \r\n                    <Fragment>\r\n                      <input type=\"checkbox\" id={`category-input ${category.id}`} onChange={e => checkHandler(e)} value={category.id}/>\r\n                      <label htmlFor={`category-input ${category.id}`}><span className=\"badge bg-secondary text-light\">{category.name}</span></label>\r\n                    </Fragment>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"product-information-form mt-4\">\r\n          <div className=\"product-information-header\">\r\n            <h5>Detail Product</h5>\r\n          </div>\r\n          <div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\"><h6>Condition</h6></div>\r\n              <div className=\"input-form col-7 radio-input\">\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='true' />\r\n                  <span>New</span>\r\n                </div>\r\n                <div className=\"condition-input\">\r\n                  <input type=\"radio\" name=\"condition\" onChange={e => handleCondition(e.target.value)} value='false' />\r\n                  <span>Second</span>\r\n                </div>\r\n                {/* // <small className=\"invalid-small text-danger d-flex align-items-center\">\r\n                //   <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-exclamation-circle mr-2\" viewBox=\"0 0 16 16\">\r\n                //     <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                //     <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n                //   </svg>\r\n                //   More example invalid feedback text\r\n                // </small> */}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Price</h6>\r\n                <small className=\"text-secondary\">Enter the product price with number only. Do not use <br/> \".\" or \",\" when your're typing your product price.</small>\r\n              </div>\r\n              <div className=\"input-form price-input col-7\">\r\n                <span>Rp</span>\r\n                <input type=\"number\" className={priceValidation === undefined ? \"w-100 form-control\" : priceValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'price')}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group d-flex align-items-center\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Stock</h6>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <input type=\"number\" className={stockValidation === undefined ? \"w-100 form-control\" : stockValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'stock')} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Weight</h6>\r\n                <small className=\"text-secondary\">Product weight is typed in grams to make it easier during the checkout process. Make sure you fill <br/> it in correctly, e.g. 1000, 1600, 2000, etc.</small>\r\n              </div>\r\n              <div className=\"input-form heavy-input col-7\">\r\n                <span>gram</span>\r\n                <input type=\"number\" className={heavyValidation === undefined ? \"w-100 form-control\" : heavyValidation ? \"w-100 form-control is-valid\" : \"w-100 form-control is-invalid\"} onChange={e => integerHandle(e, 'heavy')}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row group\">\r\n              <div className=\"title-form col-5\">\r\n                <h6>Description</h6>\r\n                <small className=\"text-secondary\">The product description min. 5 words. Make sure the product description contains specifications, sizes, materials, validity period, and others. The more details, the more useful it is for the buyer.</small>\r\n              </div>\r\n              <div className=\"input-form col-7\">\r\n                <textarea className={description.length < 1 ? \"form-control\" : description.length > 4 ? \"form-control is-valid\" : \"form-control is-invalid\"} id=\"exampleFormControlTextarea1\" rows=\"5\" onChange={e => setDescription(e.target.value)}></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"next-form-btn\" type=\"submit\" onSubmit={addProduct}>{loading2 ? <BeatLoader color=\"#ffffff\" size=\"8\"/> : 'Add Product'}</button>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Add;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\upload.jsx",["288","289","290","291","292","293","294","295","296","297","298","299"],"import Axios from 'axios';\r\nimport React, { Fragment, useState, useCallback, useEffect } from 'react'\r\nimport Dropzone from './Dropzone';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { config } from '../../../config';\r\nimport Cookie from 'universal-cookie';\r\nvar cookies = new Cookie();\r\n\r\nexport const Upload = () => {\r\n  const {id} = useParams();\r\n  const [imagedata, setImagedata] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [previews, setPreview] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentUpload, setCurrentUpload] = useState(1);\r\n  const [successUpload, setSuccessUpload] = useState(1);\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const onDrop = useCallback((acceptedFile, p) => {\r\n    console.log('acceptedFile', acceptedFile);\r\n    console.log('currentUpload', currentUpload);\r\n    // handleChangew(acceptedFile);\r\n    var form = document.getElementById('imageform');\r\n    setImageUrl(acceptedFile);\r\n    var event = new Event('submit');\r\n    form.dispatchEvent(event);\r\n    addFormData(event, acceptedFile);\r\n  }, []);\r\n\r\n  function preview(files, i) {\r\n    i = i - 2;\r\n    if (files && files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.onload = function(e) {\r\n        console.log('i', i);\r\n        let previewElement = document.getElementsByClassName('preview-img');\r\n        \r\n        if (previewElement[i].hasAttribute('src')) {\r\n          previewElement[i+1].setAttribute('src', e.target.result);\r\n        } else {\r\n          previewElement[i].setAttribute('src', e.target.result);\r\n        }\r\n        console.log('previewElement', previewElement);\r\n      }\r\n\r\n      reader.readAsDataURL(files[0]); //? Convert to base64 string\r\n    }\r\n  }\r\n\r\n  async function addFormData(e, file) {\r\n    e.preventDefault();\r\n    \r\n    const fd = new FormData();\r\n    const url = `${config.api_host}/api/store-image/${id}`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`};\r\n\r\n    const options = {\r\n      headers: header,\r\n      onUploadProgress: (progressEvent) => {\r\n        const {loaded, total} = progressEvent;\r\n        let percent = Math.floor( (loaded * 100) / total )\r\n        console.log(`${loaded}kb of ${total}kb | ${percent}%`);\r\n        if (percent < 100) {\r\n          setUploadPercentage(percent)\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    \r\n    fd.append(\"image\", file[0]);\r\n    console.log('imagedata', file[0]);\r\n    console.log('fd', fd);\r\n    console.log('e', e);\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await Axios.post(url, fd, options);\r\n      setCurrentUpload(currentUpload => currentUpload + 1);\r\n      setSuccessUpload(successUpload => successUpload + 1);\r\n      setInterval(() => {\r\n        setUploadPercentage(100);\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        setUploadPercentage(0);\r\n      }, 1000);\r\n      \r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    preview(imageUrl, successUpload);\r\n  }, [successUpload]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"imagesform\">\r\n        <div className=\"product-information-form\">\r\n          <div className=\"product-information-header img-form\">\r\n            <div className=\"title-form\"><h6>Upload Product</h6></div>\r\n          </div>\r\n          <small className=\"text-secondary\">Image format .jpg .jpeg .png .jfif .webp and minimum size of 300 x 300px (For optimal image use minimum size of 570 x 570 px). <br/></small>\r\n          <small className=\"text-secondary mt-3\">Select product photos or drag and drop up to 6 product photos here.</small>\r\n          <form id=\"imageform\" onSubmit={addFormData}>\r\n            <div className=\"preview-upload-wrapper\">\r\n              <div className=\"guide-vector main\"></div>\r\n              {loading && currentUpload === 1 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload1\"/>}\r\n              {successUpload > 1 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('one')} />\r\n            </div>\r\n\r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 2 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 2 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector front\"></div>\r\n              {loading && currentUpload === 2 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload2\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('two')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 3 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 3 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector right\"></div>\r\n              {loading && currentUpload === 3 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload3\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('three')} />\r\n            </div>\r\n\r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 4 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 4 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector upper\"></div>\r\n              {loading && currentUpload === 4 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload4\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('four')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 5 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 5 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector detail\"></div>\r\n              {loading && currentUpload === 5 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload5\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('five')} />\r\n            </div>\r\n            \r\n            <div className=\"preview-upload-wrapper\">\r\n              {currentUpload === 6 ? null : <div className=\"disabled\"></div>}\r\n              {successUpload > 6 ? <div className=\"disabled success\"><i class=\"bi bi-cloud-check\"></i></div> : null}\r\n              <div className=\"guide-vector back\"></div>\r\n              {loading && currentUpload === 6 && \r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${uploadPercentage}%` }} aria-valuenow={uploadPercentage} aria-valuemin=\"0\" aria-valuemax=\"100\">{uploadPercentage}%</div>\r\n                </div>\r\n              }\r\n              {imageUrl === \"\" ? null : <img className=\"preview-img\" id=\"preview-upload6\"/>}\r\n              <Dropzone onDrop={onDrop} accept={\"image/*\"} preview={e => setPreview('six')} />\r\n            </div>\r\n            <button onClick={() => history.push('/seller/products')}>Finish</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Upload;","A:\\Tugas Akhir\\marketplacef\\src\\experiment\\uploadImage\\Dropzone.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Store\\crud\\Dropzone.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\ImageLoad.jsx",["300"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst ImageLoad = React.memo(({ src, placeholder, alt = \"\", className = \"\", styles }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentSrc, updateSrc] = useState(placeholder);\r\n\r\n  useEffect(() => {\r\n    // Start loading original image\r\n    const imageToLoad = new Image();\r\n    imageToLoad.src = src;\r\n    imageToLoad.onload = () => {\r\n      // Saat image terload sepenuhnya, ganti src dan loading ke false\r\n      setLoading(false);\r\n      updateSrc(src);\r\n    }\r\n  }, [src])\r\n\r\n  return (\r\n    <img src={currentSrc} style={{ opacity: loading ? 0.6 : 0.9, transition: \"opacity .15s linear\" }} alt={alt} className={className} style={styles} />\r\n  )\r\n});\r\n\r\nexport default ImageLoad;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Guarder\\AuthGuarder.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\Notfound.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Components\\GettingStarted.jsx",["301","302"],"import React, { Fragment, useEffect } from 'react'\r\nimport { useQuery } from '../../utils'\r\nimport NewSeller from '../../assets/images/clip-art/new_seller.png';\r\n\r\nexport const GettingStarted = () => {\r\n  let query = useQuery();\r\n  const seller_type = query.get('seller');\r\n\r\n  const removePopup = () => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n    document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n    for (let i = 0; i < overlay_popup.length; i++) {\r\n      overlay_popup[i].classList.remove(\"popup-open\");\r\n    }\r\n\r\n    document.getElementsByClassName('getting-started')[0].remove();\r\n  }\r\n\r\n  useEffect(() => {\r\n    var overlay_popup = document.getElementsByClassName(\"overlay-popup\");\r\n    if (seller_type === 'new') {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"hidden\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.add(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.add(\"popup-open\");\r\n      }\r\n    } else if (overlay_popup.length && seller_type) {\r\n      document.getElementsByTagName(\"html\")[0].style.overflowY = \"scroll\";\r\n      document.getElementsByTagName(\"nav\")[0].classList.remove(\"nav-popup\");\r\n      for (let i = 0; i < overlay_popup.length; i++) {\r\n        overlay_popup[i].classList.remove(\"popup-open\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {seller_type === 'new' && (\r\n        <div className=\"getting-started\">\r\n          {/* <button onClick={removePopup}>Let's do this</button> */}\r\n          <div className=\"sementara gs-vector\">\r\n            <div className=\"gs-img-wrap\">\r\n              <img src={NewSeller} alt=\"vector\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"gs-title\">\r\n            <span>Welcome New Member</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default GettingStarted;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Cart\\index.jsx",["303","304","305","306","307","308","309","310","311","312","313","314","315"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { currencyFormatter, soldFormatter } from \"../../../utils\";\r\nimport { config } from \"../../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport ImageLoad from \"../../Components/ImageLoad\";\r\nimport Placeholder from '../../../assets/images/clip-art/placeholder.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst cookies = new Cookies();\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const CartReducer = useSelector(state => state.CartReducer);\r\n  const [products, setProducts] = useState([]);\r\n  const [value, setValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [render, setRender] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const getCart = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/get-cart`;\r\n    const auth = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n    console.log('masuk sini');\r\n    try {\r\n      const response = await Axios.get(url, { headers: auth, cancelToken: token });\r\n      if (!unmounted) {\r\n        setProducts(response.data.data.products);\r\n        amountItem(response.data.data.products);\r\n        total(response.data.data.products);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        console.error(e.message);\r\n        if (Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.error('Another error happened: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeItem = async (product_id) => {\r\n    const url = `${config.api_host}/api/remove-cart`\r\n    const body = { product_id }\r\n    const auth = { 'Authorization': `Bearer ${cookies.get('user_token')}` }\r\n\r\n    setLoading(true)\r\n    try {\r\n      const response = await Axios.post(url, body, { headers: auth });\r\n      console.log('response', response);\r\n      dispatch({ type: \"CART_RENDER\" });\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const inputChange = (value, product_id) => {\r\n    let int = parseInt(value);\r\n    products.map((product) => {\r\n      if (value < 1) {\r\n        if (product.id === product_id) {\r\n          product.amount = product.amount;\r\n          return;\r\n        }\r\n        \r\n      }\r\n      if (product.id === product_id) {\r\n        product.amount = int;\r\n      }\r\n    })\r\n    setRender(render => render + 1)\r\n  }\r\n\r\n  const count = (product_id, type) => {\r\n    switch (type) {\r\n      case 'plus':\r\n        console.log('product_id', product_id);\r\n        products.map((product) => {\r\n          if (product.id === product_id) {\r\n            product.amount++;\r\n          }\r\n        })\r\n        setRender(render => render + 1)\r\n        break;\r\n\r\n      case 'minus':\r\n        console.log('product_id', product_id);\r\n        products.map((product) => {\r\n          if (product.id === product_id) {\r\n            if (product.amount < 2) {\r\n              return;\r\n            }\r\n            product.amount--;\r\n          }\r\n        })\r\n        setRender(render => render + 1)\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const amountItem = (list = products) => {\r\n    var per_product = [];\r\n    let final;\r\n\r\n    list.map((product) => {\r\n      per_product = [...per_product, product.amount];\r\n    })\r\n    \r\n    final = per_product.reduce((a, b) => a + b, 0);\r\n    setTotalItem(final);\r\n  }\r\n\r\n  const total = (list = products) => {\r\n    var per_product = [];\r\n    let final;\r\n\r\n    list.map((product) => {\r\n      let count = (product.price * product.amount);\r\n      per_product = [...per_product, count];\r\n    })\r\n    console.log('counting', per_product);\r\n    \r\n    final = per_product.reduce((a, b) => a + b, 0).toString();\r\n    setTotalPrice(final);\r\n  }\r\n\r\n  const validate = (user_id) => {\r\n    console.log('user_id', user_id);\r\n    const user = cookies.get('user');\r\n    if (user.name === null || user.address === null || user.city_id === null) {\r\n      alert('You must complete your data before going to the checkout section');\r\n      history.push('/user/settings')\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const goCheckout = () => {\r\n    const validation = validate(cookies.get('user').id);\r\n    if (validation) {\r\n      history.push('/order-checkout');\r\n    }\r\n    dispatch({type: 'CHECKOUT', products: products});\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getCart(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel('Cancelling in cleanup');\r\n    }\r\n  }, [CartReducer.render]);\r\n\r\n  useEffect(() => {\r\n    total();\r\n    amountItem();\r\n  }, [render]);\r\n  \r\n  return (\r\n    <Fragment>\r\n      {console.log('products', products)}\r\n      <section className=\"cart-sect\">\r\n        <div className=\"cart-cont\">\r\n          <div className=\"cart-title\">\r\n            <span>Shopping Cart</span>\r\n          </div>\r\n          <div className=\"cart-content\">\r\n            <div className=\"cart-main\">\r\n              <div className=\"cart-list\">\r\n                {products.map((product) => (\r\n                  <div className=\"cart-card\">\r\n                    <div className=\"product-image\">\r\n                      <ImageLoad placeholder={Placeholder} src={`${config.api_host}/api/image/${product.image[0].id}`} alt=\"product\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"product-name\">\r\n                      <div className=\"truncate\" style={{ WebkitLineClamp: \"1\" }} >\r\n                        <span className=\"name\">{product.name}</span>\r\n                      </div>\r\n                      <span>{product.store}</span>\r\n                    </div>\r\n                    <div className=\"input-amount\">\r\n                      <button\r\n                      onClick={() => count(product.id, 'minus')}\r\n                      >\r\n                        <i class=\"fas fa-minus\"></i>\r\n                      </button>\r\n                      <input type=\"number\" name=\"amount\" id=\"quantity-input\" min=\"1\" onKeyPress={event => event.charCode >= 48} onChange={e => inputChange(e.target.value, product.id)} value={product.amount} />\r\n                      <button\r\n                      onClick={() => count(product.id, 'plus')}\r\n                      >\r\n                        <i class=\"fas fa-plus\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"total-price\">\r\n                      <span>{currencyFormatter(product.price)}</span>\r\n                    </div>\r\n                    <div className=\"remove-cart\">\r\n                      <button disabled={loading} style={{ cursor: loading ? 'not-allowed' : 'pointer' }} onClick={() => removeItem(product.id)}><i class=\"fas fa-times\"></i></button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"cart-checkout-wrapper\">\r\n              <div className=\"cart-checkout\">\r\n                <div className=\"pay-title\">\r\n                  <span>Shopping Summary</span>\r\n                </div>\r\n                <div className=\"detail-payment\">\r\n                  <div className=\"total-price\">\r\n                    <span>Total Price ({totalItem} item)</span>\r\n                  </div>\r\n                  <div className=\"price-amount\">\r\n                    <span>{currencyFormatter(totalPrice)}</span>\r\n                  </div>\r\n                </div>\r\n                <hr className=\"payment-divider\" />\r\n                <div className=\"checkout-total\">\r\n                  <div className=\"total-price\">Subtotal</div>\r\n                  <div className=\"price-amount\">{currencyFormatter(totalPrice)}</div>\r\n                </div>\r\n                <button onClick={goCheckout}>Beli</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Cart;\r\n","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\Buyer\\Checkout\\index.jsx",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Settings\\index.jsx",["342","343","344","345","346","347","348","349"],"import Axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { config } from '../../../config';\r\nimport ImageLoad from '../../Components/ImageLoad';\r\nimport Placeholder from '../../../assets/images/clip-art/placeholder.png';\r\nimport CircleLoader from 'react-spinners/ClipLoader';\r\nimport Select from 'react-select';\r\nimport Cookie from 'universal-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nvar cookies = new Cookie();\r\n\r\nconst Settings = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [allCity, setAllCity] = useState([]);\r\n  const [userImage, setUserImage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [groupedOptions, setGroupedOptions] = useState([]);\r\n  const [render, setRender] = useState(0);\r\n  const [inputemail, setInputemail] = useState('');\r\n  const [inputname, setInputname] = useState('');\r\n  const [inputusername, setInputusername] = useState('');\r\n  const [inputgender, setInputgender] = useState('');\r\n  const [inputphone, setInputphone] = useState('');\r\n  const [inputaddress, setInputaddress] = useState('');\r\n  const [city_id, setCity_id] = useState([]);\r\n  const [city_name, setCity_name] = useState([]);\r\n  const [inputbirthdate, setInputbirthdate] = useState('');\r\n  const [inputprofile, setInputprofile] = useState('');\r\n  const [inputavatar, setInputavatar] = useState('');\r\n  const [validFileExt, setValidFileExt] = useState(['webp', 'jpg', 'jpeg', 'png', 'jfif']);\r\n  const [validMail, setValidMail] = useState();\r\n  let history = useHistory();\r\n  \r\n  const validate = (e) => {\r\n    var imageName = document.getElementById('input-avatar').value;\r\n    var blnValid = false;\r\n    for (let j = 0; j < validFileExt.length; j++) {\r\n      var imageCurExtension = validFileExt[j];\r\n      if (imageName.substr(imageName.length - imageCurExtension.length, imageCurExtension.length).toLowerCase() == imageCurExtension.toLowerCase()) {\r\n        blnValid = true;\r\n        let form = document.getElementById('avatar-form');\r\n        let event = new Event('submit');\r\n        form.dispatchEvent(event)\r\n        addFormData(event, e);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!blnValid) {\r\n      alert(\"Sorry, \" + imageName.substr(12, imageName.length) + \" is invalid, allowed extensions are \" + validFileExt.join(', '));\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getUser = async (token, unmounted) => {\r\n    const url = `${config.api_host}/api/user-detail`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    setLoading(true)\r\n    try {\r\n      const response = await Axios.get(url, {headers: header, cancelToken: token});\r\n      if(!unmounted) {\r\n        setUser(response.data.user);\r\n        setUserImage(response.data.user.image.id);\r\n        cookies.set('user', response.data.user, {path: '/'});\r\n        console.log('response user', response);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      if(!unmounted) {\r\n        console.error(e.message);\r\n        if(Axios.isCancel(e)) {\r\n          console.log(`request cancelled: ${e.message}`);\r\n        } else {\r\n          console.log('Another error happened:' + e.message);\r\n        }\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getCity = async (token, unmounted) => {\r\n    // own Proxy Server\r\n    const proxUrl = \"http://localhost:2901/proxy/starter/city\";\r\n    try {\r\n      let response = await Axios.get(proxUrl, {\r\n        headers: { key: \"11fa41eaf62c64584a90b03a759c5296\" },\r\n        cancelToken: token,\r\n      });\r\n      if (!unmounted) { \r\n        var contain = response.data.rajaongkir.results.map((result) => ({\r\n          value: result.city_id,\r\n          label: result.city_name,\r\n          province: result.province,\r\n        }));\r\n        setAllCity(contain);\r\n        console.log('contain', contain);\r\n        \r\n        var provinsi = response.data.rajaongkir.results.map((result) => ({\r\n          label: result.province,\r\n        }));\r\n        \r\n        removeDuplicate(provinsi, contain);\r\n      }\r\n    } catch (e) {\r\n      if (!unmounted) {\r\n        if (Axios.isCancel(e)) {\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function removeDuplicate(p, c) {\r\n    let uniqueProvince = Array.from(new Set(p.map((a) => a.label)));\r\n    var i = 0;\r\n    var groupedOptions = [];\r\n    for (i = 0; i < uniqueProvince.length; i++) {\r\n      const filteredCity = c.filter(\r\n        (city) => city.province == uniqueProvince[i]\r\n      );\r\n      groupedOptions[i] = {\r\n        label: uniqueProvince[i],\r\n        options: [...filteredCity, filteredCity],\r\n      };\r\n      groupedOptions[i][\"options\"].pop();\r\n    }\r\n    setGroupedOptions(groupedOptions);\r\n  }\r\n\r\n  const handleSelect = (addressVal) => {\r\n    setCity_id(addressVal.value);\r\n    setCity_name(addressVal.label);\r\n    console.log('city_id', addressVal.value)\r\n  };\r\n  \r\n  const formatGroupLabel = (data) => (\r\n    <div style={groupStyles}>\r\n      <span>{data.label}</span>\r\n      <span style={groupBadgeStyles}>{data.options.length}</span>\r\n    </div>\r\n  );\r\n\r\n  async function addFormData(e, files) {\r\n    e.preventDefault();\r\n    const url = `${config.api_host}/api/update-avatar`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    const fd = new FormData();\r\n    \r\n    fd.append(\"image\", files[0]);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await Axios.post(url, fd, {headers: header});\r\n      setUserImage(response.data.user.image.id);\r\n      setLoading(false)\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Fail update avatar');\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  function updateUser(e) {\r\n    e.preventDefault();\r\n\r\n    const url = `${config.api_host}/api/user-update`;\r\n    const header = {'Authorization': `Bearer ${cookies.get('user_token')}`}\r\n    let body = {}\r\n\r\n    if (inputname.length > 0) {\r\n      body = {...body, name: inputname}\r\n    }\r\n    if (inputusername.length > 0) {\r\n      body = {...body, username: inputusername}\r\n    }\r\n    if (inputgender.length > 0) {\r\n      body = {...body, gender: inputgender}\r\n    }\r\n    if (inputphone.length > 0) {\r\n      body = {...body, hp: inputphone}\r\n    }\r\n    if (inputaddress.length > 0) {\r\n      body = {...body, address: inputaddress}\r\n    }\r\n    console.log('city_name', city_name)\r\n    if (city_id.length > 0) {\r\n      body = {...body, city_id, city_name}\r\n    }\r\n    if (inputbirthdate.length > 0) {\r\n      body = {...body, dob: inputbirthdate}\r\n    }\r\n    if (inputprofile.length > 0) {\r\n      body = {...body, profile: inputprofile}\r\n    }\r\n\r\n    Axios.post(url, body, {headers: header})\r\n    .then(() => {\r\n      setRender(render => render + 1);\r\n    })\r\n    .catch(e => {\r\n      console.error('Fail update user : ', e);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = Axios.CancelToken.source();\r\n    getUser(source.token, unmounted);\r\n    getCity(source.token, unmounted);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel(\"Cancelling request in cleanup\");\r\n    }\r\n  }, [render]);\r\n\r\n  const emailValidation = (email) => {\r\n    if (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n      setValidMail(true);\r\n      return;\r\n    }\r\n    setValidMail(false);\r\n  }\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  const groupBadgeStyles = {\r\n    backgroundColor: \"#EBECF0\",\r\n    borderRadius: \"2em\",\r\n    color: \"#172B4D\",\r\n    display: \"inline-block\",\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    lineHeight: \"1\",\r\n    minWidth: 1,\r\n    padding: \"0.16666666666667em 0.5em\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"profile-sect\">\r\n        <div className=\"container\">\r\n          <div className=\"row d-flex\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row d-flex w-100 align-items-center justify-content-center\">\r\n                <div className=\"col-lg-2\">\r\n                  <div className=\"avatar-wrapper\" style={{ width: '100px', overflow: 'hidden' }}>\r\n                    {loading ? <CircleLoader color=\"#123123\" /> : <ImageLoad src={`${config.api_host}/api/image/${userImage}`} placeholder={Placeholder}/>}\r\n                    <form id=\"avatar-form\" onSubmit={addFormData}>\r\n                      <label htmlFor=\"input-avatar\"><i class=\"bi bi-pencil-fill\"></i></label>\r\n                      <input type=\"file\" id=\"input-avatar\" onChange={e => validate(e.target.files)}/>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-10\">\r\n                  <div className=\"d-flex flex-column w-100\">\r\n                    {\r\n                      loading ?\r\n                        <Fragment>\r\n                          <div className=\"line-loading loading\" style={{ width: '30%', height: '23px' }}></div>\r\n                          <div className=\"line-loading loading mt-2\" style={{ width: '20%', height: '20px' }}></div>\r\n                        </Fragment>\r\n                      :\r\n                        <Fragment>\r\n                          {user.name ? <h4>{user.name}</h4> : <h5>Oops... let's fill your name</h5>}\r\n                          {user.email ? <span className=\"profile-email mt-2\">{user.email}</span> : <Fragment><input type=\"email\" onChange={e => {emailValidation(e.target.value); setInputemail(e.target.value)}} className=\"email-profile-input\"/><span>{inputemail !== '' ? validMail.toString() : null}</span></Fragment>}\r\n                        </Fragment>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <form onSubmit={updateUser}>\r\n\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Fullname</label><input onChange={e => setInputname(e.target.value)} className=\"input-profile text-center\" type=\"text\" defaultValue={user.name}/></div>\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Username</label><input onChange={e => setInputusername(e.target.value)} className=\"input-profile text-center\" type=\"text\" defaultValue={user.username}/></div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\">\r\n                <label className=\"profile-label\">Gender</label>\r\n                <select name=\"gender\" id=\"\" className=\"input-profile text-center\" onChange={e => setInputgender(e.target.value)}>\r\n                  <option className=\"text-center\" value=\"\" selected disabled>Choose</option>\r\n                  <option className=\"text-center\" selected={user.gender === 'Male'} value=\"Male\">Male</option>\r\n                  <option className=\"text-center\" selected={user.gender === 'Female'} value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Phone</label><input onChange={e => setInputphone(e.target.value)} className=\"input-profile text-center\" type=\"text\" defaultValue={user.hp}/></div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Bithdate</label><input onChange={e => setInputbirthdate(e.target.value)} className=\"input-profile text-center\" type=\"date\" defaultValue={user.dob}/></div>\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Profile</label><input onChange={e => setInputprofile(e.target.value)} className=\"input-profile text-center\" type=\"text\" defaultValue={user.profile} placeholder=\"short profile of yourself\"/></div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">Address</label><input onChange={e => setInputaddress(e.target.value)} className=\"input-profile text-center\" type=\"text\" defaultValue={user.address}/></div>\r\n              \r\n              <div className=\"col-6 input-profile-wrapper d-flex flex-column\"><label className=\"profile-label\">City</label><div style={{ width: '75%' }}><Select options={groupedOptions} defaultValue={user.city_id ? allCity.filter(city => parseInt(city.value) === user.city_id)[0] : ''} formatGroupLabel={formatGroupLabel} onChange={handleSelect}/></div></div>\r\n            </div>\r\n            <div className=\"row mt-4 justify-content-center\">\r\n              <div className=\"col-4\">\r\n                <button className=\"submit-profile\" disabled={loading} type=\"submit\" onClick={updateUser}>{loading ? <CircleLoader size=\"15\" color=\"#fff\" /> : 'Save Changes'}</button>\r\n              </div>\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Settings;","A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\index.jsx",[],"A:\\Tugas Akhir\\marketplacef\\src\\Pages\\User\\Menu\\index.jsx",[],{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":15,"column":10,"nodeType":"356","messageId":"357","endLine":15,"endColumn":26},{"ruleId":"354","severity":1,"message":"358","line":2,"column":25,"nodeType":"356","messageId":"357","endLine":2,"endColumn":33},{"ruleId":"354","severity":1,"message":"359","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"360","line":16,"column":9,"nodeType":"356","messageId":"357","endLine":16,"endColumn":22},{"ruleId":"354","severity":1,"message":"361","line":20,"column":10,"nodeType":"356","messageId":"357","endLine":20,"endColumn":16},{"ruleId":"354","severity":1,"message":"362","line":20,"column":18,"nodeType":"356","messageId":"357","endLine":20,"endColumn":27},{"ruleId":"354","severity":1,"message":"363","line":21,"column":10,"nodeType":"356","messageId":"357","endLine":21,"endColumn":17},{"ruleId":"354","severity":1,"message":"364","line":23,"column":10,"nodeType":"356","messageId":"357","endLine":23,"endColumn":14},{"ruleId":"354","severity":1,"message":"365","line":23,"column":16,"nodeType":"356","messageId":"357","endLine":23,"endColumn":23},{"ruleId":"366","severity":1,"message":"367","line":189,"column":6,"nodeType":"368","endLine":189,"endColumn":8,"suggestions":"369"},{"ruleId":"354","severity":1,"message":"370","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"371","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":17},{"ruleId":"354","severity":1,"message":"372","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":21},{"ruleId":"354","severity":1,"message":"373","line":15,"column":14,"nodeType":"356","messageId":"357","endLine":15,"endColumn":19},{"ruleId":"354","severity":1,"message":"374","line":12,"column":10,"nodeType":"356","messageId":"357","endLine":12,"endColumn":22},{"ruleId":"354","severity":1,"message":"373","line":13,"column":14,"nodeType":"356","messageId":"357","endLine":13,"endColumn":19},{"ruleId":"354","severity":1,"message":"375","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":20},{"ruleId":"354","severity":1,"message":"376","line":14,"column":14,"nodeType":"356","messageId":"357","endLine":14,"endColumn":19},{"ruleId":"366","severity":1,"message":"377","line":29,"column":6,"nodeType":"368","endLine":29,"endColumn":19,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":59,"column":9,"nodeType":"381","endLine":59,"endColumn":12},{"ruleId":"382","severity":1,"message":"383","line":60,"column":11,"nodeType":"381","endLine":60,"endColumn":94},{"ruleId":"366","severity":1,"message":"384","line":88,"column":6,"nodeType":"368","endLine":88,"endColumn":8,"suggestions":"385"},{"ruleId":"354","severity":1,"message":"386","line":3,"column":5,"nodeType":"356","messageId":"357","endLine":3,"endColumn":12},{"ruleId":"354","severity":1,"message":"387","line":30,"column":9,"nodeType":"356","messageId":"357","endLine":30,"endColumn":20},{"ruleId":"354","severity":1,"message":"388","line":37,"column":10,"nodeType":"356","messageId":"357","endLine":37,"endColumn":19},{"ruleId":"354","severity":1,"message":"389","line":37,"column":21,"nodeType":"356","messageId":"357","endLine":37,"endColumn":33},{"ruleId":"354","severity":1,"message":"390","line":44,"column":17,"nodeType":"356","messageId":"357","endLine":44,"endColumn":25},{"ruleId":"354","severity":1,"message":"391","line":45,"column":18,"nodeType":"356","messageId":"357","endLine":45,"endColumn":27},{"ruleId":"354","severity":1,"message":"392","line":46,"column":19,"nodeType":"356","messageId":"357","endLine":46,"endColumn":29},{"ruleId":"354","severity":1,"message":"393","line":50,"column":9,"nodeType":"356","messageId":"357","endLine":50,"endColumn":12},{"ruleId":"366","severity":1,"message":"394","line":111,"column":6,"nodeType":"368","endLine":111,"endColumn":19,"suggestions":"395"},{"ruleId":"396","severity":1,"message":"397","line":143,"column":9,"nodeType":"398","messageId":"399","endLine":143,"endColumn":53},{"ruleId":"400","severity":1,"message":"401","line":143,"column":33,"nodeType":"402","messageId":"403","endLine":143,"endColumn":35},{"ruleId":"354","severity":1,"message":"404","line":175,"column":9,"nodeType":"356","messageId":"357","endLine":175,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":177,"column":38,"nodeType":"398","messageId":"407","endLine":177,"endColumn":40},{"ruleId":"405","severity":1,"message":"408","line":230,"column":24,"nodeType":"398","messageId":"409","endLine":230,"endColumn":26},{"ruleId":"366","severity":1,"message":"410","line":271,"column":6,"nodeType":"368","endLine":271,"endColumn":8,"suggestions":"411"},{"ruleId":"379","severity":1,"message":"380","line":282,"column":9,"nodeType":"381","endLine":282,"endColumn":12},{"ruleId":"382","severity":1,"message":"383","line":283,"column":11,"nodeType":"381","endLine":286,"endColumn":12},{"ruleId":"354","severity":1,"message":"412","line":11,"column":10,"nodeType":"356","messageId":"357","endLine":11,"endColumn":27},{"ruleId":"354","severity":1,"message":"413","line":11,"column":29,"nodeType":"356","messageId":"357","endLine":11,"endColumn":42},{"ruleId":"354","severity":1,"message":"414","line":13,"column":23,"nodeType":"356","messageId":"357","endLine":13,"endColumn":34},{"ruleId":"354","severity":1,"message":"415","line":23,"column":10,"nodeType":"356","messageId":"357","endLine":23,"endColumn":12},{"ruleId":"354","severity":1,"message":"373","line":23,"column":14,"nodeType":"356","messageId":"357","endLine":23,"endColumn":19},{"ruleId":"405","severity":1,"message":"408","line":82,"column":24,"nodeType":"398","messageId":"409","endLine":82,"endColumn":26},{"ruleId":"366","severity":1,"message":"416","line":110,"column":6,"nodeType":"368","endLine":110,"endColumn":17,"suggestions":"417"},{"ruleId":"379","severity":1,"message":"380","line":121,"column":9,"nodeType":"381","endLine":121,"endColumn":12},{"ruleId":"354","severity":1,"message":"418","line":5,"column":7,"nodeType":"356","messageId":"357","endLine":5,"endColumn":18},{"ruleId":"354","severity":1,"message":"419","line":46,"column":7,"nodeType":"356","messageId":"357","endLine":46,"endColumn":21},{"ruleId":"354","severity":1,"message":"420","line":83,"column":9,"nodeType":"356","messageId":"357","endLine":83,"endColumn":14},{"ruleId":"421","severity":1,"message":"422","line":98,"column":13,"nodeType":"381","endLine":98,"endColumn":61},{"ruleId":"354","severity":1,"message":"423","line":116,"column":10,"nodeType":"356","messageId":"357","endLine":116,"endColumn":19},{"ruleId":"354","severity":1,"message":"424","line":117,"column":20,"nodeType":"356","messageId":"357","endLine":117,"endColumn":31},{"ruleId":"354","severity":1,"message":"425","line":141,"column":12,"nodeType":"356","messageId":"357","endLine":141,"endColumn":25},{"ruleId":"382","severity":1,"message":"383","line":170,"column":32,"nodeType":"381","endLine":170,"endColumn":58},{"ruleId":"426","severity":1,"message":"427","line":28,"column":16,"nodeType":"428","messageId":"429","endLine":28,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":28,"column":28,"nodeType":"428","messageId":"429","endLine":28,"endColumn":30},{"ruleId":"354","severity":1,"message":"370","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"430","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":35},{"ruleId":"354","severity":1,"message":"431","line":3,"column":8,"nodeType":"356","messageId":"357","endLine":3,"endColumn":16},{"ruleId":"354","severity":1,"message":"432","line":16,"column":12,"nodeType":"356","messageId":"357","endLine":16,"endColumn":23},{"ruleId":"354","severity":1,"message":"433","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":36},{"ruleId":"354","severity":1,"message":"434","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":13},{"ruleId":"354","severity":1,"message":"435","line":20,"column":7,"nodeType":"356","messageId":"357","endLine":20,"endColumn":14},{"ruleId":"354","severity":1,"message":"436","line":173,"column":13,"nodeType":"356","messageId":"357","endLine":173,"endColumn":21},{"ruleId":"426","severity":1,"message":"427","line":277,"column":86,"nodeType":"428","messageId":"429","endLine":277,"endColumn":88},{"ruleId":"426","severity":1,"message":"427","line":277,"column":111,"nodeType":"428","messageId":"429","endLine":277,"endColumn":113},{"ruleId":"354","severity":1,"message":"437","line":13,"column":18,"nodeType":"356","messageId":"357","endLine":13,"endColumn":27},{"ruleId":"400","severity":1,"message":"438","line":111,"column":44,"nodeType":"402","messageId":"403","endLine":111,"endColumn":46},{"ruleId":"439","severity":1,"message":"440","line":127,"column":11,"nodeType":"441","messageId":"442","endLine":127,"endColumn":23},{"ruleId":"354","severity":1,"message":"443","line":127,"column":11,"nodeType":"356","messageId":"357","endLine":127,"endColumn":15},{"ruleId":"366","severity":1,"message":"444","line":146,"column":6,"nodeType":"368","endLine":146,"endColumn":25,"suggestions":"445"},{"ruleId":"354","severity":1,"message":"446","line":16,"column":9,"nodeType":"356","messageId":"357","endLine":16,"endColumn":13},{"ruleId":"396","severity":1,"message":"397","line":54,"column":9,"nodeType":"398","messageId":"399","endLine":54,"endColumn":53},{"ruleId":"400","severity":1,"message":"401","line":54,"column":33,"nodeType":"402","messageId":"403","endLine":54,"endColumn":35},{"ruleId":"354","severity":1,"message":"436","line":93,"column":13,"nodeType":"356","messageId":"357","endLine":93,"endColumn":21},{"ruleId":"366","severity":1,"message":"447","line":127,"column":6,"nodeType":"368","endLine":127,"endColumn":8,"suggestions":"448"},{"ruleId":"354","severity":1,"message":"449","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"450","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":15},{"ruleId":"366","severity":1,"message":"451","line":58,"column":6,"nodeType":"368","endLine":58,"endColumn":8,"suggestions":"452"},{"ruleId":"354","severity":1,"message":"453","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"400","severity":1,"message":"438","line":77,"column":50,"nodeType":"402","messageId":"403","endLine":77,"endColumn":52},{"ruleId":"354","severity":1,"message":"423","line":11,"column":10,"nodeType":"356","messageId":"357","endLine":11,"endColumn":19},{"ruleId":"354","severity":1,"message":"454","line":11,"column":21,"nodeType":"356","messageId":"357","endLine":11,"endColumn":33},{"ruleId":"354","severity":1,"message":"455","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":18},{"ruleId":"366","severity":1,"message":"456","line":30,"column":6,"nodeType":"368","endLine":30,"endColumn":8,"suggestions":"457"},{"ruleId":"354","severity":1,"message":"436","line":81,"column":13,"nodeType":"356","messageId":"357","endLine":81,"endColumn":21},{"ruleId":"366","severity":1,"message":"458","line":100,"column":6,"nodeType":"368","endLine":100,"endColumn":21,"suggestions":"459"},{"ruleId":"382","severity":1,"message":"383","line":119,"column":41,"nodeType":"381","endLine":119,"endColumn":92},{"ruleId":"382","severity":1,"message":"383","line":133,"column":41,"nodeType":"381","endLine":133,"endColumn":92},{"ruleId":"382","severity":1,"message":"383","line":146,"column":41,"nodeType":"381","endLine":146,"endColumn":92},{"ruleId":"382","severity":1,"message":"383","line":159,"column":41,"nodeType":"381","endLine":159,"endColumn":92},{"ruleId":"382","severity":1,"message":"383","line":172,"column":41,"nodeType":"381","endLine":172,"endColumn":92},{"ruleId":"382","severity":1,"message":"383","line":185,"column":41,"nodeType":"381","endLine":185,"endColumn":92},{"ruleId":"460","severity":1,"message":"461","line":19,"column":135,"nodeType":"462","endLine":19,"endColumn":149},{"ruleId":"354","severity":1,"message":"463","line":9,"column":9,"nodeType":"356","messageId":"357","endLine":9,"endColumn":20},{"ruleId":"366","severity":1,"message":"464","line":35,"column":6,"nodeType":"368","endLine":35,"endColumn":8,"suggestions":"465"},{"ruleId":"354","severity":1,"message":"413","line":3,"column":29,"nodeType":"356","messageId":"357","endLine":3,"endColumn":42},{"ruleId":"354","severity":1,"message":"466","line":16,"column":10,"nodeType":"356","messageId":"357","endLine":16,"endColumn":15},{"ruleId":"354","severity":1,"message":"467","line":16,"column":17,"nodeType":"356","messageId":"357","endLine":16,"endColumn":25},{"ruleId":"405","severity":1,"message":"406","line":66,"column":28,"nodeType":"398","messageId":"407","endLine":66,"endColumn":30},{"ruleId":"468","severity":1,"message":"469","line":69,"column":28,"nodeType":"470","messageId":"471","endLine":69,"endColumn":42},{"ruleId":"405","severity":1,"message":"408","line":70,"column":11,"nodeType":"472","messageId":"473","endLine":70,"endColumn":18},{"ruleId":"405","severity":1,"message":"408","line":85,"column":32,"nodeType":"398","messageId":"409","endLine":85,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":95,"column":32,"nodeType":"398","messageId":"407","endLine":95,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":98,"column":15,"nodeType":"472","messageId":"473","endLine":98,"endColumn":22},{"ruleId":"405","severity":1,"message":"408","line":116,"column":24,"nodeType":"398","messageId":"409","endLine":116,"endColumn":26},{"ruleId":"405","severity":1,"message":"408","line":128,"column":24,"nodeType":"398","messageId":"409","endLine":128,"endColumn":26},{"ruleId":"366","severity":1,"message":"474","line":166,"column":6,"nodeType":"368","endLine":166,"endColumn":26,"suggestions":"475"},{"ruleId":"366","severity":1,"message":"476","line":171,"column":6,"nodeType":"368","endLine":171,"endColumn":14,"suggestions":"477"},{"ruleId":"354","severity":1,"message":"478","line":12,"column":10,"nodeType":"356","messageId":"357","endLine":12,"endColumn":16},{"ruleId":"354","severity":1,"message":"479","line":12,"column":18,"nodeType":"356","messageId":"357","endLine":12,"endColumn":27},{"ruleId":"354","severity":1,"message":"480","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":17},{"ruleId":"354","severity":1,"message":"481","line":13,"column":19,"nodeType":"356","messageId":"357","endLine":13,"endColumn":29},{"ruleId":"354","severity":1,"message":"482","line":14,"column":10,"nodeType":"356","messageId":"357","endLine":14,"endColumn":17},{"ruleId":"354","severity":1,"message":"361","line":15,"column":10,"nodeType":"356","messageId":"357","endLine":15,"endColumn":16},{"ruleId":"354","severity":1,"message":"483","line":16,"column":10,"nodeType":"356","messageId":"357","endLine":16,"endColumn":17},{"ruleId":"354","severity":1,"message":"392","line":16,"column":19,"nodeType":"356","messageId":"357","endLine":16,"endColumn":29},{"ruleId":"354","severity":1,"message":"484","line":18,"column":9,"nodeType":"356","messageId":"357","endLine":18,"endColumn":17},{"ruleId":"354","severity":1,"message":"485","line":19,"column":7,"nodeType":"356","messageId":"357","endLine":19,"endColumn":11},{"ruleId":"354","severity":1,"message":"435","line":20,"column":7,"nodeType":"356","messageId":"357","endLine":20,"endColumn":14},{"ruleId":"405","severity":1,"message":"408","line":23,"column":32,"nodeType":"398","messageId":"409","endLine":23,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":31,"column":32,"nodeType":"398","messageId":"409","endLine":31,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":39,"column":32,"nodeType":"398","messageId":"409","endLine":39,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":50,"column":32,"nodeType":"398","messageId":"409","endLine":50,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":51,"column":35,"nodeType":"398","messageId":"409","endLine":51,"endColumn":37},{"ruleId":"405","severity":1,"message":"408","line":67,"column":32,"nodeType":"398","messageId":"409","endLine":67,"endColumn":34},{"ruleId":"405","severity":1,"message":"408","line":93,"column":34,"nodeType":"398","messageId":"409","endLine":93,"endColumn":36},{"ruleId":"354","severity":1,"message":"486","line":124,"column":9,"nodeType":"356","messageId":"357","endLine":124,"endColumn":15},{"ruleId":"405","severity":1,"message":"408","line":124,"column":57,"nodeType":"398","messageId":"409","endLine":124,"endColumn":59},{"ruleId":"405","severity":1,"message":"408","line":132,"column":24,"nodeType":"398","messageId":"409","endLine":132,"endColumn":26},{"ruleId":"405","severity":1,"message":"408","line":134,"column":40,"nodeType":"398","messageId":"409","endLine":134,"endColumn":42},{"ruleId":"354","severity":1,"message":"487","line":146,"column":11,"nodeType":"356","messageId":"357","endLine":146,"endColumn":24},{"ruleId":"405","severity":1,"message":"408","line":150,"column":34,"nodeType":"398","messageId":"409","endLine":150,"endColumn":36},{"ruleId":"405","severity":1,"message":"408","line":151,"column":37,"nodeType":"398","messageId":"409","endLine":151,"endColumn":39},{"ruleId":"366","severity":1,"message":"488","line":170,"column":6,"nodeType":"368","endLine":170,"endColumn":8,"suggestions":"489"},{"ruleId":"354","severity":1,"message":"490","line":29,"column":10,"nodeType":"356","messageId":"357","endLine":29,"endColumn":21},{"ruleId":"354","severity":1,"message":"491","line":29,"column":23,"nodeType":"356","messageId":"357","endLine":29,"endColumn":37},{"ruleId":"354","severity":1,"message":"492","line":30,"column":24,"nodeType":"356","messageId":"357","endLine":30,"endColumn":39},{"ruleId":"354","severity":1,"message":"435","line":32,"column":7,"nodeType":"356","messageId":"357","endLine":32,"endColumn":14},{"ruleId":"400","severity":1,"message":"401","line":39,"column":113,"nodeType":"402","messageId":"403","endLine":39,"endColumn":115},{"ruleId":"396","severity":1,"message":"397","line":120,"column":9,"nodeType":"398","messageId":"399","endLine":120,"endColumn":53},{"ruleId":"400","severity":1,"message":"401","line":120,"column":33,"nodeType":"402","messageId":"403","endLine":120,"endColumn":35},{"ruleId":"366","severity":1,"message":"447","line":216,"column":6,"nodeType":"368","endLine":216,"endColumn":14,"suggestions":"493"},"no-native-reassign",["494"],"no-negated-in-lhs",["495"],"no-unused-vars","'PushNotification' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Avatar' is defined but never used.","'RenderReducer' is assigned a value but never used.","'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'clicked' is assigned a value but never used.","'cart' is assigned a value but never used.","'setCart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["496"],"'Fragment' is defined but never used.","'Quickview' is defined but never used.","'smallBanner' is assigned a value but never used.","'setId' is assigned a value but never used.","'gratisongkir' is assigned a value but never used.","'useHistory' is defined but never used.","'setUd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["497"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["498"],"'cookies' is assigned a value but never used.","'CartReducer' is assigned a value but never used.","'provinces' is assigned a value but never used.","'setProvinces' is assigned a value but never used.","'setBerat' is assigned a value but never used.","'setOrigin' is assigned a value but never used.","'setCourier' is assigned a value but never used.","'arr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'estOngkir' and 'prevDestination'. Either include them or remove the dependency array.",["499"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'existCheck' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'getCity' and 'getProduct'. Either include them or remove the dependency array.",["500"],"'currencyFormatter' is defined but never used.","'soldFormatter' is defined but never used.","'useSelector' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Quickview'. Either include it or remove the dependency array.",["501"],"'UploadImage' is assigned a value but never used.","'UploadImageIbb' is assigned a value but never used.","'style' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'imagedata' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'handleChangew' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useState' is defined but never used.","'firebase' is defined but never used.","'handleClick' is defined but never used.","'useEffect' is defined but never used.","'css' is defined but never used.","'history' is assigned a value but never used.","'response' is assigned a value but never used.","'setFilter' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["502"],"'node' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCity'. Either include it or remove the dependency array.",["503"],"'Vector' is defined but never used.","'popup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["504"],"'Link' is defined but never used.","'setImagedata' is assigned a value but never used.","'previews' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'addFormData' and 'currentUpload'. Either include them or remove the dependency array.",["505"],"React Hook useEffect has a missing dependency: 'imageUrl'. Either include it or remove the dependency array.",["506"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'removePopup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'seller_type'. Either include it or remove the dependency array.",["507"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-self-assign","'product.amount' is assigned to itself.","MemberExpression","selfAssignment","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["508"],"React Hook useEffect has missing dependencies: 'amountItem' and 'total'. Either include them or remove the dependency array.",["509"],"'downed' is assigned a value but never used.","'setDowned' is assigned a value but never used.","'downed2' is assigned a value but never used.","'setDowned2' is assigned a value but never used.","'loading' is assigned a value but never used.","'courier' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'result' is assigned a value but never used.","'handleCourier' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CheckoutReducer.products', 'getCost', 'grouped', and 'groupedProducts'. Either include them or remove the dependency array.",["510"],"'inputavatar' is assigned a value but never used.","'setInputavatar' is assigned a value but never used.","'setValidFileExt' is assigned a value but never used.",["511"],"no-global-assign","no-unsafe-negation",{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},"Update the dependencies array to be: [login]",{"range":"544","text":"545"},"Update the dependencies array to be: [QReducer.id, getProduct]",{"range":"546","text":"547"},"Update the dependencies array to be: [handleClick]",{"range":"548","text":"549"},"Update the dependencies array to be: [destination, estOngkir, prevDestination]",{"range":"550","text":"551"},"Update the dependencies array to be: [getCity, getProduct]",{"range":"552","text":"553"},"Update the dependencies array to be: [Quickview, productId]",{"range":"554","text":"555"},"Update the dependencies array to be: [type, condition, getProducts]",{"range":"556","text":"557"},"Update the dependencies array to be: [getCity]",{"range":"558","text":"559"},"Update the dependencies array to be: [query]",{"range":"560","text":"561"},"Update the dependencies array to be: [addFormData, currentUpload]",{"range":"562","text":"563"},"Update the dependencies array to be: [imageUrl, successUpload]",{"range":"564","text":"565"},"Update the dependencies array to be: [seller_type]",{"range":"566","text":"567"},"Update the dependencies array to be: [CartReducer.render, getCart]",{"range":"568","text":"569"},"Update the dependencies array to be: [amountItem, render, total]",{"range":"570","text":"571"},"Update the dependencies array to be: [CheckoutReducer.products, getCost, grouped, groupedProducts]",{"range":"572","text":"573"},"Update the dependencies array to be: [getCity, render]",{"range":"574","text":"575"},[5661,5663],"[login]",[870,883],"[QReducer.id, getProduct]",[2369,2371],"[handleClick]",[3710,3723],"[destination, estOngkir, prevDestination]",[8136,8138],"[getCity, getProduct]",[3524,3535],"[Quickview, productId]",[4158,4177],"[type, condition, getProducts]",[3775,3777],"[getCity]",[1825,1827],"[query]",[1173,1175],"[addFormData, currentUpload]",[3136,3151],"[imageUrl, successUpload]",[1472,1474],"[seller_type]",[4846,4866],"[CartReducer.render, getCart]",[4931,4939],"[amountItem, render, total]",[5381,5383],"[CheckoutReducer.products, getCost, grouped, groupedProducts]",[7092,7100],"[getCity, render]"]